{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/position.md","hash":"4d385cd33e2bf1bd16606f85ffaab3939f8342ff","modified":1560924305000},{"_id":"public/2019/06/19/position/index.html","hash":"b6e9f8ff154c6f9057e7dea61f2b145e219f7162","modified":1677132830926},{"_id":"public/archives/index.html","hash":"d5e68dd07281ecc059bff7aa35c4952be4140ffe","modified":1677132830842},{"_id":"public/archives/2019/index.html","hash":"a129b19c48fd9b6e6854b554aed1697097014556","modified":1677132830925},{"_id":"public/archives/2019/06/index.html","hash":"3095789b2764615e8ca5277fa7efcea66e7cf8b9","modified":1677132830926},{"_id":"public/index.html","hash":"a0232c7f75d46b090604df06867b05088cfcfcae","modified":1677132830926},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1560919979000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1560919979000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1560919979000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1560919979000},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1560919979000},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1560919979000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1560919979000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1560919979000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1560919979000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1560919979000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1560919979000},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1560919979000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1560919979000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1560919979000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1560919979000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1560919979000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1560919979000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1560919979000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1560919979000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1560919979000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1560919979000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1560919979000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1560919979000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1560919979000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1560919979000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1560919979000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1560919979000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1560919979000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1560919979000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1560919979000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1560919979000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1560919979000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1560919979000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1560919979000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1560919979000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1560919979000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1560919979000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1560919979000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1560919979000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1560919979000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1560919979000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1560919979000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1560919979000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1560919979000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1560919979000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1560919979000},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1560927478081},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1560927478081},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1560927478081},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1560927478081},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1560927478081},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1560927478081},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1560927478081},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1560927478081},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1560927478081},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1560927478081},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1560927478414},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1560927478448},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1560927478448},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1560927478448},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1560927478448},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1560927478449},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1560927478449},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1560927478449},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1560927478449},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1560927478450},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1560927478450},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1560927478452},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1560927478452},{"_id":"source/_posts/BFC.md","hash":"b985b87fe18889ea6643e41e04c9bd0c1cc6d6e9","modified":1677132820777},{"_id":"source/_posts/DNS.md","hash":"ad26641e8f61326bf19b3b9cf02647ae0503812f","modified":1677132820805},{"_id":"source/_posts/Promise.md","hash":"249ecf188f5ebc552650f0d73f7ba7a11a980137","modified":1677132820887},{"_id":"source/_posts/cookbook.md","hash":"c35d0c66bf18039423145a79a9f5949f5efcc38d","modified":1677132820791},{"_id":"source/_posts/health.md","hash":"7a62af7d423afce68fead0929755c30e94cbd6c7","modified":1677132820822},{"_id":"source/_posts/jsTypeTransfer.md","hash":"eae220e71c6091a384fa37aa7e398f4f9b7b31f9","modified":1677132820834},{"_id":"source/_posts/leetCode_coin.md","hash":"9364e0880d5a8f2527fdbe12471c186f65bb5c41","modified":1677132820850},{"_id":"source/_posts/mongodb.md","hash":"417f386146094b0f4e7dd402d49d5776fbc1efed","modified":1677132820867},{"_id":"public/2023/02/23/mongodb/index.html","hash":"5d7d927aed651d03464294ce5fdd345e34fc2387","modified":1677132830928},{"_id":"public/2023/02/01/health/index.html","hash":"9db5586fe0bffb79fcc2ac70c92d75322bd20db9","modified":1677132830928},{"_id":"public/2020/02/21/BFC/index.html","hash":"6913889e8c85ce7cbc97f31ffccf7e4753dae6bd","modified":1677132830928},{"_id":"public/2018/08/20/DNS/index.html","hash":"4dae46cc532e73bb2eb79c5aaad11ab5f93ec167","modified":1677132830928},{"_id":"public/archives/2018/06/index.html","hash":"ecbd2a62e082fdff041ee877897fe8f1b3967f5e","modified":1677132830928},{"_id":"public/archives/2018/index.html","hash":"66a22d8cc3df494cdd8e6e1ce3a889e3cd8a1da8","modified":1677132830928},{"_id":"public/archives/2018/08/index.html","hash":"cd162e43d630fec8047c871640b05e673687aad7","modified":1677132830928},{"_id":"public/archives/2020/index.html","hash":"c3ab916e4cbb31df47a4b73411c872cbfcf86abc","modified":1677132830928},{"_id":"public/2023/02/01/cookbook/index.html","hash":"efd21a3b10a40598fc637be62da2a0cac077a42f","modified":1677132830928},{"_id":"public/archives/2020/02/index.html","hash":"3270f24980618dcab23bb8aaf8b4017f4ec0214e","modified":1677132830929},{"_id":"public/archives/2020/08/index.html","hash":"59df3c86ff8fb4bd13eb8ccd6acc8f4fc818cdbb","modified":1677132830929},{"_id":"public/archives/2023/index.html","hash":"47184ae13663683b97efba5edb2efb48a5fa6e3f","modified":1677132830929},{"_id":"public/archives/2023/02/index.html","hash":"d41b09fc2d4d566c1aa183e610f97dcaa554b3cd","modified":1677132830929},{"_id":"public/2023/02/23/leetCode_coin/index.html","hash":"794d41db9e71cffffbde2ec7cb7d020c9f6fa140","modified":1677132830929},{"_id":"public/2020/08/01/Promise/index.html","hash":"dbdfeebc775af5122a9985df8eb30702121a8da6","modified":1677132830929},{"_id":"public/2018/06/24/jsTypeTransfer/index.html","hash":"39929acf6db6ec7915a941bb189daf3941a4fa3c","modified":1677132830929}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"position 定位","_content":"在学习 position 之前，先来看一下几个适用于所有 css 属性的值： inherit、initial、unset、revert、all\n\n# initial、inherit、unset、revert 与 all 关键字\n\n## initial 指定设置为默认值\n默认值列表存在 css 的属性汇总里(这个表网上没有找到资料，猜想和设备与浏览器也有关系，例如 font-family 根据不同浏览器和设备而定，position 默认 \"static\"，color 默认 \"#000\" 等)。\n\nPS：initial 在 IE11 下不兼容\n\n> postion: initial;\n> color: initial;\n> width: inital;\n> // other properties...\n\n## inherit 指定继承父节点的该属性\n\n> 所有 css 属性的 inheritance 都被设置为 “yes” 或者 “no”，“yes” 表示继承， “no” 表示不继承。\n\ninherit 允许用户去手动把 inheritance 置为 “yes”。\n\n1）根元素会被默认设置 initial 的值，如果属性是inheritance = “yes”的话，会去找父节点的属性值，例如 color 等。\n\n对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会继承祖父节点的值，如果都未设置，最终找到根节点的 initial。\n\n2）inheritance = “no” 的属性会被默认设置为 initial 的值，例如 width、border、position 等。\n\n对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会默认 initial 的值，也就是说它要么继承了父节点设置的值要么 initial。\n\n> postion: inherit;\n> color: inherit;\n> width: inherit;\n> // other properties...\n\n## unset ：initial 与 inherit 的结合\n\n如果该属性的inheritance = “yes” 的话，就使用 inherit 继承，inheritance = “no” 就使用 initial 默认值。\n\n注意：unset 与直接不设是不同的，如果不设，那么它会有一个优先级的判断（在 1.4 中会提到这个优先级），例如 div 上设置了 color1，父元素上也设置了 color2，这个 div 会使用 color1，而不是直接继承父元素的 color2。\n\n> postion: unset;\n> color: unset;\n> width: unset;\n> // other properties...\n\n## revert ：指定恢复 user-agent 的设置\n\nUA（user-agent）是浏览器给定的用户代理样式表，优先级比较低，继承(只作用与inheritance = “yes” 的属性) < UA < 用户样式表 < 内联样式，如图：\n\n![内联样式](https://upload-images.jianshu.io/upload_images/5370440-7262d45fdea6cc21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nrevert 与 initial 是不同的，display 的 initial 默认值是 inline，而 UA 把 div 标签 display 定义为 block，revert 指定恢复到 UA 的设置。\n\n如果设置为 revert 的属性在 UA 中未被设值的话，属性的行为与 unset 一致。\n\n注意：据官网数据，目前 Chrome 与 FF 都不支持，safari 9.1+ 支持，其他浏览器待验证。\n\n> display: revert;\n> // other properties...\n\n## all 属性\n\nall 用来重设除了unicode-bidi和direction之外的所有属性至它们的 initial 或 inherit 值。可选值为 initial，inherit，unset，revert。\n\n> all: initial;\n> all: inherit;\n> all: unset;\n> all: revert;\n> // other properties...\n\nall 设置为 inherit 后，给这个元素设置的其他优先级更高（加 !important、内联样式或在all:inherit之后设置）的属性都进行覆盖。例如下图，font-size 会继承，而 height、width 等都会生效。\n\n![inherit](https://upload-images.jianshu.io/upload_images/5370440-23009150206d9218.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nall 设置为 initial 后，官网给的说法是设置为初始值，优先级更高的属性理应和 inherit 一样被覆盖掉，但实际的效果却有一点奇怪，给这个元素设置的其他优先级更高的大多属性都可进行覆盖，margin-top，margin-bottom 在 safari、chrome 下不占位、ff 表现正常，width、height 不能覆盖。但 margin-top、margin-bottom、width、height在绝对定位（absolute 或 fixed）下可正常显示或覆盖。\n\nall 设置为 unset 后，与 initial 一样，margin-top、margin-bottom、width、height 表现奇怪，但在绝对定位下可正常显示或覆盖。另外 safari 中，color 属性在绝对定位下也不可以正常的覆盖。\n\nall 的 revert 属性，会把用户设置的属性重设为 UA 表中设置的属性，但在safari 9+的浏览器上，color 属性不可以正常的覆盖，在绝对定位下也不可以。\n\n## postion\n\n> postion 属性支持以下值：\n> position: static;  // position 的默认值\n> position: relative;\n> position: absolute;\n> position: fixed;\n> position: sticky; // 这个属性在实验阶段，兼容性比较差: IE/opera 不支持，FF 32+，chrome 56+，Safari 6.1+）\n\n一个定位元素是指 postion 被计算为relative,absolute,fixed或sticky的一个元素。（注意：元素如果设置了__非 none 的 transform 属性__，那么它就变成了定位元素）\n\n相对定位元素：被计算为 relative 的元素，\n\n绝对定位元素（这是官方的说法，不同于我之前以为的区分绝对定位和固定定位）：被计算为 absolute 或 fixed 的元素，\n\n粘性定位元素：被计算为 sticky 的元素。\n\n偏移 top、bottom、left、right 只对定位元素有效。\n\n### static\n\nstatic 是默认定位，即 initial 所指定的 position 的值，此时偏移值 和z-index 都无效。\n\n### relative\n\nrelative 是相对定位，relative 会根据它的大小给它留出固定的空间，再去做它的偏移，也就是说 relative 的偏移是在它固定留白的基础上做的，并且偏移后并不会改变它的留白和大小。\n\nposition：relative未定义在table-*-group, table-row, table-column, table-cell, table-caption 元素上的效果。\n\n### absolute\n\nabsolute 是绝对定位，不会为元素预留空间，它相对于最近的祖先定位元素来定位，可以设置margin，并且不会被合并（相邻元素的margin-top 和 margin-bottom总是会被合并）。\n\n### fixed\n\nfixed 是绝对定位，与 absolute 很像，只是它相对于屏幕视口 viewport 来定位，屏幕滚动的时候元素位置不变。\n\n### sticky：relative 与 fixed 的结合\n\nsticky 必须设置了偏移量（相对于屏幕视口） top/left/bottom/right 才生效，否则就和 relative 同效。在滚动到该偏移量时，采用 fixed 的定位，但当往下滚动到该元素的底部与父节点的内容（不包括 padding、margin、padding）的底部相重叠、或者往上滚动到该元素在 relative 布局下相对于父元素所在位置时，快照它当前的偏移位置，并采用 relative 定位。\n\nsticky可以用来做首字母搜索，A标题的区域内容显示时，A标题一直固定在顶部，屏幕滚动到 B区域内容时，B标题代替A一直固定在顶部。\n\n![sticky](https://upload-images.jianshu.io/upload_images/5370440-4bd466d758a8a05c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","source":"_posts/position.md","raw":"---\ntitle: position 定位\n---\n在学习 position 之前，先来看一下几个适用于所有 css 属性的值： inherit、initial、unset、revert、all\n\n# initial、inherit、unset、revert 与 all 关键字\n\n## initial 指定设置为默认值\n默认值列表存在 css 的属性汇总里(这个表网上没有找到资料，猜想和设备与浏览器也有关系，例如 font-family 根据不同浏览器和设备而定，position 默认 \"static\"，color 默认 \"#000\" 等)。\n\nPS：initial 在 IE11 下不兼容\n\n> postion: initial;\n> color: initial;\n> width: inital;\n> // other properties...\n\n## inherit 指定继承父节点的该属性\n\n> 所有 css 属性的 inheritance 都被设置为 “yes” 或者 “no”，“yes” 表示继承， “no” 表示不继承。\n\ninherit 允许用户去手动把 inheritance 置为 “yes”。\n\n1）根元素会被默认设置 initial 的值，如果属性是inheritance = “yes”的话，会去找父节点的属性值，例如 color 等。\n\n对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会继承祖父节点的值，如果都未设置，最终找到根节点的 initial。\n\n2）inheritance = “no” 的属性会被默认设置为 initial 的值，例如 width、border、position 等。\n\n对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会默认 initial 的值，也就是说它要么继承了父节点设置的值要么 initial。\n\n> postion: inherit;\n> color: inherit;\n> width: inherit;\n> // other properties...\n\n## unset ：initial 与 inherit 的结合\n\n如果该属性的inheritance = “yes” 的话，就使用 inherit 继承，inheritance = “no” 就使用 initial 默认值。\n\n注意：unset 与直接不设是不同的，如果不设，那么它会有一个优先级的判断（在 1.4 中会提到这个优先级），例如 div 上设置了 color1，父元素上也设置了 color2，这个 div 会使用 color1，而不是直接继承父元素的 color2。\n\n> postion: unset;\n> color: unset;\n> width: unset;\n> // other properties...\n\n## revert ：指定恢复 user-agent 的设置\n\nUA（user-agent）是浏览器给定的用户代理样式表，优先级比较低，继承(只作用与inheritance = “yes” 的属性) < UA < 用户样式表 < 内联样式，如图：\n\n![内联样式](https://upload-images.jianshu.io/upload_images/5370440-7262d45fdea6cc21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nrevert 与 initial 是不同的，display 的 initial 默认值是 inline，而 UA 把 div 标签 display 定义为 block，revert 指定恢复到 UA 的设置。\n\n如果设置为 revert 的属性在 UA 中未被设值的话，属性的行为与 unset 一致。\n\n注意：据官网数据，目前 Chrome 与 FF 都不支持，safari 9.1+ 支持，其他浏览器待验证。\n\n> display: revert;\n> // other properties...\n\n## all 属性\n\nall 用来重设除了unicode-bidi和direction之外的所有属性至它们的 initial 或 inherit 值。可选值为 initial，inherit，unset，revert。\n\n> all: initial;\n> all: inherit;\n> all: unset;\n> all: revert;\n> // other properties...\n\nall 设置为 inherit 后，给这个元素设置的其他优先级更高（加 !important、内联样式或在all:inherit之后设置）的属性都进行覆盖。例如下图，font-size 会继承，而 height、width 等都会生效。\n\n![inherit](https://upload-images.jianshu.io/upload_images/5370440-23009150206d9218.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nall 设置为 initial 后，官网给的说法是设置为初始值，优先级更高的属性理应和 inherit 一样被覆盖掉，但实际的效果却有一点奇怪，给这个元素设置的其他优先级更高的大多属性都可进行覆盖，margin-top，margin-bottom 在 safari、chrome 下不占位、ff 表现正常，width、height 不能覆盖。但 margin-top、margin-bottom、width、height在绝对定位（absolute 或 fixed）下可正常显示或覆盖。\n\nall 设置为 unset 后，与 initial 一样，margin-top、margin-bottom、width、height 表现奇怪，但在绝对定位下可正常显示或覆盖。另外 safari 中，color 属性在绝对定位下也不可以正常的覆盖。\n\nall 的 revert 属性，会把用户设置的属性重设为 UA 表中设置的属性，但在safari 9+的浏览器上，color 属性不可以正常的覆盖，在绝对定位下也不可以。\n\n## postion\n\n> postion 属性支持以下值：\n> position: static;  // position 的默认值\n> position: relative;\n> position: absolute;\n> position: fixed;\n> position: sticky; // 这个属性在实验阶段，兼容性比较差: IE/opera 不支持，FF 32+，chrome 56+，Safari 6.1+）\n\n一个定位元素是指 postion 被计算为relative,absolute,fixed或sticky的一个元素。（注意：元素如果设置了__非 none 的 transform 属性__，那么它就变成了定位元素）\n\n相对定位元素：被计算为 relative 的元素，\n\n绝对定位元素（这是官方的说法，不同于我之前以为的区分绝对定位和固定定位）：被计算为 absolute 或 fixed 的元素，\n\n粘性定位元素：被计算为 sticky 的元素。\n\n偏移 top、bottom、left、right 只对定位元素有效。\n\n### static\n\nstatic 是默认定位，即 initial 所指定的 position 的值，此时偏移值 和z-index 都无效。\n\n### relative\n\nrelative 是相对定位，relative 会根据它的大小给它留出固定的空间，再去做它的偏移，也就是说 relative 的偏移是在它固定留白的基础上做的，并且偏移后并不会改变它的留白和大小。\n\nposition：relative未定义在table-*-group, table-row, table-column, table-cell, table-caption 元素上的效果。\n\n### absolute\n\nabsolute 是绝对定位，不会为元素预留空间，它相对于最近的祖先定位元素来定位，可以设置margin，并且不会被合并（相邻元素的margin-top 和 margin-bottom总是会被合并）。\n\n### fixed\n\nfixed 是绝对定位，与 absolute 很像，只是它相对于屏幕视口 viewport 来定位，屏幕滚动的时候元素位置不变。\n\n### sticky：relative 与 fixed 的结合\n\nsticky 必须设置了偏移量（相对于屏幕视口） top/left/bottom/right 才生效，否则就和 relative 同效。在滚动到该偏移量时，采用 fixed 的定位，但当往下滚动到该元素的底部与父节点的内容（不包括 padding、margin、padding）的底部相重叠、或者往上滚动到该元素在 relative 布局下相对于父元素所在位置时，快照它当前的偏移位置，并采用 relative 定位。\n\nsticky可以用来做首字母搜索，A标题的区域内容显示时，A标题一直固定在顶部，屏幕滚动到 B区域内容时，B标题代替A一直固定在顶部。\n\n![sticky](https://upload-images.jianshu.io/upload_images/5370440-4bd466d758a8a05c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)","slug":"position","published":1,"date":"2019-06-19T04:50:57.000Z","updated":"2019-06-19T06:05:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx2u5oul00000u9k6kfs50jw","content":"<p>在学习 position 之前，先来看一下几个适用于所有 css 属性的值： inherit、initial、unset、revert、all</p>\n<h1 id=\"initial、inherit、unset、revert-与-all-关键字\"><a href=\"#initial、inherit、unset、revert-与-all-关键字\" class=\"headerlink\" title=\"initial、inherit、unset、revert 与 all 关键字\"></a>initial、inherit、unset、revert 与 all 关键字</h1><h2 id=\"initial-指定设置为默认值\"><a href=\"#initial-指定设置为默认值\" class=\"headerlink\" title=\"initial 指定设置为默认值\"></a>initial 指定设置为默认值</h2><p>默认值列表存在 css 的属性汇总里(这个表网上没有找到资料，猜想和设备与浏览器也有关系，例如 font-family 根据不同浏览器和设备而定，position 默认 “static”，color 默认 “#000” 等)。</p>\n<p>PS：initial 在 IE11 下不兼容</p>\n<blockquote>\n<p>postion: initial;<br>color: initial;<br>width: inital;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"inherit-指定继承父节点的该属性\"><a href=\"#inherit-指定继承父节点的该属性\" class=\"headerlink\" title=\"inherit 指定继承父节点的该属性\"></a>inherit 指定继承父节点的该属性</h2><blockquote>\n<p>所有 css 属性的 inheritance 都被设置为 “yes” 或者 “no”，“yes” 表示继承， “no” 表示不继承。</p>\n</blockquote>\n<p>inherit 允许用户去手动把 inheritance 置为 “yes”。</p>\n<p>1）根元素会被默认设置 initial 的值，如果属性是inheritance = “yes”的话，会去找父节点的属性值，例如 color 等。</p>\n<p>对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会继承祖父节点的值，如果都未设置，最终找到根节点的 initial。</p>\n<p>2）inheritance = “no” 的属性会被默认设置为 initial 的值，例如 width、border、position 等。</p>\n<p>对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会默认 initial 的值，也就是说它要么继承了父节点设置的值要么 initial。</p>\n<blockquote>\n<p>postion: inherit;<br>color: inherit;<br>width: inherit;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"unset-：initial-与-inherit-的结合\"><a href=\"#unset-：initial-与-inherit-的结合\" class=\"headerlink\" title=\"unset ：initial 与 inherit 的结合\"></a>unset ：initial 与 inherit 的结合</h2><p>如果该属性的inheritance = “yes” 的话，就使用 inherit 继承，inheritance = “no” 就使用 initial 默认值。</p>\n<p>注意：unset 与直接不设是不同的，如果不设，那么它会有一个优先级的判断（在 1.4 中会提到这个优先级），例如 div 上设置了 color1，父元素上也设置了 color2，这个 div 会使用 color1，而不是直接继承父元素的 color2。</p>\n<blockquote>\n<p>postion: unset;<br>color: unset;<br>width: unset;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"revert-：指定恢复-user-agent-的设置\"><a href=\"#revert-：指定恢复-user-agent-的设置\" class=\"headerlink\" title=\"revert ：指定恢复 user-agent 的设置\"></a>revert ：指定恢复 user-agent 的设置</h2><p>UA（user-agent）是浏览器给定的用户代理样式表，优先级比较低，继承(只作用与inheritance = “yes” 的属性) &lt; UA &lt; 用户样式表 &lt; 内联样式，如图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5370440-7262d45fdea6cc21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"内联样式\"></p>\n<p>revert 与 initial 是不同的，display 的 initial 默认值是 inline，而 UA 把 div 标签 display 定义为 block，revert 指定恢复到 UA 的设置。</p>\n<p>如果设置为 revert 的属性在 UA 中未被设值的话，属性的行为与 unset 一致。</p>\n<p>注意：据官网数据，目前 Chrome 与 FF 都不支持，safari 9.1+ 支持，其他浏览器待验证。</p>\n<blockquote>\n<p>display: revert;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"all-属性\"><a href=\"#all-属性\" class=\"headerlink\" title=\"all 属性\"></a>all 属性</h2><p>all 用来重设除了unicode-bidi和direction之外的所有属性至它们的 initial 或 inherit 值。可选值为 initial，inherit，unset，revert。</p>\n<blockquote>\n<p>all: initial;<br>all: inherit;<br>all: unset;<br>all: revert;<br>// other properties…</p>\n</blockquote>\n<p>all 设置为 inherit 后，给这个元素设置的其他优先级更高（加 !important、内联样式或在all:inherit之后设置）的属性都进行覆盖。例如下图，font-size 会继承，而 height、width 等都会生效。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5370440-23009150206d9218.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"inherit\"></p>\n<p>all 设置为 initial 后，官网给的说法是设置为初始值，优先级更高的属性理应和 inherit 一样被覆盖掉，但实际的效果却有一点奇怪，给这个元素设置的其他优先级更高的大多属性都可进行覆盖，margin-top，margin-bottom 在 safari、chrome 下不占位、ff 表现正常，width、height 不能覆盖。但 margin-top、margin-bottom、width、height在绝对定位（absolute 或 fixed）下可正常显示或覆盖。</p>\n<p>all 设置为 unset 后，与 initial 一样，margin-top、margin-bottom、width、height 表现奇怪，但在绝对定位下可正常显示或覆盖。另外 safari 中，color 属性在绝对定位下也不可以正常的覆盖。</p>\n<p>all 的 revert 属性，会把用户设置的属性重设为 UA 表中设置的属性，但在safari 9+的浏览器上，color 属性不可以正常的覆盖，在绝对定位下也不可以。</p>\n<h2 id=\"postion\"><a href=\"#postion\" class=\"headerlink\" title=\"postion\"></a>postion</h2><blockquote>\n<p>postion 属性支持以下值：<br>position: static;  // position 的默认值<br>position: relative;<br>position: absolute;<br>position: fixed;<br>position: sticky; // 这个属性在实验阶段，兼容性比较差: IE/opera 不支持，FF 32+，chrome 56+，Safari 6.1+）</p>\n</blockquote>\n<p>一个定位元素是指 postion 被计算为relative,absolute,fixed或sticky的一个元素。（注意：元素如果设置了<strong>非 none 的 transform 属性</strong>，那么它就变成了定位元素）</p>\n<p>相对定位元素：被计算为 relative 的元素，</p>\n<p>绝对定位元素（这是官方的说法，不同于我之前以为的区分绝对定位和固定定位）：被计算为 absolute 或 fixed 的元素，</p>\n<p>粘性定位元素：被计算为 sticky 的元素。</p>\n<p>偏移 top、bottom、left、right 只对定位元素有效。</p>\n<h3 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h3><p>static 是默认定位，即 initial 所指定的 position 的值，此时偏移值 和z-index 都无效。</p>\n<h3 id=\"relative\"><a href=\"#relative\" class=\"headerlink\" title=\"relative\"></a>relative</h3><p>relative 是相对定位，relative 会根据它的大小给它留出固定的空间，再去做它的偏移，也就是说 relative 的偏移是在它固定留白的基础上做的，并且偏移后并不会改变它的留白和大小。</p>\n<p>position：relative未定义在table-*-group, table-row, table-column, table-cell, table-caption 元素上的效果。</p>\n<h3 id=\"absolute\"><a href=\"#absolute\" class=\"headerlink\" title=\"absolute\"></a>absolute</h3><p>absolute 是绝对定位，不会为元素预留空间，它相对于最近的祖先定位元素来定位，可以设置margin，并且不会被合并（相邻元素的margin-top 和 margin-bottom总是会被合并）。</p>\n<h3 id=\"fixed\"><a href=\"#fixed\" class=\"headerlink\" title=\"fixed\"></a>fixed</h3><p>fixed 是绝对定位，与 absolute 很像，只是它相对于屏幕视口 viewport 来定位，屏幕滚动的时候元素位置不变。</p>\n<h3 id=\"sticky：relative-与-fixed-的结合\"><a href=\"#sticky：relative-与-fixed-的结合\" class=\"headerlink\" title=\"sticky：relative 与 fixed 的结合\"></a>sticky：relative 与 fixed 的结合</h3><p>sticky 必须设置了偏移量（相对于屏幕视口） top/left/bottom/right 才生效，否则就和 relative 同效。在滚动到该偏移量时，采用 fixed 的定位，但当往下滚动到该元素的底部与父节点的内容（不包括 padding、margin、padding）的底部相重叠、或者往上滚动到该元素在 relative 布局下相对于父元素所在位置时，快照它当前的偏移位置，并采用 relative 定位。</p>\n<p>sticky可以用来做首字母搜索，A标题的区域内容显示时，A标题一直固定在顶部，屏幕滚动到 B区域内容时，B标题代替A一直固定在顶部。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5370440-4bd466d758a8a05c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"sticky\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在学习 position 之前，先来看一下几个适用于所有 css 属性的值： inherit、initial、unset、revert、all</p>\n<h1 id=\"initial、inherit、unset、revert-与-all-关键字\"><a href=\"#initial、inherit、unset、revert-与-all-关键字\" class=\"headerlink\" title=\"initial、inherit、unset、revert 与 all 关键字\"></a>initial、inherit、unset、revert 与 all 关键字</h1><h2 id=\"initial-指定设置为默认值\"><a href=\"#initial-指定设置为默认值\" class=\"headerlink\" title=\"initial 指定设置为默认值\"></a>initial 指定设置为默认值</h2><p>默认值列表存在 css 的属性汇总里(这个表网上没有找到资料，猜想和设备与浏览器也有关系，例如 font-family 根据不同浏览器和设备而定，position 默认 “static”，color 默认 “#000” 等)。</p>\n<p>PS：initial 在 IE11 下不兼容</p>\n<blockquote>\n<p>postion: initial;<br>color: initial;<br>width: inital;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"inherit-指定继承父节点的该属性\"><a href=\"#inherit-指定继承父节点的该属性\" class=\"headerlink\" title=\"inherit 指定继承父节点的该属性\"></a>inherit 指定继承父节点的该属性</h2><blockquote>\n<p>所有 css 属性的 inheritance 都被设置为 “yes” 或者 “no”，“yes” 表示继承， “no” 表示不继承。</p>\n</blockquote>\n<p>inherit 允许用户去手动把 inheritance 置为 “yes”。</p>\n<p>1）根元素会被默认设置 initial 的值，如果属性是inheritance = “yes”的话，会去找父节点的属性值，例如 color 等。</p>\n<p>对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会继承祖父节点的值，如果都未设置，最终找到根节点的 initial。</p>\n<p>2）inheritance = “no” 的属性会被默认设置为 initial 的值，例如 width、border、position 等。</p>\n<p>对此类属性设置 inherit 的话，它的父节点如果未设值，那么父节点会默认 initial 的值，也就是说它要么继承了父节点设置的值要么 initial。</p>\n<blockquote>\n<p>postion: inherit;<br>color: inherit;<br>width: inherit;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"unset-：initial-与-inherit-的结合\"><a href=\"#unset-：initial-与-inherit-的结合\" class=\"headerlink\" title=\"unset ：initial 与 inherit 的结合\"></a>unset ：initial 与 inherit 的结合</h2><p>如果该属性的inheritance = “yes” 的话，就使用 inherit 继承，inheritance = “no” 就使用 initial 默认值。</p>\n<p>注意：unset 与直接不设是不同的，如果不设，那么它会有一个优先级的判断（在 1.4 中会提到这个优先级），例如 div 上设置了 color1，父元素上也设置了 color2，这个 div 会使用 color1，而不是直接继承父元素的 color2。</p>\n<blockquote>\n<p>postion: unset;<br>color: unset;<br>width: unset;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"revert-：指定恢复-user-agent-的设置\"><a href=\"#revert-：指定恢复-user-agent-的设置\" class=\"headerlink\" title=\"revert ：指定恢复 user-agent 的设置\"></a>revert ：指定恢复 user-agent 的设置</h2><p>UA（user-agent）是浏览器给定的用户代理样式表，优先级比较低，继承(只作用与inheritance = “yes” 的属性) &lt; UA &lt; 用户样式表 &lt; 内联样式，如图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5370440-7262d45fdea6cc21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"内联样式\"></p>\n<p>revert 与 initial 是不同的，display 的 initial 默认值是 inline，而 UA 把 div 标签 display 定义为 block，revert 指定恢复到 UA 的设置。</p>\n<p>如果设置为 revert 的属性在 UA 中未被设值的话，属性的行为与 unset 一致。</p>\n<p>注意：据官网数据，目前 Chrome 与 FF 都不支持，safari 9.1+ 支持，其他浏览器待验证。</p>\n<blockquote>\n<p>display: revert;<br>// other properties…</p>\n</blockquote>\n<h2 id=\"all-属性\"><a href=\"#all-属性\" class=\"headerlink\" title=\"all 属性\"></a>all 属性</h2><p>all 用来重设除了unicode-bidi和direction之外的所有属性至它们的 initial 或 inherit 值。可选值为 initial，inherit，unset，revert。</p>\n<blockquote>\n<p>all: initial;<br>all: inherit;<br>all: unset;<br>all: revert;<br>// other properties…</p>\n</blockquote>\n<p>all 设置为 inherit 后，给这个元素设置的其他优先级更高（加 !important、内联样式或在all:inherit之后设置）的属性都进行覆盖。例如下图，font-size 会继承，而 height、width 等都会生效。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5370440-23009150206d9218.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"inherit\"></p>\n<p>all 设置为 initial 后，官网给的说法是设置为初始值，优先级更高的属性理应和 inherit 一样被覆盖掉，但实际的效果却有一点奇怪，给这个元素设置的其他优先级更高的大多属性都可进行覆盖，margin-top，margin-bottom 在 safari、chrome 下不占位、ff 表现正常，width、height 不能覆盖。但 margin-top、margin-bottom、width、height在绝对定位（absolute 或 fixed）下可正常显示或覆盖。</p>\n<p>all 设置为 unset 后，与 initial 一样，margin-top、margin-bottom、width、height 表现奇怪，但在绝对定位下可正常显示或覆盖。另外 safari 中，color 属性在绝对定位下也不可以正常的覆盖。</p>\n<p>all 的 revert 属性，会把用户设置的属性重设为 UA 表中设置的属性，但在safari 9+的浏览器上，color 属性不可以正常的覆盖，在绝对定位下也不可以。</p>\n<h2 id=\"postion\"><a href=\"#postion\" class=\"headerlink\" title=\"postion\"></a>postion</h2><blockquote>\n<p>postion 属性支持以下值：<br>position: static;  // position 的默认值<br>position: relative;<br>position: absolute;<br>position: fixed;<br>position: sticky; // 这个属性在实验阶段，兼容性比较差: IE/opera 不支持，FF 32+，chrome 56+，Safari 6.1+）</p>\n</blockquote>\n<p>一个定位元素是指 postion 被计算为relative,absolute,fixed或sticky的一个元素。（注意：元素如果设置了<strong>非 none 的 transform 属性</strong>，那么它就变成了定位元素）</p>\n<p>相对定位元素：被计算为 relative 的元素，</p>\n<p>绝对定位元素（这是官方的说法，不同于我之前以为的区分绝对定位和固定定位）：被计算为 absolute 或 fixed 的元素，</p>\n<p>粘性定位元素：被计算为 sticky 的元素。</p>\n<p>偏移 top、bottom、left、right 只对定位元素有效。</p>\n<h3 id=\"static\"><a href=\"#static\" class=\"headerlink\" title=\"static\"></a>static</h3><p>static 是默认定位，即 initial 所指定的 position 的值，此时偏移值 和z-index 都无效。</p>\n<h3 id=\"relative\"><a href=\"#relative\" class=\"headerlink\" title=\"relative\"></a>relative</h3><p>relative 是相对定位，relative 会根据它的大小给它留出固定的空间，再去做它的偏移，也就是说 relative 的偏移是在它固定留白的基础上做的，并且偏移后并不会改变它的留白和大小。</p>\n<p>position：relative未定义在table-*-group, table-row, table-column, table-cell, table-caption 元素上的效果。</p>\n<h3 id=\"absolute\"><a href=\"#absolute\" class=\"headerlink\" title=\"absolute\"></a>absolute</h3><p>absolute 是绝对定位，不会为元素预留空间，它相对于最近的祖先定位元素来定位，可以设置margin，并且不会被合并（相邻元素的margin-top 和 margin-bottom总是会被合并）。</p>\n<h3 id=\"fixed\"><a href=\"#fixed\" class=\"headerlink\" title=\"fixed\"></a>fixed</h3><p>fixed 是绝对定位，与 absolute 很像，只是它相对于屏幕视口 viewport 来定位，屏幕滚动的时候元素位置不变。</p>\n<h3 id=\"sticky：relative-与-fixed-的结合\"><a href=\"#sticky：relative-与-fixed-的结合\" class=\"headerlink\" title=\"sticky：relative 与 fixed 的结合\"></a>sticky：relative 与 fixed 的结合</h3><p>sticky 必须设置了偏移量（相对于屏幕视口） top/left/bottom/right 才生效，否则就和 relative 同效。在滚动到该偏移量时，采用 fixed 的定位，但当往下滚动到该元素的底部与父节点的内容（不包括 padding、margin、padding）的底部相重叠、或者往上滚动到该元素在 relative 布局下相对于父元素所在位置时，快照它当前的偏移位置，并采用 relative 定位。</p>\n<p>sticky可以用来做首字母搜索，A标题的区域内容显示时，A标题一直固定在顶部，屏幕滚动到 B区域内容时，B标题代替A一直固定在顶部。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/5370440-4bd466d758a8a05c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"sticky\"></p>\n"},{"title":"从键入 URL 到页面渲染都经历了什么","date":"2018-08-19T16:00:00.000Z","_content":"\n## 客户端键入 URL\n\n\n## DNS 解析域名","source":"_posts/DNS.md","raw":"---\n title: 从键入 URL 到页面渲染都经历了什么\n date: 2018-08-20\n---\n\n## 客户端键入 URL\n\n\n## DNS 解析域名","slug":"DNS","published":1,"updated":"2023-02-23T06:13:40.805Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22g0000shoae2jjz0r5","content":"<h2 id=\"客户端键入-URL\"><a href=\"#客户端键入-URL\" class=\"headerlink\" title=\"客户端键入 URL\"></a>客户端键入 URL</h2><h2 id=\"DNS-解析域名\"><a href=\"#DNS-解析域名\" class=\"headerlink\" title=\"DNS 解析域名\"></a>DNS 解析域名</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"客户端键入-URL\"><a href=\"#客户端键入-URL\" class=\"headerlink\" title=\"客户端键入 URL\"></a>客户端键入 URL</h2><h2 id=\"DNS-解析域名\"><a href=\"#DNS-解析域名\" class=\"headerlink\" title=\"DNS 解析域名\"></a>DNS 解析域名</h2>"},{"title":"css 渲染层","date":"2020-02-20T16:00:00.000Z","_content":"\n## \n\n[BFC](https://blog.csdn.net/sinat_36422236/article/details/88763187)","source":"_posts/BFC.md","raw":"---\n title: css 渲染层\n date: 2020-02-21\n---\n\n## \n\n[BFC](https://blog.csdn.net/sinat_36422236/article/details/88763187)","slug":"BFC","published":1,"updated":"2023-02-23T06:13:40.777Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22k0001shoa7u2meewk","content":"<p>## </p>\n<p><a href=\"https://blog.csdn.net/sinat_36422236/article/details/88763187\" target=\"_blank\" rel=\"noopener\">BFC</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>## </p>\n<p><a href=\"https://blog.csdn.net/sinat_36422236/article/details/88763187\" target=\"_blank\" rel=\"noopener\">BFC</a></p>\n"},{"title":"手写 Promise","date":"2020-07-31T16:00:00.000Z","_content":"\n## Promise 是什么\n\nPromise 出现之前，处理异步，可以通过回调来解决，比如典型的 ajax：\n\n```javascript\najax({\n  url: 'a',\n  success: () => {\n    ajax({\n      url: 'b',\n      success: () => {\n        ajax({\n          url: 'c',\n          success: () => {}\n          fail: () => {}\n        })\n      }\n      fail: () => {}\n    })\n  },\n  error: () => {}\n})\n```\n\n还有事件监听：\n\n```javascript\nwindow.addListener('click', callback)\n```\n\n可以看到，其实回调函数在不同的使用中传入方式不一。\nPromise 最开始由社区提出，它避免了回调地狱，用法也更强大，es6 正式将 Promise 写进了规范。\n\n```javascript\najaxPromise({ url: 'a' })\n.then(res => {\n  return ajaxPromise({ url: 'b'})\n}).then(res => {\n  return ajaxPromise({ url: 'c'})\n})\n```\n\n## Promise 的用法\n\nPromise 是一个构造函数，它的实例创建如下\n\n```javascript\nvar p = new Promise(() => {})\nvar p1 = new Promise(resolve => resolve(12))\nvar p2 = new Promise((r, reject) => reject(12))\n```\n\npromise 实例总是处于下列三种状态之一，最开始 promise 是在 pending 状态，一旦它变成‘完成’或‘拒绝’，则不会再变：\n\n- 待定: pending\n- 完成: fulfilled\n- 拒绝: rejected\n\n支持以下几种实例用法和静态：\n\n```javascript\nPromise.prototype.then \nPromise.prototype.catch\nPromise.prototype.finally\n\nPromise.resolve(any) \nPromise.reject(any)  \nPromise.all([])  \nPromise.allSettled([])\nPromise.any([])  \nPromise.race([])\n```\n\n## Promise 实例方法的自定义实现\n我们先来实现几个实例方法，过去我写过但没有成功，反思一下还是对一些细节的理解不到位导致。我们看下下边这个测试脚本：\n```javascript\n// 测试用例 1\nvar a = new Promise((resolve, reject) => {\n  resolve('start');\n})\n\nvar b = a.then(() => { console.log('then 执行'); return 'thenReturnResult' });\nvar c = a.catch(() => { console.log('catch 执行'); return 'catchReturnResult' });\nvar d = a.finally(() => { console.log('finally 执行'); return 'finallyReturnResult' });\n\nconsole.log(a === b, b === c, c === d); \n// false false false\n```\n发现有一个非常重要的细节是：\n> 一个 promise 实例只能一个 then/catch/finally 函数处理，处理完后返回的都是新的 promise。\n\n写代码之前，我们先来解读一下这段代码的执行顺序，以便我们写的更加的顺滑：\n1. 立即执行 new Promise 时传入的函数，Promise 给此函数传入resolve/reject参数，并记录 then、catch、finally 的挂载情况。\n2. 使用者调用 resolve/reject，a 实例的状态被改变，触发 a.then/a.catch/a.finally 执行。\n3. a.then 挂载函数被执行，b 实例的状态被改变。\n4. a.catch 执行默认逻辑（不执行挂载函数），c 实例的状态被改变。\n5. a.finally 挂载函数被执行，d 实例的状态被改变。\n\n```javascript\nclass MyPromise {\n  status = \"pending\"; // 'pending' | 'fulfilled' | 'rejected'\n  value = undefined;\n  // 一个实例只能被一个 then/catch/finally 函数处理，所以无需用列表存储挂载函数\n  sucFn = v => v; // 成功之后执行\n  errFn = v => v; // 失败之后执行\n\n  // 立即执行，并传入 resolve/reject 函数供使用者调用\n  constructor(fn) {\n    fn(this.#resolve, this.#reject);\n  }\n\n  // 成功之后，触发 .then/.catch/.finally 执行\n  #resolve = value => {\n    if (this.status !== \"pending\") return;\n    this.status = \"fulfilled\";\n    this.value = value;\n    queueMicrotask(() => {\n      this.sucFn && this.sucFn();\n    });\n  }\n  #reject = reason => {\n    if (this.status !== \"pending\") return;\n    this.status = \"rejected\";\n    this.value = reason;\n    queueMicrotask(() => {\n      this.errFn && this.errFn();\n    });\n  }\n\n  // a.then 返回的是一个新的 Promise, 挂载的 onFulfilled|onRejected 需要在 a 的状态变化后执行\n  then = (onFulfilled, onRejected) => {\n    return new MyPromise((resolve, reject) => {\n      this.sucFn = () => {\n        // 如果没传，就透传当前promise状态和值；否则执行 onFulfilled\n        if (!onFulfilled) {\n          return this.status === \"fulfilled\"\n            ? resolve(this.value)\n            : reject(this.value);\n        }\n        try {\n          resolve(onFulfilled(this.value));\n        } catch (e) {\n          reject(e);\n        }\n      };\n      this.errFn = () => {};\n    });\n  }\n  catch = (onRejected) => {}\n  finally = (callback) => {}\n}\n```\n这里实现了一部分 then 的逻辑，catch、finally 的逻辑是类似的，读者可以自己尝试写一下。\n\n### Promise 静态方法实现全代码\n```javascript\nclass MyPromise {\n  status = \"pending\"; // 'pending' | 'fulfilled' | 'rejected'\n  value = undefined;\n\n  constructor(fn) {\n    try {\n      fn(this.#resolve, this.#reject);\n    } catch (e) {\n      this.#reject(e);\n    }\n  }\n\n  #resolve = (value) => {\n    if (this.status !== \"pending\") return;\n    this.status = \"fulfilled\";\n    this.value = value;\n    queueMicrotask(() => {\n      this.sucFn && this.sucFn();\n    });\n  };\n  #reject = (reason) => {\n    if (this.status !== \"pending\") return;\n    this.status = \"rejected\";\n    this.value = reason;\n    queueMicrotask(() => {\n      this.errFn && this.errFn();\n    });\n  };\n\n  #callbackCatch = (fn, resolve, reject) => () => {\n    if (!fn) {\n      // 如果不传入，就透传当前promise状态\n      return this.status === \"fulfilled\"\n        ? resolve(this.value)\n        : reject(this.value);\n    }\n    try {\n      resolve(fn(this.value));\n    } catch (e) {\n      reject(e);\n    }\n  };\n\n  then = (onFulfilled, onRejected) => {\n    // then 返回的是一个新的 Promise\n    return new MyPromise((resolve, reject) => {\n      this.sucFn = this.#callbackCatch(onFulfilled, resolve, reject);\n      this.errFn = this.#callbackCatch(onRejected, resolve, reject);\n    });\n  };\n\n  catch = (onRejected) => {\n    return new MyPromise((resolve, reject) => {\n      // 如果上一个 promise 是成功的，被 catch 时依然要把成功的结果透传\n      this.sucFn = this.#callbackCatch((v) => v, resolve, reject);\n      this.errFn = this.#callbackCatch(onRejected, resolve, reject);\n    });\n  };\n\n  finally = (callback) => {\n    return new MyPromise((resolve, reject) => {\n      // 正常情况下 finally 要把上一个 promise 的状态和结果透传\n      // 只有一种特殊情况：如果finally内部抛错，状态仍需要变更为 rejected\n      this.sucFn = this.#callbackCatch(\n        () => callback(),\n        () => resolve(this.value),\n        reject\n      );\n      this.errFn = this.#callbackCatch(\n        () => callback(),\n        () => resolve(this.value),\n        reject\n      );\n    });\n  };\n}\n```\n\n再用以下脚本来测试一下结果，看看与Promise是否一致：\n```javascript\nvar a = new MyPromise((resolve, reject) => {\n  console.log(2);  // 2\n  setTimeout(() => {\n    resolve('start');\n  }, 0);\n})\n  .then((res) => {\n    console.log('then1', res);  // then1 start\n    return 'then1Res';\n  })\n  .catch((e) => {\n    console.log('catch1', e);\n    throw 'catch1Throw';\n  })\n  .then(\n    (res) => {\n        console.log('then2', res);   // then2 then1Res\n        throw 'then2Throw';\n    },\n    (err) => {\n      console.log('then2Catch', err);\n      throw 'then2CatchThrow';\n    }\n  )\n  .catch((e) => {\n    console.log('catch2', e);  // catch2 then2Throw\n    return 'catch2Res';\n  })\n  .then((res) => {\n    console.log('then3', res); // then3 catch2Res\n    return 'then3Res';\n  })\n  .finally((res) => {\n    console.log('finally11111', res);  // finally11111 undefined\n  })\n  .finally((res) => {\n    console.log('finally22222', res);  // finally22222 undefined\n    return 'finally22222';\n  })\n  .then(\n    (res) => {\n        console.log('then4', res);   // then4 then3Res\n        return 'then4Res';\n    },\n    (err) => {\n      console.log('thenCatch', err);\n      return 'thenCatchThrow';\n    }\n  )\n  .finally(() => {\n    console.log('finally33333');  // finally33333\n    throw 'finally3Throw';\n  })\n  .then((res) => {\n    console.log('then5', res);\n    throw 'then5Throw';\n  })\n  .catch((e) => {\n    console.log('catch4', e);  // catch4 finally3Throw\n    return 'catch4Res';\n  });\n```\n完全一致（图就不贴了，读者可以自行执行以下），perfect。\n\n## Promise 静态方法的自定义实现\n\n当实例方法实现好之后，静态方法就显得比较轻松了，大家只要理解了这几个函数的执行细节，就会好些很多。\n先来一段测试脚本，先来看看 resolve、reject 静态方法的表现\n\n```javascript\nvar sucFn = () => new Promise((resolve, reject) => resolve('111'));\nvar errFn = () => new Promise((resolve, reject) => reject('222'));\nvar pendingFn = () => new Promise((resolve, reject) => setTimeout(() => resolve('333'), 1000));\n\nvar a = errFn();\nvar b = Promise.resolve(a);\nconsole.log(a === b); // true\n\nvar a = pendingFn();\nvar b = Promise.resolve(a); \nvar c = Promise.resolve(Promise.resolve(a)); \nconsole.log(a === b); // true\n\nvar a = sucFn();\nvar b = Promise.resolve(a);\nconsole.log(a === b); // true\n\nvar a = sucFn();\nvar b = Promise.reject(a);  // b.status => 'fulfilled', b.value => '222'\nconsole.log(a === b); // false\n\nvar a = errFn();\nvar b = Promise.reject(a);  // b.status => 'rejected', b.value => Promise<rejected, '222'>\nconsole.log(a === b); // false\n\nvar a = pendingFn();\nvar b = Promise.reject(a);  // b.status => 'rejected', b.value => Promise<pending, '222'>\nconsole.log(a === b); // false\n\n```\n从执行结果我们来解读一下：\n1. Promise.resolve 传入的参数如果是promise实例，则透传该实例的状态及结果；否则 fulfilled 并传出参数本身\n2. Promise.reject 传入的参数如果是promise实例且被 fulfilled，则 rejected 并传出该实例的结果；否则 reject 并传出参数本身\n\n比较简单，就直接放代码了。\n```javascript\nMyPromise.resolve = (value) => {\n  // 如果 value 是 promise 实例，透传实例即可；否则返回成功态\n  if (value instanceof MyPromise) return value;\n  return new MyPromise((resolve) => resolve(value));\n};\nMyPromise.reject = (value) => {\n  return new MyPromise((resolve, reject) => {\n    // 如果 value 是 promise 实例且是成功的，reject 该实例的值；否则reject value本身\n    MyPromise.resolve(value)\n      .then((v) => reject(v))\n      .catch(() => reject(value));\n  });\n};\n```\n\n至于 all/allSettled/race/any，我们再来几个测试案例：\n\n``` javascript\nvar a = Promise.all([1,2,3].map(v => {\n  return v === 3 ? new Promise((x) => { setTimeout(() => { console.log(123); x(v) }, 1000)}) : Promise.resolve(v);\n}))\nsetTimeout(() => console.log(a), 0); // Promise<pending>  \nsetTimeout(() => console.log(a), 1000) // Promise<fulfilled, [1,2,3]>\n\nvar b = Promise.allSettled([1,2,3].map(v => {\n  return v === 3 ? new Promise((resolve,reject) => { setTimeout(() => { console.log(123); reject(v) }, 1000)}) : Promise.resolve(v);\n}))\nsetTimeout(() => console.log(b), 0); // Promise<pending>  \nsetTimeout(() => console.log(b), 1000) // Promise<fulfilled, [{status: 'fulfilled', value: 1},{status: 'fulfilled', value: 2},{status: 'rejected', reason: 3}]>\n\nvar c = Promise.any([1,2,3].map(v => {\n  return v === 3 ? Promise.reject(v) : new Promise((resolve, reject) => { setTimeout(() => { console.log(123); resolve(v) }, 1000)});\n}));\nsetTimeout(() => console.log(c), 0); // Promise<pending>  \nsetTimeout(() => console.log(c), 1000) // Promise<fulfilled, 1>\n\nvar d = Promise.race([1,2,3].map(v => {\n  return v === 3 ? Promise.reject(v) : new Promise((resolve, reject) => { setTimeout(() => { console.log(123); resolve(v) }, 1000)});\n}));\nsetTimeout(() => console.log(d), 0); // Promise<rejected, 3>  \nsetTimeout(() => console.log(d), 1000) // Promise<rejected, 3>\n\n```\n解读一下:\n- Promise.all([]) ，所有元素都被 fulfilled 才成功；任一 rejected 就 rejected；否则 pending\n- Promise.allSettled([]) ，所有元素都被 fulfilled 或 rejected 才成功；否则 pending\n- Promise.any([]) ，任一元素被 fulfilled 才成功; 所有 rejected 才 rejected；否则 pending\n- Promise.race([]) ，任一元素被 fulfilled 或 rejected 立即返回它的结果；否则 pending\n\n搞清楚他们的状态流转之后，代码逻辑就比较清晰了，这里直接看代码：\n\n``` javascript\nMyPromise.all = (list) => {\n  return new MyPromise((resolve, reject) => {\n    let result = [];\n    let count = 0;\n    list.forEach((item, index) => {\n      MyPromise.resolve(item)\n        .then((res) => {\n          result[index] = res;\n          count += 1;\n        })\n        .catch((err) => reject(err))\n        .finally(() => {\n          // 如果存在失败或 pending 中的实例，什么都不做\n          if (count !== list.length) return;\n          resolve(result);\n        });\n    });\n  });\n};\nMyPromise.allSettled = (list) => {\n  return new MyPromise((resolve, reject) => {\n    let result = [];\n    let count = 0;\n    list.forEach((item, index) => {\n      MyPromise.resolve(item)\n        .then((res) => {\n          result[index] = { status: \"fulfilled\", value: res };\n          count += 1;\n        })\n        .catch((err) => {\n          result[index] = { status: \"rejected\", reason: err };\n          count += 1; // 一定要放在 result[index] 赋值后边，避免count自增后finally在赋值之前执行\n        })\n        .finally(() => {\n          // 如果存在 pending 中的实例，什么都不做\n          if (count !== list.length) return;\n          resolve(result);\n        });\n    });\n  });\n};\nMyPromise.any = (list) => {\n  return new MyPromise((resolve) => {\n    let result = [];\n    let count = 0;\n    list.forEach((item) => {\n      MyPromise.resolve(item)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((err) => {\n          result[index] = err;\n          count += 0;\n        })\n        .finally(() => {\n          if (count !== list.length) return;\n          throw new Error({\n            stack: \"AggregateError: All promises were rejected\",\n            message: \"All promises were rejected\",\n            errors: result,\n          });\n        });\n    });\n  });\n};\nMyPromise.race = (list) => {\n  return new MyPromise((resolve, reject) => {\n    list.forEach((item) => {\n      MyPromise.resolve(item)\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    });\n  });\n};\n```\n\n至此，MyPromise 就写完了，感谢各位读者耐心观看，如有帮助不胜荣幸。","source":"_posts/Promise.md","raw":"---\ntitle: 手写 Promise\ndate: 2020-08-01\n---\n\n## Promise 是什么\n\nPromise 出现之前，处理异步，可以通过回调来解决，比如典型的 ajax：\n\n```javascript\najax({\n  url: 'a',\n  success: () => {\n    ajax({\n      url: 'b',\n      success: () => {\n        ajax({\n          url: 'c',\n          success: () => {}\n          fail: () => {}\n        })\n      }\n      fail: () => {}\n    })\n  },\n  error: () => {}\n})\n```\n\n还有事件监听：\n\n```javascript\nwindow.addListener('click', callback)\n```\n\n可以看到，其实回调函数在不同的使用中传入方式不一。\nPromise 最开始由社区提出，它避免了回调地狱，用法也更强大，es6 正式将 Promise 写进了规范。\n\n```javascript\najaxPromise({ url: 'a' })\n.then(res => {\n  return ajaxPromise({ url: 'b'})\n}).then(res => {\n  return ajaxPromise({ url: 'c'})\n})\n```\n\n## Promise 的用法\n\nPromise 是一个构造函数，它的实例创建如下\n\n```javascript\nvar p = new Promise(() => {})\nvar p1 = new Promise(resolve => resolve(12))\nvar p2 = new Promise((r, reject) => reject(12))\n```\n\npromise 实例总是处于下列三种状态之一，最开始 promise 是在 pending 状态，一旦它变成‘完成’或‘拒绝’，则不会再变：\n\n- 待定: pending\n- 完成: fulfilled\n- 拒绝: rejected\n\n支持以下几种实例用法和静态：\n\n```javascript\nPromise.prototype.then \nPromise.prototype.catch\nPromise.prototype.finally\n\nPromise.resolve(any) \nPromise.reject(any)  \nPromise.all([])  \nPromise.allSettled([])\nPromise.any([])  \nPromise.race([])\n```\n\n## Promise 实例方法的自定义实现\n我们先来实现几个实例方法，过去我写过但没有成功，反思一下还是对一些细节的理解不到位导致。我们看下下边这个测试脚本：\n```javascript\n// 测试用例 1\nvar a = new Promise((resolve, reject) => {\n  resolve('start');\n})\n\nvar b = a.then(() => { console.log('then 执行'); return 'thenReturnResult' });\nvar c = a.catch(() => { console.log('catch 执行'); return 'catchReturnResult' });\nvar d = a.finally(() => { console.log('finally 执行'); return 'finallyReturnResult' });\n\nconsole.log(a === b, b === c, c === d); \n// false false false\n```\n发现有一个非常重要的细节是：\n> 一个 promise 实例只能一个 then/catch/finally 函数处理，处理完后返回的都是新的 promise。\n\n写代码之前，我们先来解读一下这段代码的执行顺序，以便我们写的更加的顺滑：\n1. 立即执行 new Promise 时传入的函数，Promise 给此函数传入resolve/reject参数，并记录 then、catch、finally 的挂载情况。\n2. 使用者调用 resolve/reject，a 实例的状态被改变，触发 a.then/a.catch/a.finally 执行。\n3. a.then 挂载函数被执行，b 实例的状态被改变。\n4. a.catch 执行默认逻辑（不执行挂载函数），c 实例的状态被改变。\n5. a.finally 挂载函数被执行，d 实例的状态被改变。\n\n```javascript\nclass MyPromise {\n  status = \"pending\"; // 'pending' | 'fulfilled' | 'rejected'\n  value = undefined;\n  // 一个实例只能被一个 then/catch/finally 函数处理，所以无需用列表存储挂载函数\n  sucFn = v => v; // 成功之后执行\n  errFn = v => v; // 失败之后执行\n\n  // 立即执行，并传入 resolve/reject 函数供使用者调用\n  constructor(fn) {\n    fn(this.#resolve, this.#reject);\n  }\n\n  // 成功之后，触发 .then/.catch/.finally 执行\n  #resolve = value => {\n    if (this.status !== \"pending\") return;\n    this.status = \"fulfilled\";\n    this.value = value;\n    queueMicrotask(() => {\n      this.sucFn && this.sucFn();\n    });\n  }\n  #reject = reason => {\n    if (this.status !== \"pending\") return;\n    this.status = \"rejected\";\n    this.value = reason;\n    queueMicrotask(() => {\n      this.errFn && this.errFn();\n    });\n  }\n\n  // a.then 返回的是一个新的 Promise, 挂载的 onFulfilled|onRejected 需要在 a 的状态变化后执行\n  then = (onFulfilled, onRejected) => {\n    return new MyPromise((resolve, reject) => {\n      this.sucFn = () => {\n        // 如果没传，就透传当前promise状态和值；否则执行 onFulfilled\n        if (!onFulfilled) {\n          return this.status === \"fulfilled\"\n            ? resolve(this.value)\n            : reject(this.value);\n        }\n        try {\n          resolve(onFulfilled(this.value));\n        } catch (e) {\n          reject(e);\n        }\n      };\n      this.errFn = () => {};\n    });\n  }\n  catch = (onRejected) => {}\n  finally = (callback) => {}\n}\n```\n这里实现了一部分 then 的逻辑，catch、finally 的逻辑是类似的，读者可以自己尝试写一下。\n\n### Promise 静态方法实现全代码\n```javascript\nclass MyPromise {\n  status = \"pending\"; // 'pending' | 'fulfilled' | 'rejected'\n  value = undefined;\n\n  constructor(fn) {\n    try {\n      fn(this.#resolve, this.#reject);\n    } catch (e) {\n      this.#reject(e);\n    }\n  }\n\n  #resolve = (value) => {\n    if (this.status !== \"pending\") return;\n    this.status = \"fulfilled\";\n    this.value = value;\n    queueMicrotask(() => {\n      this.sucFn && this.sucFn();\n    });\n  };\n  #reject = (reason) => {\n    if (this.status !== \"pending\") return;\n    this.status = \"rejected\";\n    this.value = reason;\n    queueMicrotask(() => {\n      this.errFn && this.errFn();\n    });\n  };\n\n  #callbackCatch = (fn, resolve, reject) => () => {\n    if (!fn) {\n      // 如果不传入，就透传当前promise状态\n      return this.status === \"fulfilled\"\n        ? resolve(this.value)\n        : reject(this.value);\n    }\n    try {\n      resolve(fn(this.value));\n    } catch (e) {\n      reject(e);\n    }\n  };\n\n  then = (onFulfilled, onRejected) => {\n    // then 返回的是一个新的 Promise\n    return new MyPromise((resolve, reject) => {\n      this.sucFn = this.#callbackCatch(onFulfilled, resolve, reject);\n      this.errFn = this.#callbackCatch(onRejected, resolve, reject);\n    });\n  };\n\n  catch = (onRejected) => {\n    return new MyPromise((resolve, reject) => {\n      // 如果上一个 promise 是成功的，被 catch 时依然要把成功的结果透传\n      this.sucFn = this.#callbackCatch((v) => v, resolve, reject);\n      this.errFn = this.#callbackCatch(onRejected, resolve, reject);\n    });\n  };\n\n  finally = (callback) => {\n    return new MyPromise((resolve, reject) => {\n      // 正常情况下 finally 要把上一个 promise 的状态和结果透传\n      // 只有一种特殊情况：如果finally内部抛错，状态仍需要变更为 rejected\n      this.sucFn = this.#callbackCatch(\n        () => callback(),\n        () => resolve(this.value),\n        reject\n      );\n      this.errFn = this.#callbackCatch(\n        () => callback(),\n        () => resolve(this.value),\n        reject\n      );\n    });\n  };\n}\n```\n\n再用以下脚本来测试一下结果，看看与Promise是否一致：\n```javascript\nvar a = new MyPromise((resolve, reject) => {\n  console.log(2);  // 2\n  setTimeout(() => {\n    resolve('start');\n  }, 0);\n})\n  .then((res) => {\n    console.log('then1', res);  // then1 start\n    return 'then1Res';\n  })\n  .catch((e) => {\n    console.log('catch1', e);\n    throw 'catch1Throw';\n  })\n  .then(\n    (res) => {\n        console.log('then2', res);   // then2 then1Res\n        throw 'then2Throw';\n    },\n    (err) => {\n      console.log('then2Catch', err);\n      throw 'then2CatchThrow';\n    }\n  )\n  .catch((e) => {\n    console.log('catch2', e);  // catch2 then2Throw\n    return 'catch2Res';\n  })\n  .then((res) => {\n    console.log('then3', res); // then3 catch2Res\n    return 'then3Res';\n  })\n  .finally((res) => {\n    console.log('finally11111', res);  // finally11111 undefined\n  })\n  .finally((res) => {\n    console.log('finally22222', res);  // finally22222 undefined\n    return 'finally22222';\n  })\n  .then(\n    (res) => {\n        console.log('then4', res);   // then4 then3Res\n        return 'then4Res';\n    },\n    (err) => {\n      console.log('thenCatch', err);\n      return 'thenCatchThrow';\n    }\n  )\n  .finally(() => {\n    console.log('finally33333');  // finally33333\n    throw 'finally3Throw';\n  })\n  .then((res) => {\n    console.log('then5', res);\n    throw 'then5Throw';\n  })\n  .catch((e) => {\n    console.log('catch4', e);  // catch4 finally3Throw\n    return 'catch4Res';\n  });\n```\n完全一致（图就不贴了，读者可以自行执行以下），perfect。\n\n## Promise 静态方法的自定义实现\n\n当实例方法实现好之后，静态方法就显得比较轻松了，大家只要理解了这几个函数的执行细节，就会好些很多。\n先来一段测试脚本，先来看看 resolve、reject 静态方法的表现\n\n```javascript\nvar sucFn = () => new Promise((resolve, reject) => resolve('111'));\nvar errFn = () => new Promise((resolve, reject) => reject('222'));\nvar pendingFn = () => new Promise((resolve, reject) => setTimeout(() => resolve('333'), 1000));\n\nvar a = errFn();\nvar b = Promise.resolve(a);\nconsole.log(a === b); // true\n\nvar a = pendingFn();\nvar b = Promise.resolve(a); \nvar c = Promise.resolve(Promise.resolve(a)); \nconsole.log(a === b); // true\n\nvar a = sucFn();\nvar b = Promise.resolve(a);\nconsole.log(a === b); // true\n\nvar a = sucFn();\nvar b = Promise.reject(a);  // b.status => 'fulfilled', b.value => '222'\nconsole.log(a === b); // false\n\nvar a = errFn();\nvar b = Promise.reject(a);  // b.status => 'rejected', b.value => Promise<rejected, '222'>\nconsole.log(a === b); // false\n\nvar a = pendingFn();\nvar b = Promise.reject(a);  // b.status => 'rejected', b.value => Promise<pending, '222'>\nconsole.log(a === b); // false\n\n```\n从执行结果我们来解读一下：\n1. Promise.resolve 传入的参数如果是promise实例，则透传该实例的状态及结果；否则 fulfilled 并传出参数本身\n2. Promise.reject 传入的参数如果是promise实例且被 fulfilled，则 rejected 并传出该实例的结果；否则 reject 并传出参数本身\n\n比较简单，就直接放代码了。\n```javascript\nMyPromise.resolve = (value) => {\n  // 如果 value 是 promise 实例，透传实例即可；否则返回成功态\n  if (value instanceof MyPromise) return value;\n  return new MyPromise((resolve) => resolve(value));\n};\nMyPromise.reject = (value) => {\n  return new MyPromise((resolve, reject) => {\n    // 如果 value 是 promise 实例且是成功的，reject 该实例的值；否则reject value本身\n    MyPromise.resolve(value)\n      .then((v) => reject(v))\n      .catch(() => reject(value));\n  });\n};\n```\n\n至于 all/allSettled/race/any，我们再来几个测试案例：\n\n``` javascript\nvar a = Promise.all([1,2,3].map(v => {\n  return v === 3 ? new Promise((x) => { setTimeout(() => { console.log(123); x(v) }, 1000)}) : Promise.resolve(v);\n}))\nsetTimeout(() => console.log(a), 0); // Promise<pending>  \nsetTimeout(() => console.log(a), 1000) // Promise<fulfilled, [1,2,3]>\n\nvar b = Promise.allSettled([1,2,3].map(v => {\n  return v === 3 ? new Promise((resolve,reject) => { setTimeout(() => { console.log(123); reject(v) }, 1000)}) : Promise.resolve(v);\n}))\nsetTimeout(() => console.log(b), 0); // Promise<pending>  \nsetTimeout(() => console.log(b), 1000) // Promise<fulfilled, [{status: 'fulfilled', value: 1},{status: 'fulfilled', value: 2},{status: 'rejected', reason: 3}]>\n\nvar c = Promise.any([1,2,3].map(v => {\n  return v === 3 ? Promise.reject(v) : new Promise((resolve, reject) => { setTimeout(() => { console.log(123); resolve(v) }, 1000)});\n}));\nsetTimeout(() => console.log(c), 0); // Promise<pending>  \nsetTimeout(() => console.log(c), 1000) // Promise<fulfilled, 1>\n\nvar d = Promise.race([1,2,3].map(v => {\n  return v === 3 ? Promise.reject(v) : new Promise((resolve, reject) => { setTimeout(() => { console.log(123); resolve(v) }, 1000)});\n}));\nsetTimeout(() => console.log(d), 0); // Promise<rejected, 3>  \nsetTimeout(() => console.log(d), 1000) // Promise<rejected, 3>\n\n```\n解读一下:\n- Promise.all([]) ，所有元素都被 fulfilled 才成功；任一 rejected 就 rejected；否则 pending\n- Promise.allSettled([]) ，所有元素都被 fulfilled 或 rejected 才成功；否则 pending\n- Promise.any([]) ，任一元素被 fulfilled 才成功; 所有 rejected 才 rejected；否则 pending\n- Promise.race([]) ，任一元素被 fulfilled 或 rejected 立即返回它的结果；否则 pending\n\n搞清楚他们的状态流转之后，代码逻辑就比较清晰了，这里直接看代码：\n\n``` javascript\nMyPromise.all = (list) => {\n  return new MyPromise((resolve, reject) => {\n    let result = [];\n    let count = 0;\n    list.forEach((item, index) => {\n      MyPromise.resolve(item)\n        .then((res) => {\n          result[index] = res;\n          count += 1;\n        })\n        .catch((err) => reject(err))\n        .finally(() => {\n          // 如果存在失败或 pending 中的实例，什么都不做\n          if (count !== list.length) return;\n          resolve(result);\n        });\n    });\n  });\n};\nMyPromise.allSettled = (list) => {\n  return new MyPromise((resolve, reject) => {\n    let result = [];\n    let count = 0;\n    list.forEach((item, index) => {\n      MyPromise.resolve(item)\n        .then((res) => {\n          result[index] = { status: \"fulfilled\", value: res };\n          count += 1;\n        })\n        .catch((err) => {\n          result[index] = { status: \"rejected\", reason: err };\n          count += 1; // 一定要放在 result[index] 赋值后边，避免count自增后finally在赋值之前执行\n        })\n        .finally(() => {\n          // 如果存在 pending 中的实例，什么都不做\n          if (count !== list.length) return;\n          resolve(result);\n        });\n    });\n  });\n};\nMyPromise.any = (list) => {\n  return new MyPromise((resolve) => {\n    let result = [];\n    let count = 0;\n    list.forEach((item) => {\n      MyPromise.resolve(item)\n        .then((res) => {\n          resolve(res);\n        })\n        .catch((err) => {\n          result[index] = err;\n          count += 0;\n        })\n        .finally(() => {\n          if (count !== list.length) return;\n          throw new Error({\n            stack: \"AggregateError: All promises were rejected\",\n            message: \"All promises were rejected\",\n            errors: result,\n          });\n        });\n    });\n  });\n};\nMyPromise.race = (list) => {\n  return new MyPromise((resolve, reject) => {\n    list.forEach((item) => {\n      MyPromise.resolve(item)\n        .then((res) => resolve(res))\n        .catch((err) => reject(err));\n    });\n  });\n};\n```\n\n至此，MyPromise 就写完了，感谢各位读者耐心观看，如有帮助不胜荣幸。","slug":"Promise","published":1,"updated":"2023-02-23T06:13:40.887Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22m0002shoatr5lz9sn","content":"<h2 id=\"Promise-是什么\"><a href=\"#Promise-是什么\" class=\"headerlink\" title=\"Promise 是什么\"></a>Promise 是什么</h2><p>Promise 出现之前，处理异步，可以通过回调来解决，比如典型的 ajax：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ajax(&#123;</span><br><span class=\"line\">  url: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">  success: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ajax(&#123;</span><br><span class=\"line\">      url: <span class=\"string\">'b'</span>,</span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        ajax(&#123;</span><br><span class=\"line\">          url: <span class=\"string\">'c'</span>,</span><br><span class=\"line\">          success: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">          fail: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      fail: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>还有事件监听：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.addListener(<span class=\"string\">'click'</span>, callback)</span><br></pre></td></tr></table></figure>\n<p>可以看到，其实回调函数在不同的使用中传入方式不一。<br>Promise 最开始由社区提出，它避免了回调地狱，用法也更强大，es6 正式将 Promise 写进了规范。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ajaxPromise(&#123; <span class=\"attr\">url</span>: <span class=\"string\">'a'</span> &#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ajaxPromise(&#123; <span class=\"attr\">url</span>: <span class=\"string\">'b'</span>&#125;)</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ajaxPromise(&#123; <span class=\"attr\">url</span>: <span class=\"string\">'c'</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Promise-的用法\"><a href=\"#Promise-的用法\" class=\"headerlink\" title=\"Promise 的用法\"></a>Promise 的用法</h2><p>Promise 是一个构造函数，它的实例创建如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> resolve(<span class=\"number\">12</span>))</span><br><span class=\"line\"><span class=\"keyword\">var</span> p2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">r, reject</span>) =&gt;</span> reject(<span class=\"number\">12</span>))</span><br></pre></td></tr></table></figure>\n<p>promise 实例总是处于下列三种状态之一，最开始 promise 是在 pending 状态，一旦它变成‘完成’或‘拒绝’，则不会再变：</p>\n<ul>\n<li>待定: pending</li>\n<li>完成: fulfilled</li>\n<li>拒绝: rejected</li>\n</ul>\n<p>支持以下几种实例用法和静态：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span>.prototype.then </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.prototype.catch</span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.prototype.finally</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.resolve(any) </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.reject(any)  </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.all([])  </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.allSettled([])</span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.any([])  </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.race([])</span><br></pre></td></tr></table></figure>\n<h2 id=\"Promise-实例方法的自定义实现\"><a href=\"#Promise-实例方法的自定义实现\" class=\"headerlink\" title=\"Promise 实例方法的自定义实现\"></a>Promise 实例方法的自定义实现</h2><p>我们先来实现几个实例方法，过去我写过但没有成功，反思一下还是对一些细节的理解不到位导致。我们看下下边这个测试脚本：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 测试用例 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  resolve(<span class=\"string\">'start'</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'then 执行'</span>); <span class=\"keyword\">return</span> <span class=\"string\">'thenReturnResult'</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = a.catch(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch 执行'</span>); <span class=\"keyword\">return</span> <span class=\"string\">'catchReturnResult'</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = a.finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally 执行'</span>); <span class=\"keyword\">return</span> <span class=\"string\">'finallyReturnResult'</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b, b === c, c === d); </span><br><span class=\"line\"><span class=\"comment\">// false false false</span></span><br></pre></td></tr></table></figure></p>\n<p>发现有一个非常重要的细节是：</p>\n<blockquote>\n<p>一个 promise 实例只能一个 then/catch/finally 函数处理，处理完后返回的都是新的 promise。</p>\n</blockquote>\n<p>写代码之前，我们先来解读一下这段代码的执行顺序，以便我们写的更加的顺滑：</p>\n<ol>\n<li>立即执行 new Promise 时传入的函数，Promise 给此函数传入resolve/reject参数，并记录 then、catch、finally 的挂载情况。</li>\n<li>使用者调用 resolve/reject，a 实例的状态被改变，触发 a.then/a.catch/a.finally 执行。</li>\n<li>a.then 挂载函数被执行，b 实例的状态被改变。</li>\n<li>a.catch 执行默认逻辑（不执行挂载函数），c 实例的状态被改变。</li>\n<li>a.finally 挂载函数被执行，d 实例的状态被改变。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyPromise</span> </span>&#123;</span><br><span class=\"line\">  status = <span class=\"string\">\"pending\"</span>; <span class=\"comment\">// 'pending' | 'fulfilled' | 'rejected'</span></span><br><span class=\"line\">  value = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 一个实例只能被一个 then/catch/finally 函数处理，所以无需用列表存储挂载函数</span></span><br><span class=\"line\">  sucFn = <span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v; <span class=\"comment\">// 成功之后执行</span></span><br><span class=\"line\">  errFn = <span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v; <span class=\"comment\">// 失败之后执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 立即执行，并传入 resolve/reject 函数供使用者调用</span></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(fn) &#123;</span><br><span class=\"line\">    fn(this.#resolve, this.#reject);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 成功之后，触发 .then/.catch/.finally 执行</span></span><br><span class=\"line\">  #resolve = value =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"fulfilled\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sucFn &amp;&amp; <span class=\"keyword\">this</span>.sucFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  #reject = reason =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"rejected\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = reason;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.errFn &amp;&amp; <span class=\"keyword\">this</span>.errFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// a.then 返回的是一个新的 Promise, 挂载的 onFulfilled|onRejected 需要在 a 的状态变化后执行</span></span><br><span class=\"line\">  then = <span class=\"function\">(<span class=\"params\">onFulfilled, onRejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sucFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果没传，就透传当前promise状态和值；否则执行 onFulfilled</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!onFulfilled) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.status === <span class=\"string\">\"fulfilled\"</span></span><br><span class=\"line\">            ? resolve(<span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">            : reject(<span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          resolve(onFulfilled(<span class=\"keyword\">this</span>.value));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">          reject(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.errFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">catch</span> = <span class=\"function\">(<span class=\"params\">onRejected</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">finally</span> = <span class=\"function\">(<span class=\"params\">callback</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里实现了一部分 then 的逻辑，catch、finally 的逻辑是类似的，读者可以自己尝试写一下。</p>\n<h3 id=\"Promise-静态方法实现全代码\"><a href=\"#Promise-静态方法实现全代码\" class=\"headerlink\" title=\"Promise 静态方法实现全代码\"></a>Promise 静态方法实现全代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyPromise</span> </span>&#123;</span><br><span class=\"line\">  status = <span class=\"string\">\"pending\"</span>; <span class=\"comment\">// 'pending' | 'fulfilled' | 'rejected'</span></span><br><span class=\"line\">  value = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      fn(this.#resolve, this.#reject);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">      this.#reject(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  #resolve = (value) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"fulfilled\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sucFn &amp;&amp; <span class=\"keyword\">this</span>.sucFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  #reject = (reason) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"rejected\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = reason;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.errFn &amp;&amp; <span class=\"keyword\">this</span>.errFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  #callbackCatch = (fn, resolve, reject) =&gt; () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!fn) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果不传入，就透传当前promise状态</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.status === <span class=\"string\">\"fulfilled\"</span></span><br><span class=\"line\">        ? resolve(<span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">        : reject(<span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      resolve(fn(<span class=\"keyword\">this</span>.value));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">      reject(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  then = <span class=\"function\">(<span class=\"params\">onFulfilled, onRejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// then 返回的是一个新的 Promise</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      this.sucFn = this.#callbackCatch(onFulfilled, resolve, reject);</span><br><span class=\"line\">      this.errFn = this.#callbackCatch(onRejected, resolve, reject);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">catch</span> = <span class=\"function\">(<span class=\"params\">onRejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果上一个 promise 是成功的，被 catch 时依然要把成功的结果透传</span></span><br><span class=\"line\">      this.sucFn = this.#callbackCatch((v) =&gt; v, resolve, reject);</span><br><span class=\"line\">      this.errFn = this.#callbackCatch(onRejected, resolve, reject);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">finally</span> = <span class=\"function\">(<span class=\"params\">callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 正常情况下 finally 要把上一个 promise 的状态和结果透传</span></span><br><span class=\"line\">      <span class=\"comment\">// 只有一种特殊情况：如果finally内部抛错，状态仍需要变更为 rejected</span></span><br><span class=\"line\">      this.sucFn = this.#callbackCatch(</span><br><span class=\"line\">        () =&gt; callback(),</span><br><span class=\"line\">        () =&gt; resolve(<span class=\"keyword\">this</span>.value),</span><br><span class=\"line\">        reject</span><br><span class=\"line\">      );</span><br><span class=\"line\">      this.errFn = this.#callbackCatch(</span><br><span class=\"line\">        () =&gt; callback(),</span><br><span class=\"line\">        () =&gt; resolve(<span class=\"keyword\">this</span>.value),</span><br><span class=\"line\">        reject</span><br><span class=\"line\">      );</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再用以下脚本来测试一下结果，看看与Promise是否一致：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);  <span class=\"comment\">// 2</span></span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'start'</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'then1'</span>, res);  <span class=\"comment\">// then1 start</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'then1Res'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch1'</span>, e);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">'catch1Throw'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(</span><br><span class=\"line\">    (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'then2'</span>, res);   <span class=\"comment\">// then2 then1Res</span></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"string\">'then2Throw'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    (err) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'then2Catch'</span>, err);</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"string\">'then2CatchThrow'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch2'</span>, e);  <span class=\"comment\">// catch2 then2Throw</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'catch2Res'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'then3'</span>, res); <span class=\"comment\">// then3 catch2Res</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'then3Res'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .finally(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally11111'</span>, res);  <span class=\"comment\">// finally11111 undefined</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .finally(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally22222'</span>, res);  <span class=\"comment\">// finally22222 undefined</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'finally22222'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(</span><br><span class=\"line\">    (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'then4'</span>, res);   <span class=\"comment\">// then4 then3Res</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'then4Res'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    (err) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'thenCatch'</span>, err);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">'thenCatchThrow'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">  .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally33333'</span>);  <span class=\"comment\">// finally33333</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">'finally3Throw'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'then5'</span>, res);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">'then5Throw'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch4'</span>, e);  <span class=\"comment\">// catch4 finally3Throw</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'catch4Res'</span>;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>完全一致（图就不贴了，读者可以自行执行以下），perfect。</p>\n<h2 id=\"Promise-静态方法的自定义实现\"><a href=\"#Promise-静态方法的自定义实现\" class=\"headerlink\" title=\"Promise 静态方法的自定义实现\"></a>Promise 静态方法的自定义实现</h2><p>当实例方法实现好之后，静态方法就显得比较轻松了，大家只要理解了这几个函数的执行细节，就会好些很多。<br>先来一段测试脚本，先来看看 resolve、reject 静态方法的表现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sucFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> resolve(<span class=\"string\">'111'</span>));</span><br><span class=\"line\"><span class=\"keyword\">var</span> errFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> reject(<span class=\"string\">'222'</span>));</span><br><span class=\"line\"><span class=\"keyword\">var</span> pendingFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> resolve(<span class=\"string\">'333'</span>), <span class=\"number\">1000</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = errFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.resolve(a);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = pendingFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.resolve(a); </span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"built_in\">Promise</span>.resolve(<span class=\"built_in\">Promise</span>.resolve(a)); </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = sucFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.resolve(a);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = sucFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.reject(a);  <span class=\"comment\">// b.status =&gt; 'fulfilled', b.value =&gt; '222'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = errFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.reject(a);  <span class=\"comment\">// b.status =&gt; 'rejected', b.value =&gt; Promise&lt;rejected, '222'&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = pendingFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.reject(a);  <span class=\"comment\">// b.status =&gt; 'rejected', b.value =&gt; Promise&lt;pending, '222'&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>从执行结果我们来解读一下：</p>\n<ol>\n<li>Promise.resolve 传入的参数如果是promise实例，则透传该实例的状态及结果；否则 fulfilled 并传出参数本身</li>\n<li>Promise.reject 传入的参数如果是promise实例且被 fulfilled，则 rejected 并传出该实例的结果；否则 reject 并传出参数本身</li>\n</ol>\n<p>比较简单，就直接放代码了。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyPromise.resolve = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果 value 是 promise 实例，透传实例即可；否则返回成功态</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> MyPromise) <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> resolve(value));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.reject = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果 value 是 promise 实例且是成功的，reject 该实例的值；否则reject value本身</span></span><br><span class=\"line\">    MyPromise.resolve(value)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> reject(v))</span><br><span class=\"line\">      .catch(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> reject(value));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>至于 all/allSettled/race/any，我们再来几个测试案例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">Promise</span>.all([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); x(v) &#125;, <span class=\"number\">1000</span>)&#125;) : <span class=\"built_in\">Promise</span>.resolve(v);</span><br><span class=\"line\">&#125;))</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(a), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;pending&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(a), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;fulfilled, [1,2,3]&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.allSettled([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); reject(v) &#125;, <span class=\"number\">1000</span>)&#125;) : <span class=\"built_in\">Promise</span>.resolve(v);</span><br><span class=\"line\">&#125;))</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(b), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;pending&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(b), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;fulfilled, [&#123;status: 'fulfilled', value: 1&#125;,&#123;status: 'fulfilled', value: 2&#125;,&#123;status: 'rejected', reason: 3&#125;]&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"built_in\">Promise</span>.any([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"built_in\">Promise</span>.reject(v) : <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); resolve(v) &#125;, <span class=\"number\">1000</span>)&#125;);</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(c), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;pending&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(c), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;fulfilled, 1&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"built_in\">Promise</span>.race([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"built_in\">Promise</span>.reject(v) : <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); resolve(v) &#125;, <span class=\"number\">1000</span>)&#125;);</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(d), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;rejected, 3&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(d), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;rejected, 3&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解读一下:</p>\n<ul>\n<li>Promise.all([]) ，所有元素都被 fulfilled 才成功；任一 rejected 就 rejected；否则 pending</li>\n<li>Promise.allSettled([]) ，所有元素都被 fulfilled 或 rejected 才成功；否则 pending</li>\n<li>Promise.any([]) ，任一元素被 fulfilled 才成功; 所有 rejected 才 rejected；否则 pending</li>\n<li>Promise.race([]) ，任一元素被 fulfilled 或 rejected 立即返回它的结果；否则 pending</li>\n</ul>\n<p>搞清楚他们的状态流转之后，代码逻辑就比较清晰了，这里直接看代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyPromise.all = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = res;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> reject(err))</span><br><span class=\"line\">        .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 如果存在失败或 pending 中的实例，什么都不做</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count !== list.length) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">          resolve(result);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.allSettled = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = &#123; <span class=\"attr\">status</span>: <span class=\"string\">\"fulfilled\"</span>, <span class=\"attr\">value</span>: res &#125;;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = &#123; <span class=\"attr\">status</span>: <span class=\"string\">\"rejected\"</span>, <span class=\"attr\">reason</span>: err &#125;;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>; <span class=\"comment\">// 一定要放在 result[index] 赋值后边，避免count自增后finally在赋值之前执行</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 如果存在 pending 中的实例，什么都不做</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count !== list.length) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">          resolve(result);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.any = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          resolve(res);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = err;</span><br><span class=\"line\">          count += <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count !== list.length) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(&#123;</span><br><span class=\"line\">            stack: <span class=\"string\">\"AggregateError: All promises were rejected\"</span>,</span><br><span class=\"line\">            message: <span class=\"string\">\"All promises were rejected\"</span>,</span><br><span class=\"line\">            errors: result,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.race = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> resolve(res))</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> reject(err));</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>至此，MyPromise 就写完了，感谢各位读者耐心观看，如有帮助不胜荣幸。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Promise-是什么\"><a href=\"#Promise-是什么\" class=\"headerlink\" title=\"Promise 是什么\"></a>Promise 是什么</h2><p>Promise 出现之前，处理异步，可以通过回调来解决，比如典型的 ajax：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ajax(&#123;</span><br><span class=\"line\">  url: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">  success: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ajax(&#123;</span><br><span class=\"line\">      url: <span class=\"string\">'b'</span>,</span><br><span class=\"line\">      success: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        ajax(&#123;</span><br><span class=\"line\">          url: <span class=\"string\">'c'</span>,</span><br><span class=\"line\">          success: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">          fail: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      fail: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>还有事件监听：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.addListener(<span class=\"string\">'click'</span>, callback)</span><br></pre></td></tr></table></figure>\n<p>可以看到，其实回调函数在不同的使用中传入方式不一。<br>Promise 最开始由社区提出，它避免了回调地狱，用法也更强大，es6 正式将 Promise 写进了规范。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ajaxPromise(&#123; <span class=\"attr\">url</span>: <span class=\"string\">'a'</span> &#125;)</span><br><span class=\"line\">.then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ajaxPromise(&#123; <span class=\"attr\">url</span>: <span class=\"string\">'b'</span>&#125;)</span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ajaxPromise(&#123; <span class=\"attr\">url</span>: <span class=\"string\">'c'</span>&#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"Promise-的用法\"><a href=\"#Promise-的用法\" class=\"headerlink\" title=\"Promise 的用法\"></a>Promise 的用法</h2><p>Promise 是一个构造函数，它的实例创建如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> p = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> p1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> resolve(<span class=\"number\">12</span>))</span><br><span class=\"line\"><span class=\"keyword\">var</span> p2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">r, reject</span>) =&gt;</span> reject(<span class=\"number\">12</span>))</span><br></pre></td></tr></table></figure>\n<p>promise 实例总是处于下列三种状态之一，最开始 promise 是在 pending 状态，一旦它变成‘完成’或‘拒绝’，则不会再变：</p>\n<ul>\n<li>待定: pending</li>\n<li>完成: fulfilled</li>\n<li>拒绝: rejected</li>\n</ul>\n<p>支持以下几种实例用法和静态：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Promise</span>.prototype.then </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.prototype.catch</span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.prototype.finally</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.resolve(any) </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.reject(any)  </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.all([])  </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.allSettled([])</span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.any([])  </span><br><span class=\"line\"><span class=\"built_in\">Promise</span>.race([])</span><br></pre></td></tr></table></figure>\n<h2 id=\"Promise-实例方法的自定义实现\"><a href=\"#Promise-实例方法的自定义实现\" class=\"headerlink\" title=\"Promise 实例方法的自定义实现\"></a>Promise 实例方法的自定义实现</h2><p>我们先来实现几个实例方法，过去我写过但没有成功，反思一下还是对一些细节的理解不到位导致。我们看下下边这个测试脚本：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 测试用例 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  resolve(<span class=\"string\">'start'</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a.then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'then 执行'</span>); <span class=\"keyword\">return</span> <span class=\"string\">'thenReturnResult'</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = a.catch(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch 执行'</span>); <span class=\"keyword\">return</span> <span class=\"string\">'catchReturnResult'</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = a.finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally 执行'</span>); <span class=\"keyword\">return</span> <span class=\"string\">'finallyReturnResult'</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b, b === c, c === d); </span><br><span class=\"line\"><span class=\"comment\">// false false false</span></span><br></pre></td></tr></table></figure></p>\n<p>发现有一个非常重要的细节是：</p>\n<blockquote>\n<p>一个 promise 实例只能一个 then/catch/finally 函数处理，处理完后返回的都是新的 promise。</p>\n</blockquote>\n<p>写代码之前，我们先来解读一下这段代码的执行顺序，以便我们写的更加的顺滑：</p>\n<ol>\n<li>立即执行 new Promise 时传入的函数，Promise 给此函数传入resolve/reject参数，并记录 then、catch、finally 的挂载情况。</li>\n<li>使用者调用 resolve/reject，a 实例的状态被改变，触发 a.then/a.catch/a.finally 执行。</li>\n<li>a.then 挂载函数被执行，b 实例的状态被改变。</li>\n<li>a.catch 执行默认逻辑（不执行挂载函数），c 实例的状态被改变。</li>\n<li>a.finally 挂载函数被执行，d 实例的状态被改变。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyPromise</span> </span>&#123;</span><br><span class=\"line\">  status = <span class=\"string\">\"pending\"</span>; <span class=\"comment\">// 'pending' | 'fulfilled' | 'rejected'</span></span><br><span class=\"line\">  value = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 一个实例只能被一个 then/catch/finally 函数处理，所以无需用列表存储挂载函数</span></span><br><span class=\"line\">  sucFn = <span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v; <span class=\"comment\">// 成功之后执行</span></span><br><span class=\"line\">  errFn = <span class=\"function\"><span class=\"params\">v</span> =&gt;</span> v; <span class=\"comment\">// 失败之后执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 立即执行，并传入 resolve/reject 函数供使用者调用</span></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(fn) &#123;</span><br><span class=\"line\">    fn(this.#resolve, this.#reject);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 成功之后，触发 .then/.catch/.finally 执行</span></span><br><span class=\"line\">  #resolve = value =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"fulfilled\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sucFn &amp;&amp; <span class=\"keyword\">this</span>.sucFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  #reject = reason =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"rejected\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = reason;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.errFn &amp;&amp; <span class=\"keyword\">this</span>.errFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// a.then 返回的是一个新的 Promise, 挂载的 onFulfilled|onRejected 需要在 a 的状态变化后执行</span></span><br><span class=\"line\">  then = <span class=\"function\">(<span class=\"params\">onFulfilled, onRejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sucFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果没传，就透传当前promise状态和值；否则执行 onFulfilled</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!onFulfilled) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.status === <span class=\"string\">\"fulfilled\"</span></span><br><span class=\"line\">            ? resolve(<span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">            : reject(<span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">          resolve(onFulfilled(<span class=\"keyword\">this</span>.value));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">          reject(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.errFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;&#125;;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">catch</span> = <span class=\"function\">(<span class=\"params\">onRejected</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">finally</span> = <span class=\"function\">(<span class=\"params\">callback</span>) =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里实现了一部分 then 的逻辑，catch、finally 的逻辑是类似的，读者可以自己尝试写一下。</p>\n<h3 id=\"Promise-静态方法实现全代码\"><a href=\"#Promise-静态方法实现全代码\" class=\"headerlink\" title=\"Promise 静态方法实现全代码\"></a>Promise 静态方法实现全代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyPromise</span> </span>&#123;</span><br><span class=\"line\">  status = <span class=\"string\">\"pending\"</span>; <span class=\"comment\">// 'pending' | 'fulfilled' | 'rejected'</span></span><br><span class=\"line\">  value = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      fn(this.#resolve, this.#reject);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">      this.#reject(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  #resolve = (value) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"fulfilled\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = value;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.sucFn &amp;&amp; <span class=\"keyword\">this</span>.sucFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  #reject = (reason) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.status !== <span class=\"string\">\"pending\"</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.status = <span class=\"string\">\"rejected\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value = reason;</span><br><span class=\"line\">    queueMicrotask(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.errFn &amp;&amp; <span class=\"keyword\">this</span>.errFn();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  #callbackCatch = (fn, resolve, reject) =&gt; () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!fn) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果不传入，就透传当前promise状态</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.status === <span class=\"string\">\"fulfilled\"</span></span><br><span class=\"line\">        ? resolve(<span class=\"keyword\">this</span>.value)</span><br><span class=\"line\">        : reject(<span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      resolve(fn(<span class=\"keyword\">this</span>.value));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">      reject(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  then = <span class=\"function\">(<span class=\"params\">onFulfilled, onRejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// then 返回的是一个新的 Promise</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      this.sucFn = this.#callbackCatch(onFulfilled, resolve, reject);</span><br><span class=\"line\">      this.errFn = this.#callbackCatch(onRejected, resolve, reject);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">catch</span> = <span class=\"function\">(<span class=\"params\">onRejected</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 如果上一个 promise 是成功的，被 catch 时依然要把成功的结果透传</span></span><br><span class=\"line\">      this.sucFn = this.#callbackCatch((v) =&gt; v, resolve, reject);</span><br><span class=\"line\">      this.errFn = this.#callbackCatch(onRejected, resolve, reject);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">finally</span> = <span class=\"function\">(<span class=\"params\">callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 正常情况下 finally 要把上一个 promise 的状态和结果透传</span></span><br><span class=\"line\">      <span class=\"comment\">// 只有一种特殊情况：如果finally内部抛错，状态仍需要变更为 rejected</span></span><br><span class=\"line\">      this.sucFn = this.#callbackCatch(</span><br><span class=\"line\">        () =&gt; callback(),</span><br><span class=\"line\">        () =&gt; resolve(<span class=\"keyword\">this</span>.value),</span><br><span class=\"line\">        reject</span><br><span class=\"line\">      );</span><br><span class=\"line\">      this.errFn = this.#callbackCatch(</span><br><span class=\"line\">        () =&gt; callback(),</span><br><span class=\"line\">        () =&gt; resolve(<span class=\"keyword\">this</span>.value),</span><br><span class=\"line\">        reject</span><br><span class=\"line\">      );</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>再用以下脚本来测试一下结果，看看与Promise是否一致：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>);  <span class=\"comment\">// 2</span></span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    resolve(<span class=\"string\">'start'</span>);</span><br><span class=\"line\">  &#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'then1'</span>, res);  <span class=\"comment\">// then1 start</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'then1Res'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch1'</span>, e);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">'catch1Throw'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(</span><br><span class=\"line\">    (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'then2'</span>, res);   <span class=\"comment\">// then2 then1Res</span></span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"string\">'then2Throw'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    (err) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'then2Catch'</span>, err);</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"string\">'then2CatchThrow'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch2'</span>, e);  <span class=\"comment\">// catch2 then2Throw</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'catch2Res'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'then3'</span>, res); <span class=\"comment\">// then3 catch2Res</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'then3Res'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .finally(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally11111'</span>, res);  <span class=\"comment\">// finally11111 undefined</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .finally(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally22222'</span>, res);  <span class=\"comment\">// finally22222 undefined</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'finally22222'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(</span><br><span class=\"line\">    (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'then4'</span>, res);   <span class=\"comment\">// then4 then3Res</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'then4Res'</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    (err) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'thenCatch'</span>, err);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">'thenCatchThrow'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  )</span><br><span class=\"line\">  .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'finally33333'</span>);  <span class=\"comment\">// finally33333</span></span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">'finally3Throw'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'then5'</span>, res);</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">'then5Throw'</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .catch(<span class=\"function\">(<span class=\"params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'catch4'</span>, e);  <span class=\"comment\">// catch4 finally3Throw</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'catch4Res'</span>;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>完全一致（图就不贴了，读者可以自行执行以下），perfect。</p>\n<h2 id=\"Promise-静态方法的自定义实现\"><a href=\"#Promise-静态方法的自定义实现\" class=\"headerlink\" title=\"Promise 静态方法的自定义实现\"></a>Promise 静态方法的自定义实现</h2><p>当实例方法实现好之后，静态方法就显得比较轻松了，大家只要理解了这几个函数的执行细节，就会好些很多。<br>先来一段测试脚本，先来看看 resolve、reject 静态方法的表现</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sucFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> resolve(<span class=\"string\">'111'</span>));</span><br><span class=\"line\"><span class=\"keyword\">var</span> errFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> reject(<span class=\"string\">'222'</span>));</span><br><span class=\"line\"><span class=\"keyword\">var</span> pendingFn = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> resolve(<span class=\"string\">'333'</span>), <span class=\"number\">1000</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = errFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.resolve(a);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = pendingFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.resolve(a); </span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"built_in\">Promise</span>.resolve(<span class=\"built_in\">Promise</span>.resolve(a)); </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = sucFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.resolve(a);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = sucFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.reject(a);  <span class=\"comment\">// b.status =&gt; 'fulfilled', b.value =&gt; '222'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = errFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.reject(a);  <span class=\"comment\">// b.status =&gt; 'rejected', b.value =&gt; Promise&lt;rejected, '222'&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = pendingFn();</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.reject(a);  <span class=\"comment\">// b.status =&gt; 'rejected', b.value =&gt; Promise&lt;pending, '222'&gt;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a === b); <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>从执行结果我们来解读一下：</p>\n<ol>\n<li>Promise.resolve 传入的参数如果是promise实例，则透传该实例的状态及结果；否则 fulfilled 并传出参数本身</li>\n<li>Promise.reject 传入的参数如果是promise实例且被 fulfilled，则 rejected 并传出该实例的结果；否则 reject 并传出参数本身</li>\n</ol>\n<p>比较简单，就直接放代码了。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyPromise.resolve = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果 value 是 promise 实例，透传实例即可；否则返回成功态</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> MyPromise) <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> resolve(value));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.reject = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果 value 是 promise 实例且是成功的，reject 该实例的值；否则reject value本身</span></span><br><span class=\"line\">    MyPromise.resolve(value)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> reject(v))</span><br><span class=\"line\">      .catch(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> reject(value));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>至于 all/allSettled/race/any，我们再来几个测试案例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"built_in\">Promise</span>.all([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); x(v) &#125;, <span class=\"number\">1000</span>)&#125;) : <span class=\"built_in\">Promise</span>.resolve(v);</span><br><span class=\"line\">&#125;))</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(a), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;pending&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(a), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;fulfilled, [1,2,3]&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"built_in\">Promise</span>.allSettled([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve,reject</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); reject(v) &#125;, <span class=\"number\">1000</span>)&#125;) : <span class=\"built_in\">Promise</span>.resolve(v);</span><br><span class=\"line\">&#125;))</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(b), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;pending&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(b), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;fulfilled, [&#123;status: 'fulfilled', value: 1&#125;,&#123;status: 'fulfilled', value: 2&#125;,&#123;status: 'rejected', reason: 3&#125;]&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"built_in\">Promise</span>.any([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"built_in\">Promise</span>.reject(v) : <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); resolve(v) &#125;, <span class=\"number\">1000</span>)&#125;);</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(c), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;pending&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(c), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;fulfilled, 1&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"built_in\">Promise</span>.race([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].map(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v === <span class=\"number\">3</span> ? <span class=\"built_in\">Promise</span>.reject(v) : <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123; setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123; <span class=\"built_in\">console</span>.log(<span class=\"number\">123</span>); resolve(v) &#125;, <span class=\"number\">1000</span>)&#125;);</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(d), <span class=\"number\">0</span>); <span class=\"comment\">// Promise&lt;rejected, 3&gt;  </span></span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log(d), <span class=\"number\">1000</span>) <span class=\"comment\">// Promise&lt;rejected, 3&gt;</span></span><br></pre></td></tr></table></figure>\n<p>解读一下:</p>\n<ul>\n<li>Promise.all([]) ，所有元素都被 fulfilled 才成功；任一 rejected 就 rejected；否则 pending</li>\n<li>Promise.allSettled([]) ，所有元素都被 fulfilled 或 rejected 才成功；否则 pending</li>\n<li>Promise.any([]) ，任一元素被 fulfilled 才成功; 所有 rejected 才 rejected；否则 pending</li>\n<li>Promise.race([]) ，任一元素被 fulfilled 或 rejected 立即返回它的结果；否则 pending</li>\n</ul>\n<p>搞清楚他们的状态流转之后，代码逻辑就比较清晰了，这里直接看代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MyPromise.all = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = res;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> reject(err))</span><br><span class=\"line\">        .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 如果存在失败或 pending 中的实例，什么都不做</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count !== list.length) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">          resolve(result);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.allSettled = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = &#123; <span class=\"attr\">status</span>: <span class=\"string\">\"fulfilled\"</span>, <span class=\"attr\">value</span>: res &#125;;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = &#123; <span class=\"attr\">status</span>: <span class=\"string\">\"rejected\"</span>, <span class=\"attr\">reason</span>: err &#125;;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>; <span class=\"comment\">// 一定要放在 result[index] 赋值后边，避免count自增后finally在赋值之前执行</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">// 如果存在 pending 中的实例，什么都不做</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count !== list.length) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">          resolve(result);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.any = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          resolve(res);</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          result[index] = err;</span><br><span class=\"line\">          count += <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .finally(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (count !== list.length) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(&#123;</span><br><span class=\"line\">            stack: <span class=\"string\">\"AggregateError: All promises were rejected\"</span>,</span><br><span class=\"line\">            message: <span class=\"string\">\"All promises were rejected\"</span>,</span><br><span class=\"line\">            errors: result,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">MyPromise.race = <span class=\"function\">(<span class=\"params\">list</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> MyPromise(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    list.forEach(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      MyPromise.resolve(item)</span><br><span class=\"line\">        .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> resolve(res))</span><br><span class=\"line\">        .catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> reject(err));</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>至此，MyPromise 就写完了，感谢各位读者耐心观看，如有帮助不胜荣幸。</p>\n"},{"title":"减肥四步法","date":"2023-01-31T16:00:00.000Z","_content":"\n## 第一步：CRD平衡饮食\n通过控制饮食，将糖功能转化为脂肪供能。（23天减了10斤，从55=>50.1）\n- 严格控制卡路里的摄入量\n- 少吃碳水：米面糖、红薯、粗粮、大部分水果、红薯山药等根茎类食物\n- 吃好肉：鱼肉虾蛋奶\n- 少吃油吃好油：椰子油MCT油橄榄油黄油等优质脂肪\n- 多吃蔬菜\n\n## 第二步：168 饮食\n此时已经转化为脂肪供能的模式了，会明显感觉身体即使不吃东西也不会那么容易饿。\n通过延长空腹的时间，让身体有更长的时间去消耗脂肪。\n\n## 第三步：补充营养素增加代谢\n补充维生素b族、维生素d3、镁等线粒体的营养素，用营养去维持代谢水平。\n\n## 第四步：每天15分钟运动\n每天增加15分钟高强度间歇运动，比如波比跳。\n\n","source":"_posts/health.md","raw":"---\ntitle: 减肥四步法\ndate: 2023-02-01\n---\n\n## 第一步：CRD平衡饮食\n通过控制饮食，将糖功能转化为脂肪供能。（23天减了10斤，从55=>50.1）\n- 严格控制卡路里的摄入量\n- 少吃碳水：米面糖、红薯、粗粮、大部分水果、红薯山药等根茎类食物\n- 吃好肉：鱼肉虾蛋奶\n- 少吃油吃好油：椰子油MCT油橄榄油黄油等优质脂肪\n- 多吃蔬菜\n\n## 第二步：168 饮食\n此时已经转化为脂肪供能的模式了，会明显感觉身体即使不吃东西也不会那么容易饿。\n通过延长空腹的时间，让身体有更长的时间去消耗脂肪。\n\n## 第三步：补充营养素增加代谢\n补充维生素b族、维生素d3、镁等线粒体的营养素，用营养去维持代谢水平。\n\n## 第四步：每天15分钟运动\n每天增加15分钟高强度间歇运动，比如波比跳。\n\n","slug":"health","published":1,"updated":"2023-02-23T06:13:40.822Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22n0003shoah4isdy1g","content":"<h2 id=\"第一步：CRD平衡饮食\"><a href=\"#第一步：CRD平衡饮食\" class=\"headerlink\" title=\"第一步：CRD平衡饮食\"></a>第一步：CRD平衡饮食</h2><p>通过控制饮食，将糖功能转化为脂肪供能。（23天减了10斤，从55=&gt;50.1）</p>\n<ul>\n<li>严格控制卡路里的摄入量</li>\n<li>少吃碳水：米面糖、红薯、粗粮、大部分水果、红薯山药等根茎类食物</li>\n<li>吃好肉：鱼肉虾蛋奶</li>\n<li>少吃油吃好油：椰子油MCT油橄榄油黄油等优质脂肪</li>\n<li>多吃蔬菜</li>\n</ul>\n<h2 id=\"第二步：168-饮食\"><a href=\"#第二步：168-饮食\" class=\"headerlink\" title=\"第二步：168 饮食\"></a>第二步：168 饮食</h2><p>此时已经转化为脂肪供能的模式了，会明显感觉身体即使不吃东西也不会那么容易饿。<br>通过延长空腹的时间，让身体有更长的时间去消耗脂肪。</p>\n<h2 id=\"第三步：补充营养素增加代谢\"><a href=\"#第三步：补充营养素增加代谢\" class=\"headerlink\" title=\"第三步：补充营养素增加代谢\"></a>第三步：补充营养素增加代谢</h2><p>补充维生素b族、维生素d3、镁等线粒体的营养素，用营养去维持代谢水平。</p>\n<h2 id=\"第四步：每天15分钟运动\"><a href=\"#第四步：每天15分钟运动\" class=\"headerlink\" title=\"第四步：每天15分钟运动\"></a>第四步：每天15分钟运动</h2><p>每天增加15分钟高强度间歇运动，比如波比跳。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"第一步：CRD平衡饮食\"><a href=\"#第一步：CRD平衡饮食\" class=\"headerlink\" title=\"第一步：CRD平衡饮食\"></a>第一步：CRD平衡饮食</h2><p>通过控制饮食，将糖功能转化为脂肪供能。（23天减了10斤，从55=&gt;50.1）</p>\n<ul>\n<li>严格控制卡路里的摄入量</li>\n<li>少吃碳水：米面糖、红薯、粗粮、大部分水果、红薯山药等根茎类食物</li>\n<li>吃好肉：鱼肉虾蛋奶</li>\n<li>少吃油吃好油：椰子油MCT油橄榄油黄油等优质脂肪</li>\n<li>多吃蔬菜</li>\n</ul>\n<h2 id=\"第二步：168-饮食\"><a href=\"#第二步：168-饮食\" class=\"headerlink\" title=\"第二步：168 饮食\"></a>第二步：168 饮食</h2><p>此时已经转化为脂肪供能的模式了，会明显感觉身体即使不吃东西也不会那么容易饿。<br>通过延长空腹的时间，让身体有更长的时间去消耗脂肪。</p>\n<h2 id=\"第三步：补充营养素增加代谢\"><a href=\"#第三步：补充营养素增加代谢\" class=\"headerlink\" title=\"第三步：补充营养素增加代谢\"></a>第三步：补充营养素增加代谢</h2><p>补充维生素b族、维生素d3、镁等线粒体的营养素，用营养去维持代谢水平。</p>\n<h2 id=\"第四步：每天15分钟运动\"><a href=\"#第四步：每天15分钟运动\" class=\"headerlink\" title=\"第四步：每天15分钟运动\"></a>第四步：每天15分钟运动</h2><p>每天增加15分钟高强度间歇运动，比如波比跳。</p>\n"},{"title":"菜单炒一本","date":"2023-01-31T16:00:00.000Z","_content":"\n### 蔬菜\n- 香菇青菜\n- 炒香菇\n- 手撕包菜\n- 炒胡萝卜\n- 炒青笋\n- 炒扁豆丝\n- 炒四季豆\n- 煎豆腐\n- 青椒茄子\n- 香葱炒蛋\n- 洋葱炒蛋\n- 番茄炒蛋\n- 小炒鸡蛋\n\n### 肉类\n- 香菇炒鸡肉\n- 小炒仔鸡\n- 可乐鸡翅\n- 辣子鸡腿\n- 蒜苗小炒肉\n- 蒜苗炒腊肉\n- 蒸扣肉\n- 苦瓜炒腊肉\n- 鱼炖豆腐\n- 西红柿牛腩\n- 炖猪蹄\n- 酱骨头\n\n### 主食\n- 米饭\n- 饺子\n- 油泼面\n- 包饺子","source":"_posts/cookbook.md","raw":"---\ntitle: 菜单炒一本\ndate: 2023-02-01\n---\n\n### 蔬菜\n- 香菇青菜\n- 炒香菇\n- 手撕包菜\n- 炒胡萝卜\n- 炒青笋\n- 炒扁豆丝\n- 炒四季豆\n- 煎豆腐\n- 青椒茄子\n- 香葱炒蛋\n- 洋葱炒蛋\n- 番茄炒蛋\n- 小炒鸡蛋\n\n### 肉类\n- 香菇炒鸡肉\n- 小炒仔鸡\n- 可乐鸡翅\n- 辣子鸡腿\n- 蒜苗小炒肉\n- 蒜苗炒腊肉\n- 蒸扣肉\n- 苦瓜炒腊肉\n- 鱼炖豆腐\n- 西红柿牛腩\n- 炖猪蹄\n- 酱骨头\n\n### 主食\n- 米饭\n- 饺子\n- 油泼面\n- 包饺子","slug":"cookbook","published":1,"updated":"2023-02-23T06:13:40.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22o0004shoar4ndsw9s","content":"<h3 id=\"蔬菜\"><a href=\"#蔬菜\" class=\"headerlink\" title=\"蔬菜\"></a>蔬菜</h3><ul>\n<li>香菇青菜</li>\n<li>炒香菇</li>\n<li>手撕包菜</li>\n<li>炒胡萝卜</li>\n<li>炒青笋</li>\n<li>炒扁豆丝</li>\n<li>炒四季豆</li>\n<li>煎豆腐</li>\n<li>青椒茄子</li>\n<li>香葱炒蛋</li>\n<li>洋葱炒蛋</li>\n<li>番茄炒蛋</li>\n<li>小炒鸡蛋</li>\n</ul>\n<h3 id=\"肉类\"><a href=\"#肉类\" class=\"headerlink\" title=\"肉类\"></a>肉类</h3><ul>\n<li>香菇炒鸡肉</li>\n<li>小炒仔鸡</li>\n<li>可乐鸡翅</li>\n<li>辣子鸡腿</li>\n<li>蒜苗小炒肉</li>\n<li>蒜苗炒腊肉</li>\n<li>蒸扣肉</li>\n<li>苦瓜炒腊肉</li>\n<li>鱼炖豆腐</li>\n<li>西红柿牛腩</li>\n<li>炖猪蹄</li>\n<li>酱骨头</li>\n</ul>\n<h3 id=\"主食\"><a href=\"#主食\" class=\"headerlink\" title=\"主食\"></a>主食</h3><ul>\n<li>米饭</li>\n<li>饺子</li>\n<li>油泼面</li>\n<li>包饺子</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"蔬菜\"><a href=\"#蔬菜\" class=\"headerlink\" title=\"蔬菜\"></a>蔬菜</h3><ul>\n<li>香菇青菜</li>\n<li>炒香菇</li>\n<li>手撕包菜</li>\n<li>炒胡萝卜</li>\n<li>炒青笋</li>\n<li>炒扁豆丝</li>\n<li>炒四季豆</li>\n<li>煎豆腐</li>\n<li>青椒茄子</li>\n<li>香葱炒蛋</li>\n<li>洋葱炒蛋</li>\n<li>番茄炒蛋</li>\n<li>小炒鸡蛋</li>\n</ul>\n<h3 id=\"肉类\"><a href=\"#肉类\" class=\"headerlink\" title=\"肉类\"></a>肉类</h3><ul>\n<li>香菇炒鸡肉</li>\n<li>小炒仔鸡</li>\n<li>可乐鸡翅</li>\n<li>辣子鸡腿</li>\n<li>蒜苗小炒肉</li>\n<li>蒜苗炒腊肉</li>\n<li>蒸扣肉</li>\n<li>苦瓜炒腊肉</li>\n<li>鱼炖豆腐</li>\n<li>西红柿牛腩</li>\n<li>炖猪蹄</li>\n<li>酱骨头</li>\n</ul>\n<h3 id=\"主食\"><a href=\"#主食\" class=\"headerlink\" title=\"主食\"></a>主食</h3><ul>\n<li>米饭</li>\n<li>饺子</li>\n<li>油泼面</li>\n<li>包饺子</li>\n</ul>\n"},{"title":"js 中的隐式转换","date":"2018-06-23T16:00:00.000Z","_content":"\n## js 的值类型\n- number\n- string\n- boolean\n- null\n- undefined\n- object\n\njs 把 number、string、boolean、null、undefined 归成原始值。\narray 与 function 都是 object 的特例。\n\n## js 是弱类型语言\n所谓的弱类型，就是说你不必在声明变量时就指定它的类型，并且你可以给一个变量赋任意类型的值。\n\n```\nvar a = 1;  // 声明一个变量，并赋一个 number 类型的值\na = \"34\"； // 赋其他类型的值\na;  // >> \"34\"\n```\n\n因为它的弱类型特性，在期望某种类型的值而当前值类型不符合时，js 会根据固定的规则来进行隐式的转换。我们最常见的隐式转换之一就是 + 操作符了。\n\n```\n// 把 number 12 转换成了 string \"12\"，并做了字符串拼接的处理\na + 12;   //  >> \"3412\"\n// 把 String \"34\" 转换成了 number 34，并做了数学减运算\na - 12;  //  >>  22\n```\n\n<h2><a id=\"type_convert\">隐式转换规则表</a></h2>\n\n值|转换为string|转换为number| 转换为boolean|转换为object\n---|----------------|-------------------|---------------------|----------------\nundefined | \"undefined\" | NaN | false | throws TypeError\nnull | \"null\" | **0** | false | throws TypeError\ntrue | \"true\" | **1** | - | new Boolean(true)\nfalse | \"false\" | **0** | - | new Boolean(false)\n\"\"(空串) | - | **0** | **false** | new String(\"\")\n\"0\"(非空，数字) | - | 0 | true | new String(\"0\")\n\"one\"(非空，非数字) | - | NaN | true | new String(\"one\")\n0 | \"0\" | - | **false** | new Number(0)\n-0 | \"0\" | - | **false** | new Number(-0)\nNaN | \"NaN\" | - | **false** | new Number(NaN)\nInfinity | \"Infinity\" | - | true | new Number(Infinity)\n-Infinity | \"-Infinity\" | - | true | new Number(-Infinity)\n1(非0) | \"1\" | - | true | new Number(1)\n{} | [对象的类型转换](#object_convert) | - | true | -\n\\[\\](任意数组) | \"\" | **0** | true | -\n\\[9\\](1个数字元素) | \"9\" | **9** | true | -\n\\['a'\\](其他数组) | 使用 join() 方法 | NaN | true | -\nfunction(任意函数) | [对象的类型转换](#object_convert) | NaN | true | -\n\n来看一道题目:\n\n```\nvar s = \"\";\ns.x = \"1\";\nconsole.log(s.x); // undefined\n```\n\n首先，看到 s 是一个 string 型的，那么 s.x = “1” 为什么不会报错？\n\n\n> 是因为我们的 \".\" 运算符期望左边的值是一个对象，所以隐式转换成了一个对象，也就是上表中的 new String(\"\")。\n\n\n其次，既然我在这个隐式转换成的对象上添加了属性 x，为什么访问不到呢？\n\n> 是因为隐式转换时使用的是 new 关键字，也就是说我们每次进行隐式转换所返回的对象都是一个新的对象。所以 s.x 输出的是 undefined。\n\n<h2><a id=\"object_convert\">对象的类型转换</a></h2>\n\n虽然 null 是可以理解成一个特殊的对象（typeof null 返回 \"object\"），但实际上它是 null 类型的唯一一个成员，所以它的类型转换与我们本节要讨论的无关，null 的转换请查看[隐式转换规则表](#type_convert)。\n\n> Object 上有两个方法，一个是 valueOf, 一个是 toString，把 object 转成原始值依赖于这两个方法的返回值。\n\n内置的 valueOf 方法一般返回这个对象本身。\n- Date 对象特殊实现了 valueOf 方法，它的 valueOf 返回时间戳\n\n内置的 toString 方法一般返回 \"[object Object]\"。\n- Date 特殊实现的 toString 方法返回一个可读的日期和时间字符串；\n- Array 特殊实现的 toString 方法返回执行  join() 的结果，这也是为什么 \\[9\\] 转换成数字 9, 因为 [9].join() 返回字符串 \"9\"，而字符串 \"9\" 又转换成数字 9（可能有人问怎么不是执行 valueOf，那是因为 valueOf 返回值是数组自身，并不是一个原始值）。\n- Function 特殊实现的 toString 方法返回定义方法的表示，是一个字符串。\n\n![function.toString](http://upload-images.jianshu.io/upload_images/5370440-6ef0cea0075e9efc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Object.valueOf 与 Object.toString](http://upload-images.jianshu.io/upload_images/5370440-377983feb6f1b508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n对象的类型转换规则共分为4种情况。\n- object to boolean： 所有的对象都是真值，即转换成 true。这里注意 new Boolean(false) 返回的是一个对象，所以转换成 true。\n- object to number: 优先调用 valueOf，如果未返回一个原始值，则调用 toString，如果都未返回原始值，则 throw TypeError。\n- object to string：优先调用 toString，如果未返回一个原始值，则调用 valueOf，如果都未返回原始值，则 throw TypeError。\n- object to primitive value\n\n看起来好像还挺简单的样子，其实就是这么简单，只不过有一个特例需要记住。\n\\+ 运算符可以用来做数学加运算，也可以用来做字符串拼接, 与此同时还有 == 与 != 运算符，如果使用这三个运算符时，操作数存在 object 类型的话，那么 object 并不是使用的 object-to-number 或 object-to-string 规则去获得原始值，而是使用 object-to-primitive 规则。\n\n### object-to-primitive 规则\n- 对于 + 、==、!= 三个运算符来说，一般的 object 会走 object-to-number，也就是先调用 valueOf。而特殊的一点时，Date 走 object-to-string 规则，也就是先调用 toString。\n- 对于其他的操作符，比如关系操作符，<、>、<=、=== 等，所有对象包括Date都会走 object-to-number 规则。\n \n![Date 转换规则](http://upload-images.jianshu.io/upload_images/5370440-54b4ff7816f75552.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 除了明确需要 Boolean 或者 String 型的地方，Object 转成原始值都是优先调用 valueOf，如果执行结果是原始值，则返回该结果，否则再调用 toString，如果执行结果是原始值，则返回该结果，否则报错。需要注意的是特例 Date 型，它在做 +、==、!= 运算时，优先调用 toString。\n\n明确需要 Boolean 的地方，很常见的例子：\n\n```\nvar o = {};\nif (o) {  // 所有的对象都是真值\n// doSth...\n}\n```\n\n## function 使用 valueOf、toString\n考虑下边这道题：\n> 实现 add 方法，使其可如此使用: add(1)(2,4,5,7)(9)\n\n可能我们常常遇见的场景仅仅是做了二次调用，也就是 add(...args) 徐亚返回一个 function，对这个 function 可以进行二次调用。\n可是这里的调用层级是3次甚至更多。\n\n看下解决方案：\n\n```\nfunction add() {\n  var args = Array.prototype.slice.call(arguments);\n  var _add = function() {\n    Array.prototype.push.apply(args, arguments);\n    return _add;\n  }\n  _add.valueOf = () => args.reduce((a,b) => a+b);\n  return _add;\n}\nvar s = add(1)(4,6)(5);   // function 16 (此处 function 是标识通过 valueOf 或者 toString 返回的，使用时可以当做原始值来使用)\ntypeof s;  // \"function\";\ns + \"\"; // \"16\"\n+s; // 16\n```","source":"_posts/jsTypeTransfer.md","raw":"---\n title: js 中的隐式转换\n date: 2018-06-24\n---\n\n## js 的值类型\n- number\n- string\n- boolean\n- null\n- undefined\n- object\n\njs 把 number、string、boolean、null、undefined 归成原始值。\narray 与 function 都是 object 的特例。\n\n## js 是弱类型语言\n所谓的弱类型，就是说你不必在声明变量时就指定它的类型，并且你可以给一个变量赋任意类型的值。\n\n```\nvar a = 1;  // 声明一个变量，并赋一个 number 类型的值\na = \"34\"； // 赋其他类型的值\na;  // >> \"34\"\n```\n\n因为它的弱类型特性，在期望某种类型的值而当前值类型不符合时，js 会根据固定的规则来进行隐式的转换。我们最常见的隐式转换之一就是 + 操作符了。\n\n```\n// 把 number 12 转换成了 string \"12\"，并做了字符串拼接的处理\na + 12;   //  >> \"3412\"\n// 把 String \"34\" 转换成了 number 34，并做了数学减运算\na - 12;  //  >>  22\n```\n\n<h2><a id=\"type_convert\">隐式转换规则表</a></h2>\n\n值|转换为string|转换为number| 转换为boolean|转换为object\n---|----------------|-------------------|---------------------|----------------\nundefined | \"undefined\" | NaN | false | throws TypeError\nnull | \"null\" | **0** | false | throws TypeError\ntrue | \"true\" | **1** | - | new Boolean(true)\nfalse | \"false\" | **0** | - | new Boolean(false)\n\"\"(空串) | - | **0** | **false** | new String(\"\")\n\"0\"(非空，数字) | - | 0 | true | new String(\"0\")\n\"one\"(非空，非数字) | - | NaN | true | new String(\"one\")\n0 | \"0\" | - | **false** | new Number(0)\n-0 | \"0\" | - | **false** | new Number(-0)\nNaN | \"NaN\" | - | **false** | new Number(NaN)\nInfinity | \"Infinity\" | - | true | new Number(Infinity)\n-Infinity | \"-Infinity\" | - | true | new Number(-Infinity)\n1(非0) | \"1\" | - | true | new Number(1)\n{} | [对象的类型转换](#object_convert) | - | true | -\n\\[\\](任意数组) | \"\" | **0** | true | -\n\\[9\\](1个数字元素) | \"9\" | **9** | true | -\n\\['a'\\](其他数组) | 使用 join() 方法 | NaN | true | -\nfunction(任意函数) | [对象的类型转换](#object_convert) | NaN | true | -\n\n来看一道题目:\n\n```\nvar s = \"\";\ns.x = \"1\";\nconsole.log(s.x); // undefined\n```\n\n首先，看到 s 是一个 string 型的，那么 s.x = “1” 为什么不会报错？\n\n\n> 是因为我们的 \".\" 运算符期望左边的值是一个对象，所以隐式转换成了一个对象，也就是上表中的 new String(\"\")。\n\n\n其次，既然我在这个隐式转换成的对象上添加了属性 x，为什么访问不到呢？\n\n> 是因为隐式转换时使用的是 new 关键字，也就是说我们每次进行隐式转换所返回的对象都是一个新的对象。所以 s.x 输出的是 undefined。\n\n<h2><a id=\"object_convert\">对象的类型转换</a></h2>\n\n虽然 null 是可以理解成一个特殊的对象（typeof null 返回 \"object\"），但实际上它是 null 类型的唯一一个成员，所以它的类型转换与我们本节要讨论的无关，null 的转换请查看[隐式转换规则表](#type_convert)。\n\n> Object 上有两个方法，一个是 valueOf, 一个是 toString，把 object 转成原始值依赖于这两个方法的返回值。\n\n内置的 valueOf 方法一般返回这个对象本身。\n- Date 对象特殊实现了 valueOf 方法，它的 valueOf 返回时间戳\n\n内置的 toString 方法一般返回 \"[object Object]\"。\n- Date 特殊实现的 toString 方法返回一个可读的日期和时间字符串；\n- Array 特殊实现的 toString 方法返回执行  join() 的结果，这也是为什么 \\[9\\] 转换成数字 9, 因为 [9].join() 返回字符串 \"9\"，而字符串 \"9\" 又转换成数字 9（可能有人问怎么不是执行 valueOf，那是因为 valueOf 返回值是数组自身，并不是一个原始值）。\n- Function 特殊实现的 toString 方法返回定义方法的表示，是一个字符串。\n\n![function.toString](http://upload-images.jianshu.io/upload_images/5370440-6ef0cea0075e9efc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Object.valueOf 与 Object.toString](http://upload-images.jianshu.io/upload_images/5370440-377983feb6f1b508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n对象的类型转换规则共分为4种情况。\n- object to boolean： 所有的对象都是真值，即转换成 true。这里注意 new Boolean(false) 返回的是一个对象，所以转换成 true。\n- object to number: 优先调用 valueOf，如果未返回一个原始值，则调用 toString，如果都未返回原始值，则 throw TypeError。\n- object to string：优先调用 toString，如果未返回一个原始值，则调用 valueOf，如果都未返回原始值，则 throw TypeError。\n- object to primitive value\n\n看起来好像还挺简单的样子，其实就是这么简单，只不过有一个特例需要记住。\n\\+ 运算符可以用来做数学加运算，也可以用来做字符串拼接, 与此同时还有 == 与 != 运算符，如果使用这三个运算符时，操作数存在 object 类型的话，那么 object 并不是使用的 object-to-number 或 object-to-string 规则去获得原始值，而是使用 object-to-primitive 规则。\n\n### object-to-primitive 规则\n- 对于 + 、==、!= 三个运算符来说，一般的 object 会走 object-to-number，也就是先调用 valueOf。而特殊的一点时，Date 走 object-to-string 规则，也就是先调用 toString。\n- 对于其他的操作符，比如关系操作符，<、>、<=、=== 等，所有对象包括Date都会走 object-to-number 规则。\n \n![Date 转换规则](http://upload-images.jianshu.io/upload_images/5370440-54b4ff7816f75552.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n> 除了明确需要 Boolean 或者 String 型的地方，Object 转成原始值都是优先调用 valueOf，如果执行结果是原始值，则返回该结果，否则再调用 toString，如果执行结果是原始值，则返回该结果，否则报错。需要注意的是特例 Date 型，它在做 +、==、!= 运算时，优先调用 toString。\n\n明确需要 Boolean 的地方，很常见的例子：\n\n```\nvar o = {};\nif (o) {  // 所有的对象都是真值\n// doSth...\n}\n```\n\n## function 使用 valueOf、toString\n考虑下边这道题：\n> 实现 add 方法，使其可如此使用: add(1)(2,4,5,7)(9)\n\n可能我们常常遇见的场景仅仅是做了二次调用，也就是 add(...args) 徐亚返回一个 function，对这个 function 可以进行二次调用。\n可是这里的调用层级是3次甚至更多。\n\n看下解决方案：\n\n```\nfunction add() {\n  var args = Array.prototype.slice.call(arguments);\n  var _add = function() {\n    Array.prototype.push.apply(args, arguments);\n    return _add;\n  }\n  _add.valueOf = () => args.reduce((a,b) => a+b);\n  return _add;\n}\nvar s = add(1)(4,6)(5);   // function 16 (此处 function 是标识通过 valueOf 或者 toString 返回的，使用时可以当做原始值来使用)\ntypeof s;  // \"function\";\ns + \"\"; // \"16\"\n+s; // 16\n```","slug":"jsTypeTransfer","published":1,"updated":"2023-02-23T06:13:40.834Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22q0005shoa804h0inh","content":"<h2 id=\"js-的值类型\"><a href=\"#js-的值类型\" class=\"headerlink\" title=\"js 的值类型\"></a>js 的值类型</h2><ul>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>null</li>\n<li>undefined</li>\n<li>object</li>\n</ul>\n<p>js 把 number、string、boolean、null、undefined 归成原始值。<br>array 与 function 都是 object 的特例。</p>\n<h2 id=\"js-是弱类型语言\"><a href=\"#js-是弱类型语言\" class=\"headerlink\" title=\"js 是弱类型语言\"></a>js 是弱类型语言</h2><p>所谓的弱类型，就是说你不必在声明变量时就指定它的类型，并且你可以给一个变量赋任意类型的值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = 1;  // 声明一个变量，并赋一个 number 类型的值</span><br><span class=\"line\">a = &quot;34&quot;； // 赋其他类型的值</span><br><span class=\"line\">a;  // &gt;&gt; &quot;34&quot;</span><br></pre></td></tr></table></figure>\n<p>因为它的弱类型特性，在期望某种类型的值而当前值类型不符合时，js 会根据固定的规则来进行隐式的转换。我们最常见的隐式转换之一就是 + 操作符了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 把 number 12 转换成了 string &quot;12&quot;，并做了字符串拼接的处理</span><br><span class=\"line\">a + 12;   //  &gt;&gt; &quot;3412&quot;</span><br><span class=\"line\">// 把 String &quot;34&quot; 转换成了 number 34，并做了数学减运算</span><br><span class=\"line\">a - 12;  //  &gt;&gt;  22</span><br></pre></td></tr></table></figure>\n<h2><a id=\"type_convert\">隐式转换规则表</a></h2>\n\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>转换为string</th>\n<th>转换为number</th>\n<th>转换为boolean</th>\n<th>转换为object</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>“undefined”</td>\n<td>NaN</td>\n<td>false</td>\n<td>throws TypeError</td>\n</tr>\n<tr>\n<td>null</td>\n<td>“null”</td>\n<td><strong>0</strong></td>\n<td>false</td>\n<td>throws TypeError</td>\n</tr>\n<tr>\n<td>true</td>\n<td>“true”</td>\n<td><strong>1</strong></td>\n<td>-</td>\n<td>new Boolean(true)</td>\n</tr>\n<tr>\n<td>false</td>\n<td>“false”</td>\n<td><strong>0</strong></td>\n<td>-</td>\n<td>new Boolean(false)</td>\n</tr>\n<tr>\n<td>“”(空串)</td>\n<td>-</td>\n<td><strong>0</strong></td>\n<td><strong>false</strong></td>\n<td>new String(“”)</td>\n</tr>\n<tr>\n<td>“0”(非空，数字)</td>\n<td>-</td>\n<td>0</td>\n<td>true</td>\n<td>new String(“0”)</td>\n</tr>\n<tr>\n<td>“one”(非空，非数字)</td>\n<td>-</td>\n<td>NaN</td>\n<td>true</td>\n<td>new String(“one”)</td>\n</tr>\n<tr>\n<td>0</td>\n<td>“0”</td>\n<td>-</td>\n<td><strong>false</strong></td>\n<td>new Number(0)</td>\n</tr>\n<tr>\n<td>-0</td>\n<td>“0”</td>\n<td>-</td>\n<td><strong>false</strong></td>\n<td>new Number(-0)</td>\n</tr>\n<tr>\n<td>NaN</td>\n<td>“NaN”</td>\n<td>-</td>\n<td><strong>false</strong></td>\n<td>new Number(NaN)</td>\n</tr>\n<tr>\n<td>Infinity</td>\n<td>“Infinity”</td>\n<td>-</td>\n<td>true</td>\n<td>new Number(Infinity)</td>\n</tr>\n<tr>\n<td>-Infinity</td>\n<td>“-Infinity”</td>\n<td>-</td>\n<td>true</td>\n<td>new Number(-Infinity)</td>\n</tr>\n<tr>\n<td>1(非0)</td>\n<td>“1”</td>\n<td>-</td>\n<td>true</td>\n<td>new Number(1)</td>\n</tr>\n<tr>\n<td>{}</td>\n<td><a href=\"#object_convert\">对象的类型转换</a></td>\n<td>-</td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[](任意数组)</td>\n<td>“”</td>\n<td><strong>0</strong></td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[9](1个数字元素)</td>\n<td>“9”</td>\n<td><strong>9</strong></td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[‘a’](其他数组)</td>\n<td>使用 join() 方法</td>\n<td>NaN</td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>function(任意函数)</td>\n<td><a href=\"#object_convert\">对象的类型转换</a></td>\n<td>NaN</td>\n<td>true</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>来看一道题目:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var s = &quot;&quot;;</span><br><span class=\"line\">s.x = &quot;1&quot;;</span><br><span class=\"line\">console.log(s.x); // undefined</span><br></pre></td></tr></table></figure>\n<p>首先，看到 s 是一个 string 型的，那么 s.x = “1” 为什么不会报错？</p>\n<blockquote>\n<p>是因为我们的 “.” 运算符期望左边的值是一个对象，所以隐式转换成了一个对象，也就是上表中的 new String(“”)。</p>\n</blockquote>\n<p>其次，既然我在这个隐式转换成的对象上添加了属性 x，为什么访问不到呢？</p>\n<blockquote>\n<p>是因为隐式转换时使用的是 new 关键字，也就是说我们每次进行隐式转换所返回的对象都是一个新的对象。所以 s.x 输出的是 undefined。</p>\n</blockquote>\n<h2><a id=\"object_convert\">对象的类型转换</a></h2>\n\n<p>虽然 null 是可以理解成一个特殊的对象（typeof null 返回 “object”），但实际上它是 null 类型的唯一一个成员，所以它的类型转换与我们本节要讨论的无关，null 的转换请查看<a href=\"#type_convert\">隐式转换规则表</a>。</p>\n<blockquote>\n<p>Object 上有两个方法，一个是 valueOf, 一个是 toString，把 object 转成原始值依赖于这两个方法的返回值。</p>\n</blockquote>\n<p>内置的 valueOf 方法一般返回这个对象本身。</p>\n<ul>\n<li>Date 对象特殊实现了 valueOf 方法，它的 valueOf 返回时间戳</li>\n</ul>\n<p>内置的 toString 方法一般返回 “[object Object]”。</p>\n<ul>\n<li>Date 特殊实现的 toString 方法返回一个可读的日期和时间字符串；</li>\n<li>Array 特殊实现的 toString 方法返回执行  join() 的结果，这也是为什么 [9] 转换成数字 9, 因为 [9].join() 返回字符串 “9”，而字符串 “9” 又转换成数字 9（可能有人问怎么不是执行 valueOf，那是因为 valueOf 返回值是数组自身，并不是一个原始值）。</li>\n<li>Function 特殊实现的 toString 方法返回定义方法的表示，是一个字符串。</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5370440-6ef0cea0075e9efc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"function.toString\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5370440-377983feb6f1b508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Object.valueOf 与 Object.toString\"></p>\n<p>对象的类型转换规则共分为4种情况。</p>\n<ul>\n<li>object to boolean： 所有的对象都是真值，即转换成 true。这里注意 new Boolean(false) 返回的是一个对象，所以转换成 true。</li>\n<li>object to number: 优先调用 valueOf，如果未返回一个原始值，则调用 toString，如果都未返回原始值，则 throw TypeError。</li>\n<li>object to string：优先调用 toString，如果未返回一个原始值，则调用 valueOf，如果都未返回原始值，则 throw TypeError。</li>\n<li>object to primitive value</li>\n</ul>\n<p>看起来好像还挺简单的样子，其实就是这么简单，只不过有一个特例需要记住。<br>+ 运算符可以用来做数学加运算，也可以用来做字符串拼接, 与此同时还有 == 与 != 运算符，如果使用这三个运算符时，操作数存在 object 类型的话，那么 object 并不是使用的 object-to-number 或 object-to-string 规则去获得原始值，而是使用 object-to-primitive 规则。</p>\n<h3 id=\"object-to-primitive-规则\"><a href=\"#object-to-primitive-规则\" class=\"headerlink\" title=\"object-to-primitive 规则\"></a>object-to-primitive 规则</h3><ul>\n<li>对于 + 、==、!= 三个运算符来说，一般的 object 会走 object-to-number，也就是先调用 valueOf。而特殊的一点时，Date 走 object-to-string 规则，也就是先调用 toString。</li>\n<li>对于其他的操作符，比如关系操作符，&lt;、&gt;、&lt;=、=== 等，所有对象包括Date都会走 object-to-number 规则。</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5370440-54b4ff7816f75552.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Date 转换规则\"></p>\n<blockquote>\n<p>除了明确需要 Boolean 或者 String 型的地方，Object 转成原始值都是优先调用 valueOf，如果执行结果是原始值，则返回该结果，否则再调用 toString，如果执行结果是原始值，则返回该结果，否则报错。需要注意的是特例 Date 型，它在做 +、==、!= 运算时，优先调用 toString。</p>\n</blockquote>\n<p>明确需要 Boolean 的地方，很常见的例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var o = &#123;&#125;;</span><br><span class=\"line\">if (o) &#123;  // 所有的对象都是真值</span><br><span class=\"line\">// doSth...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"function-使用-valueOf、toString\"><a href=\"#function-使用-valueOf、toString\" class=\"headerlink\" title=\"function 使用 valueOf、toString\"></a>function 使用 valueOf、toString</h2><p>考虑下边这道题：</p>\n<blockquote>\n<p>实现 add 方法，使其可如此使用: add(1)(2,4,5,7)(9)</p>\n</blockquote>\n<p>可能我们常常遇见的场景仅仅是做了二次调用，也就是 add(…args) 徐亚返回一个 function，对这个 function 可以进行二次调用。<br>可是这里的调用层级是3次甚至更多。</p>\n<p>看下解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function add() &#123;</span><br><span class=\"line\">  var args = Array.prototype.slice.call(arguments);</span><br><span class=\"line\">  var _add = function() &#123;</span><br><span class=\"line\">    Array.prototype.push.apply(args, arguments);</span><br><span class=\"line\">    return _add;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _add.valueOf = () =&gt; args.reduce((a,b) =&gt; a+b);</span><br><span class=\"line\">  return _add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var s = add(1)(4,6)(5);   // function 16 (此处 function 是标识通过 valueOf 或者 toString 返回的，使用时可以当做原始值来使用)</span><br><span class=\"line\">typeof s;  // &quot;function&quot;;</span><br><span class=\"line\">s + &quot;&quot;; // &quot;16&quot;</span><br><span class=\"line\">+s; // 16</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"js-的值类型\"><a href=\"#js-的值类型\" class=\"headerlink\" title=\"js 的值类型\"></a>js 的值类型</h2><ul>\n<li>number</li>\n<li>string</li>\n<li>boolean</li>\n<li>null</li>\n<li>undefined</li>\n<li>object</li>\n</ul>\n<p>js 把 number、string、boolean、null、undefined 归成原始值。<br>array 与 function 都是 object 的特例。</p>\n<h2 id=\"js-是弱类型语言\"><a href=\"#js-是弱类型语言\" class=\"headerlink\" title=\"js 是弱类型语言\"></a>js 是弱类型语言</h2><p>所谓的弱类型，就是说你不必在声明变量时就指定它的类型，并且你可以给一个变量赋任意类型的值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = 1;  // 声明一个变量，并赋一个 number 类型的值</span><br><span class=\"line\">a = &quot;34&quot;； // 赋其他类型的值</span><br><span class=\"line\">a;  // &gt;&gt; &quot;34&quot;</span><br></pre></td></tr></table></figure>\n<p>因为它的弱类型特性，在期望某种类型的值而当前值类型不符合时，js 会根据固定的规则来进行隐式的转换。我们最常见的隐式转换之一就是 + 操作符了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 把 number 12 转换成了 string &quot;12&quot;，并做了字符串拼接的处理</span><br><span class=\"line\">a + 12;   //  &gt;&gt; &quot;3412&quot;</span><br><span class=\"line\">// 把 String &quot;34&quot; 转换成了 number 34，并做了数学减运算</span><br><span class=\"line\">a - 12;  //  &gt;&gt;  22</span><br></pre></td></tr></table></figure>\n<h2><a id=\"type_convert\">隐式转换规则表</a></h2>\n\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>转换为string</th>\n<th>转换为number</th>\n<th>转换为boolean</th>\n<th>转换为object</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>“undefined”</td>\n<td>NaN</td>\n<td>false</td>\n<td>throws TypeError</td>\n</tr>\n<tr>\n<td>null</td>\n<td>“null”</td>\n<td><strong>0</strong></td>\n<td>false</td>\n<td>throws TypeError</td>\n</tr>\n<tr>\n<td>true</td>\n<td>“true”</td>\n<td><strong>1</strong></td>\n<td>-</td>\n<td>new Boolean(true)</td>\n</tr>\n<tr>\n<td>false</td>\n<td>“false”</td>\n<td><strong>0</strong></td>\n<td>-</td>\n<td>new Boolean(false)</td>\n</tr>\n<tr>\n<td>“”(空串)</td>\n<td>-</td>\n<td><strong>0</strong></td>\n<td><strong>false</strong></td>\n<td>new String(“”)</td>\n</tr>\n<tr>\n<td>“0”(非空，数字)</td>\n<td>-</td>\n<td>0</td>\n<td>true</td>\n<td>new String(“0”)</td>\n</tr>\n<tr>\n<td>“one”(非空，非数字)</td>\n<td>-</td>\n<td>NaN</td>\n<td>true</td>\n<td>new String(“one”)</td>\n</tr>\n<tr>\n<td>0</td>\n<td>“0”</td>\n<td>-</td>\n<td><strong>false</strong></td>\n<td>new Number(0)</td>\n</tr>\n<tr>\n<td>-0</td>\n<td>“0”</td>\n<td>-</td>\n<td><strong>false</strong></td>\n<td>new Number(-0)</td>\n</tr>\n<tr>\n<td>NaN</td>\n<td>“NaN”</td>\n<td>-</td>\n<td><strong>false</strong></td>\n<td>new Number(NaN)</td>\n</tr>\n<tr>\n<td>Infinity</td>\n<td>“Infinity”</td>\n<td>-</td>\n<td>true</td>\n<td>new Number(Infinity)</td>\n</tr>\n<tr>\n<td>-Infinity</td>\n<td>“-Infinity”</td>\n<td>-</td>\n<td>true</td>\n<td>new Number(-Infinity)</td>\n</tr>\n<tr>\n<td>1(非0)</td>\n<td>“1”</td>\n<td>-</td>\n<td>true</td>\n<td>new Number(1)</td>\n</tr>\n<tr>\n<td>{}</td>\n<td><a href=\"#object_convert\">对象的类型转换</a></td>\n<td>-</td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[](任意数组)</td>\n<td>“”</td>\n<td><strong>0</strong></td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[9](1个数字元素)</td>\n<td>“9”</td>\n<td><strong>9</strong></td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>[‘a’](其他数组)</td>\n<td>使用 join() 方法</td>\n<td>NaN</td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>function(任意函数)</td>\n<td><a href=\"#object_convert\">对象的类型转换</a></td>\n<td>NaN</td>\n<td>true</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<p>来看一道题目:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var s = &quot;&quot;;</span><br><span class=\"line\">s.x = &quot;1&quot;;</span><br><span class=\"line\">console.log(s.x); // undefined</span><br></pre></td></tr></table></figure>\n<p>首先，看到 s 是一个 string 型的，那么 s.x = “1” 为什么不会报错？</p>\n<blockquote>\n<p>是因为我们的 “.” 运算符期望左边的值是一个对象，所以隐式转换成了一个对象，也就是上表中的 new String(“”)。</p>\n</blockquote>\n<p>其次，既然我在这个隐式转换成的对象上添加了属性 x，为什么访问不到呢？</p>\n<blockquote>\n<p>是因为隐式转换时使用的是 new 关键字，也就是说我们每次进行隐式转换所返回的对象都是一个新的对象。所以 s.x 输出的是 undefined。</p>\n</blockquote>\n<h2><a id=\"object_convert\">对象的类型转换</a></h2>\n\n<p>虽然 null 是可以理解成一个特殊的对象（typeof null 返回 “object”），但实际上它是 null 类型的唯一一个成员，所以它的类型转换与我们本节要讨论的无关，null 的转换请查看<a href=\"#type_convert\">隐式转换规则表</a>。</p>\n<blockquote>\n<p>Object 上有两个方法，一个是 valueOf, 一个是 toString，把 object 转成原始值依赖于这两个方法的返回值。</p>\n</blockquote>\n<p>内置的 valueOf 方法一般返回这个对象本身。</p>\n<ul>\n<li>Date 对象特殊实现了 valueOf 方法，它的 valueOf 返回时间戳</li>\n</ul>\n<p>内置的 toString 方法一般返回 “[object Object]”。</p>\n<ul>\n<li>Date 特殊实现的 toString 方法返回一个可读的日期和时间字符串；</li>\n<li>Array 特殊实现的 toString 方法返回执行  join() 的结果，这也是为什么 [9] 转换成数字 9, 因为 [9].join() 返回字符串 “9”，而字符串 “9” 又转换成数字 9（可能有人问怎么不是执行 valueOf，那是因为 valueOf 返回值是数组自身，并不是一个原始值）。</li>\n<li>Function 特殊实现的 toString 方法返回定义方法的表示，是一个字符串。</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5370440-6ef0cea0075e9efc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"function.toString\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5370440-377983feb6f1b508.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Object.valueOf 与 Object.toString\"></p>\n<p>对象的类型转换规则共分为4种情况。</p>\n<ul>\n<li>object to boolean： 所有的对象都是真值，即转换成 true。这里注意 new Boolean(false) 返回的是一个对象，所以转换成 true。</li>\n<li>object to number: 优先调用 valueOf，如果未返回一个原始值，则调用 toString，如果都未返回原始值，则 throw TypeError。</li>\n<li>object to string：优先调用 toString，如果未返回一个原始值，则调用 valueOf，如果都未返回原始值，则 throw TypeError。</li>\n<li>object to primitive value</li>\n</ul>\n<p>看起来好像还挺简单的样子，其实就是这么简单，只不过有一个特例需要记住。<br>+ 运算符可以用来做数学加运算，也可以用来做字符串拼接, 与此同时还有 == 与 != 运算符，如果使用这三个运算符时，操作数存在 object 类型的话，那么 object 并不是使用的 object-to-number 或 object-to-string 规则去获得原始值，而是使用 object-to-primitive 规则。</p>\n<h3 id=\"object-to-primitive-规则\"><a href=\"#object-to-primitive-规则\" class=\"headerlink\" title=\"object-to-primitive 规则\"></a>object-to-primitive 规则</h3><ul>\n<li>对于 + 、==、!= 三个运算符来说，一般的 object 会走 object-to-number，也就是先调用 valueOf。而特殊的一点时，Date 走 object-to-string 规则，也就是先调用 toString。</li>\n<li>对于其他的操作符，比如关系操作符，&lt;、&gt;、&lt;=、=== 等，所有对象包括Date都会走 object-to-number 规则。</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5370440-54b4ff7816f75552.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Date 转换规则\"></p>\n<blockquote>\n<p>除了明确需要 Boolean 或者 String 型的地方，Object 转成原始值都是优先调用 valueOf，如果执行结果是原始值，则返回该结果，否则再调用 toString，如果执行结果是原始值，则返回该结果，否则报错。需要注意的是特例 Date 型，它在做 +、==、!= 运算时，优先调用 toString。</p>\n</blockquote>\n<p>明确需要 Boolean 的地方，很常见的例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var o = &#123;&#125;;</span><br><span class=\"line\">if (o) &#123;  // 所有的对象都是真值</span><br><span class=\"line\">// doSth...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"function-使用-valueOf、toString\"><a href=\"#function-使用-valueOf、toString\" class=\"headerlink\" title=\"function 使用 valueOf、toString\"></a>function 使用 valueOf、toString</h2><p>考虑下边这道题：</p>\n<blockquote>\n<p>实现 add 方法，使其可如此使用: add(1)(2,4,5,7)(9)</p>\n</blockquote>\n<p>可能我们常常遇见的场景仅仅是做了二次调用，也就是 add(…args) 徐亚返回一个 function，对这个 function 可以进行二次调用。<br>可是这里的调用层级是3次甚至更多。</p>\n<p>看下解决方案：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function add() &#123;</span><br><span class=\"line\">  var args = Array.prototype.slice.call(arguments);</span><br><span class=\"line\">  var _add = function() &#123;</span><br><span class=\"line\">    Array.prototype.push.apply(args, arguments);</span><br><span class=\"line\">    return _add;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _add.valueOf = () =&gt; args.reduce((a,b) =&gt; a+b);</span><br><span class=\"line\">  return _add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var s = add(1)(4,6)(5);   // function 16 (此处 function 是标识通过 valueOf 或者 toString 返回的，使用时可以当做原始值来使用)</span><br><span class=\"line\">typeof s;  // &quot;function&quot;;</span><br><span class=\"line\">s + &quot;&quot;; // &quot;16&quot;</span><br><span class=\"line\">+s; // 16</span><br></pre></td></tr></table></figure>"},{"_content":"## 题目\nhttps://leetcode.cn/problems/coin-bonus\n\n## 测试用例\nhttps://leetcode.cn/submissions/detail/398908470/testcase/\n\n## 解法\n这道题的难点在于，怎么做到高性能，leetCode 给的测试用例最大的能到5w左右，性能不好会执行超时。\n\n```javascript\nvar bonus = function (n, leadership, operations) {\n  // 此时把每个人的上级、下级的关系静态化，而不是只记录直系领导和下属，是处于性能的考虑。\n  // operations 传参中会多次要求输出，如果每一次输出时都临时遍历某员工的上级下级，成本是巨大的\n  let memberMap = {\n    /**\n     * 1: {\n     *  memberList: [], // 存储部门下所有的人\n     *  leaderList: [], // 存储此人的领导们\n     *  coin: 0, // 存储部门所有人获得的 coin 之和\n     * }\n     * */\n  };\n  leadership.forEach(([leader, member]) => {\n    if (!memberMap[leader])\n      memberMap[leader] = {\n        memberList: [], // 可用 Set 也可Array，但执行次数多的情况下 Array 性能比 Set 好\n        leaderList: [],\n        coin: 0,\n      };\n    if (!memberMap[member])\n      memberMap[member] = {\n        memberList: [], \n        leaderList: [],\n        coin: 0,\n      };\n    memberMap[member].leaderList.push(leader);\n    memberMap[leader].memberList.push(member);\n    memberMap[leader].leaderList.forEach((v) => {\n      // 成员的领导人数变更。领导的领导也是领导\n      if (memberMap[member].leaderList.indexOf(v) === -1) { // indexOf 的性能比 some 的性能好\n        memberMap[member].leaderList.push(v);\n      }\n      // 领导们的部门人数变更\n      if (memberMap[v].memberList.indexOf(member) === -1) {\n        memberMap[v].memberList.push(member);\n      }\n    });\n  });\n\n  let result = [];\n  operations.forEach(([type, member, coin]) => {\n    // 给成员发，该成员及领导们的部门 coin += coin\n    if (type === 1) {\n      memberMap[member].coin += coin;\n      memberMap[member].leaderList.forEach((v) => (memberMap[v].coin += +coin));\n      return;\n    }\n    const addCoin = coin * (memberMap[member].memberList.length + 1);\n    // 给成员及其下属发\n    if (type === 2) {\n      // 该成员及领导们的部门 coin += 人数 * coin\n      memberMap[member].coin += addCoin;\n      memberMap[member].leaderList.forEach(\n        (v) =>\n          (memberMap[v].coin += addCoin)\n      );\n      // 下属们的部门 coin += 下属的部门人数 * coin\n      memberMap[member].memberList.forEach(v => {\n        memberMap[v].coin += coin * (memberMap[v].memberList.length + 1)\n      });\n      return;\n    }\n    // 返回部门 coin\n    result.push(memberMap[member].coin % 1000000007);\n  });\n  return result;\n};\n\nconsole.time('start');\nbonus(408,\n[[1, 283], [1, 52], [1, 273], [1, 217], [1, 136], [1, 211], [1, 179], [283, 293], [283, 292], [283, 227], [283, 54], [283, 404], [283, 378], [283, 243], [283, 270], [283, 46], [283, 300], [52, 376], [52, 267], [52, 71], [52, 406], [273, 9], [273, 148], [273, 51], [273, 102], [217, 110], [217, 370], [217, 125], [217, 357], [136, 360], [136, 260], [136, 196], [136, 228], [136, 103], [136, 347], [136, 384], [211, 25], [179, 3], [179, 140], [179, 56], [179, 263], [179, 231], [293, 326], [293, 121], [293, 116], [293, 21], [293, 262], [293, 369], [293, 183], [292, 75], [292, 303], [292, 330], [227, 397], [227, 35], [227, 279], [227, 345], [227, 139], [227, 391], [227, 266], [54, 16], [404, 214], [404, 184], [404, 68], [404, 27], [378, 192], [378, 87], [378, 39], [378, 386], [378, 259], [243, 94], [243, 112], [243, 99], [243, 182], [243, 29], [243, 197], [270, 23], [270, 181], [270, 297], [46, 351], [46, 362], [46, 22], [46, 61], [300, 408], [376, 332], [267, 349], [267, 80], [267, 367], [267, 226], [71, 72], [71, 389], [71, 163], [71, 100], [71, 107], [71, 92], [71, 85], [406, 353], [406, 199], [406, 257], [406, 242], [406, 305], [406, 159], [406, 77], [9, 309], [148, 401], [148, 65], [148, 218], [148, 342], [148, 331], [148, 339], [51, 290], [51, 150], [51, 60], [51, 137], [51, 160], [51, 252], [51, 364], [51, 335], [51, 343], [51, 304], [102, 180], [102, 138], [110, 74], [110, 171], [110, 390], [110, 352], [110, 37], [370, 377], [370, 358], [370, 36], [370, 272], [125, 66], [125, 301], [125, 67], [125, 239], [125, 175], [357, 12], [357, 106], [357, 282], [357, 240], [360, 144], [360, 393], [360, 317], [360, 195], [260, 264], [260, 13], [260, 281], [260, 400], [260, 212], [260, 365], [260, 402], [260, 63], [260, 255], [196, 193], [196, 338], [228, 399], [228, 202], [228, 313], [228, 392], [228, 208], [228, 38], [228, 31], [103, 203], [103, 320], [103, 254], [103, 275], [103, 34], [347, 149], [347, 222], [347, 114], [347, 157], [347, 325], [347, 6], [347, 154], [347, 250], [347, 350], [384, 93], [384, 123], [384, 374], [384, 50], [25, 285], [25, 20], [25, 288], [25, 251], [25, 185], [25, 289], [3, 241], [3, 258], [3, 43], [140, 58], [140, 329], [140, 45], [140, 287], [140, 132], [140, 170], [140, 355], [140, 311], [140, 47], [140, 168], [56, 321], [56, 388], [56, 32], [56, 302], [56, 190], [56, 48], [56, 11], [263, 96], [263, 30], [263, 24], [263, 26], [231, 229], [231, 164], [231, 128], [231, 295], [231, 230], [231, 396], [231, 81], [231, 244], [231, 276], [231, 141], [326, 134], [326, 161], [326, 97], [326, 286], [326, 88], [326, 221], [326, 405], [326, 8], [326, 156], [121, 113], [121, 15], [121, 348], [121, 104], [121, 398], [121, 91], [121, 40], [121, 64], [121, 318], [121, 111], [116, 271], [21, 83], [21, 55], [262, 368], [262, 336], [262, 249], [262, 129], [262, 145], [262, 337], [262, 234], [262, 79], [369, 90], [369, 122], [369, 395], [369, 108], [369, 341], [369, 334], [369, 316], [369, 69], [369, 278], [183, 151], [183, 315], [183, 17], [183, 178], [183, 274], [183, 269], [75, 200], [75, 131], [75, 126], [75, 19], [75, 359], [75, 70], [75, 133], [75, 117], [75, 33], [75, 206], [303, 223], [303, 324], [303, 101], [303, 314], [303, 135], [303, 146], [330, 191], [330, 194], [330, 253], [330, 307], [330, 225], [330, 299], [330, 382], [330, 82], [397, 167], [397, 2], [397, 308], [397, 246], [397, 245], [397, 265], [35, 261], [35, 328], [35, 224], [35, 296], [35, 340], [35, 186], [35, 280], [279, 210], [279, 4], [279, 268], [279, 173], [279, 284], [279, 247], [279, 119], [279, 89], [279, 205], [345, 10], [345, 124], [345, 366], [345, 7], [345, 98], [345, 209], [345, 394], [345, 385], [345, 188], [345, 166], [139, 153], [139, 327], [139, 127], [139, 155], [139, 312], [391, 235], [391, 76], [391, 381], [266, 219], [266, 5], [266, 361], [266, 120], [266, 344], [266, 105], [266, 371], [266, 165], [266, 323], [16, 59], [16, 237], [16, 291], [16, 109], [214, 383], [214, 142], [214, 220], [214, 215], [184, 78], [184, 238], [184, 57], [68, 204], [27, 356], [27, 322], [27, 62], [27, 162], [27, 407], [27, 14], [27, 152], [27, 86], [27, 84], [27, 95], [192, 42], [87, 115], [87, 403], [87, 118], [87, 189], [87, 28], [87, 277], [87, 147], [87, 49], [39, 73], [386, 213], [386, 387], [386, 306], [386, 346], [386, 143], [386, 363], [386, 41], [386, 373], [259, 216], [259, 372], [259, 169], [259, 248], [259, 354], [259, 53], [259, 44], [259, 380], [259, 256], [94, 333], [94, 172], [94, 298], [94, 18], [94, 232], [94, 158], [94, 207], [94, 236], [112, 310], [112, 130], [112, 319], [112, 174], [99, 177], [99, 233], [99, 187], [99, 198], [99, 375], [99, 201], [99, 176], [99, 294], [99, 379]],\n[[1, 201, 26], [1, 114, 22], [2, 366, 42], [2, 116, 22], [1, 239, 5], [1, 11, 38], [1, 50, 19], [2, 159, 45], [1, 242, 12], [1, 338, 44], [1, 221, 33], [2, 268, 21], [3, 186], [1, 171, 46], [2, 41, 15], [2, 84, 1], [1, 210, 30], [2, 109, 28], [2, 164, 16], [2, 40, 8], [1, 129, 30], [3, 268], [2, 163, 16], [2, 345, 44], [1, 91, 13], [2, 16, 46], [2, 304, 15], [2, 387, 8], [2, 296, 13], [1, 293, 1], [2, 362, 15], [2, 177, 37], [1, 11, 50], [1, 372, 34], [3, 1], [3, 268], [1, 339, 43], [2, 353, 45], [2, 121, 19], [3, 1], [1, 125, 8], [1, 160, 44], [1, 66, 43], [1, 98, 2], [3, 52], [2, 108, 41], [3, 245], [1, 66, 45], [3, 52], [1, 132, 49], [2, 135, 32], [3, 402], [3, 1], [2, 234, 23], [2, 80, 50], [3, 52], [3, 283], [2, 233, 26], [2, 269, 27], [1, 388, 45], [2, 139, 40], [2, 118, 17], [2, 329, 37], [2, 200, 27], [3, 1], [1, 9, 23], [2, 367, 32], [3, 52], [2, 314, 23], [1, 50, 2], [3, 283], [1, 320, 25], [3, 154], [1, 270, 48], [1, 213, 30], [2, 297, 12], [2, 404, 20], [3, 283], [2, 291, 31], [3, 52], [1, 278, 43], [1, 244, 45], [1, 96, 3], [3, 1], [1, 339, 49], [1, 131, 26], [2, 75, 9], [1, 80, 39], [3, 264], [1, 69, 7], [1, 394, 37], [2, 17, 16], [1, 290, 44], [1, 95, 35], [3, 52], [2, 361, 8], [1, 195, 18], [1, 63, 15], [3, 52], [1, 309, 8], [2, 368, 28], [3, 1], [3, 1], [1, 311, 48], [3, 125], [1, 382, 23], [2, 225, 23], [2, 309, 24], [3, 253], [1, 66, 18], [2, 137, 26], [3, 269], [3, 283], [3, 283], [1, 346, 10], [1, 340, 19], [1, 105, 13], [1, 303, 25], [1, 376, 30], [3, 52], [1, 275, 36], [1, 9, 3], [1, 190, 36], [1, 312, 10], [3, 366], [1, 248, 24], [1, 360, 41], [3, 1], [3, 1], [2, 367, 27], [1, 209, 19], [2, 255, 3], [2, 135, 42], [1, 57, 16], [2, 121, 8], [3, 221], [1, 112, 47], [2, 42, 23], [2, 87, 12], [1, 293, 27], [1, 309, 28], [1, 33, 7], [1, 196, 39], [3, 314], [1, 164, 12], [2, 2, 31], [3, 52], [1, 80, 40], [3, 52], [3, 283], [3, 1], [2, 212, 16], [3, 1], [3, 52], [2, 50, 43], [3, 1], [1, 14, 42], [3, 283], [2, 404, 32], [3, 283], [2, 44, 11], [2, 70, 18], [2, 147, 32], [2, 260, 28], [1, 144, 9], [3, 52], [3, 1], [3, 283], [3, 283], [1, 329, 20], [1, 45, 13], [3, 52], [1, 340, 33], [2, 14, 11], [1, 288, 31], [1, 262, 46], [1, 145, 42], [2, 303, 24], [1, 392, 3], [1, 295, 24], [2, 213, 5], [1, 368, 13], [1, 228, 14], [1, 375, 47], [3, 283], [3, 161], [3, 1], [1, 64, 46], [2, 102, 5], [1, 251, 21], [3, 298], [1, 223, 24], [2, 297, 13], [1, 293, 19], [2, 99, 26], [2, 395, 21], [3, 52], [3, 52], [3, 52], [2, 221, 50], [3, 1], [2, 116, 41], [2, 246, 24], [1, 233, 39], [3, 1], [2, 318, 5], [2, 63, 43], [1, 142, 46], [2, 367, 38], [2, 193, 47], [1, 34, 27], [1, 302, 25], [3, 1], [1, 238, 13], [2, 372, 19], [3, 311], [1, 3, 14], [2, 200, 34], [3, 52], [2, 160, 40], [2, 242, 30], [1, 273, 27], [1, 375, 9], [3, 52], [1, 66, 15], [1, 103, 8], [3, 52], [1, 400, 48], [2, 327, 46], [1, 379, 25], [2, 164, 4], [2, 358, 4], [2, 356, 1], [2, 175, 7], [2, 261, 37], [3, 283], [1, 155, 7], [2, 214, 9], [1, 154, 42], [1, 12, 22], [3, 52], [1, 273, 8], [3, 52], [3, 52], [3, 52], [1, 364, 38], [2, 199, 30], [3, 283], [1, 70, 18], [2, 275, 41], [2, 373, 3], [2, 260, 2], [2, 31, 11], [2, 326, 1], [2, 244, 34], [3, 323], [2, 209, 27], [1, 163, 5], [1, 131, 45], [1, 3, 44], [2, 311, 34], [1, 8, 35], [1, 78, 49], [2, 342, 32], [2, 231, 46], [2, 124, 23], [1, 85, 30], [2, 274, 16], [1, 28, 39], [3, 283], [1, 156, 28], [3, 54], [1, 100, 1], [1, 43, 9], [3, 1], [2, 85, 3], [3, 149], [3, 1], [3, 187], [2, 107, 12], [1, 374, 9], [3, 52], [3, 52], [3, 283], [3, 1], [3, 283], [2, 365, 10], [1, 89, 27], [3, 52], [2, 145, 44], [1, 220, 33], [2, 116, 8], [1, 94, 26], [3, 283], [3, 52], [3, 371], [2, 185, 29], [1, 93, 37], [2, 203, 36], [2, 181, 46], [1, 313, 14], [3, 283], [2, 191, 34], [3, 283], [1, 206, 6], [3, 235], [1, 56, 31], [2, 361, 11], [1, 244, 27], [2, 241, 12], [1, 214, 41], [2, 358, 20], [1, 340, 37], [2, 126, 18], [2, 101, 44], [1, 23, 46], [2, 323, 24], [3, 52], [1, 301, 12], [2, 224, 43], [1, 24, 26], [2, 326, 50], [3, 52], [3, 52], [3, 52], [2, 177, 37], [1, 240, 41], [1, 320, 12], [3, 239], [2, 369, 31], [1, 372, 19], [2, 179, 23], [2, 180, 23], [1, 170, 10], [1, 252, 1], [2, 42, 39], [2, 124, 13], [1, 263, 19], [1, 244, 1], [1, 84, 37], [1, 187, 8], [3, 283], [2, 175, 43], [1, 203, 38], [3, 1], [2, 19, 29], [1, 301, 19], [3, 41], [3, 46], [2, 26, 21], [1, 325, 7], [1, 343, 47], [2, 81, 49], [2, 395, 29], [3, 52], [3, 283], [2, 114, 47], [2, 6, 38], [1, 219, 37], [2, 154, 23], [1, 188, 6], [1, 116, 25], [2, 385, 7], [1, 289, 3], [2, 295, 2], [3, 1], [3, 1], [3, 52], [3, 283], [3, 52], [2, 140, 2], [3, 1], [1, 248, 40], [1, 379, 18], [1, 224, 7], [2, 63, 24], [3, 283], [2, 207, 13], [1, 333, 6], [2, 332, 20], [3, 222], [2, 52, 14], [1, 158, 4], [3, 52], [1, 271, 35], [1, 75, 10], [2, 322, 11], [2, 315, 3], [2, 26, 7], [1, 10, 11], [2, 401, 50], [1, 9, 18], [3, 1], [1, 28, 39], [1, 185, 3], [3, 52], [1, 162, 20], [1, 247, 5], [3, 52], [1, 308, 9], [2, 103, 33], [3, 1], [3, 344], [3, 283], [2, 124, 29], [3, 1], [2, 121, 23], [1, 122, 23], [1, 381, 37], [2, 185, 35], [2, 285, 5], [2, 190, 25], [2, 122, 25], [1, 293, 38], [1, 75, 41], [2, 138, 15], [1, 202, 9], [1, 121, 42], [3, 52], [2, 83, 23], [3, 325], [3, 1], [2, 350, 41], [2, 337, 50], [2, 198, 19], [1, 221, 32], [1, 309, 4], [3, 1], [1, 310, 44], [2, 22, 34], [1, 247, 29], [2, 187, 22], [3, 283], [1, 366, 16], [3, 52], [3, 52], [1, 8, 36], [2, 83, 18], [1, 134, 36], [2, 291, 27], [2, 352, 16], [2, 281, 27], [1, 397, 15], [2, 215, 40], [2, 190, 4], [2, 98, 17], [3, 331], [2, 21, 32], [1, 56, 10], [1, 388, 42], [1, 225, 3], [1, 225, 42], [1, 185, 18], [3, 347], [1, 184, 23], [3, 52], [1, 137, 30], [1, 187, 39], [1, 249, 46], [1, 137, 16], [1, 160, 7], [2, 148, 11], [1, 384, 13], [2, 389, 27], [2, 308, 16], [2, 384, 39], [2, 235, 1], [2, 117, 6], [2, 222, 11], [3, 1], [3, 52], [1, 249, 5], [2, 321, 28], [2, 365, 14], [2, 2, 34], [3, 362], [3, 52], [2, 93, 25], [3, 1], [2, 359, 10], [3, 52], [3, 1], [2, 408, 4], [1, 193, 45], [3, 52], [1, 97, 11], [1, 75, 2], [3, 1], [3, 52], [3, 283], [3, 273], [3, 105], [1, 95, 14], [3, 1], [3, 100], [2, 176, 33], [2, 121, 26], [3, 52], [1, 331, 21], [2, 83, 14]]);\n// => [0,21,1441,21,1738,118,0,118,0,2002,168,1420,2494,200,1780,0,2330,200,3271,0,239,239,3700,3700,101,0,27,2706,2706,269,86,4109,4109,33,23,296,336,3215,4666,4682,336,4725,3257,3993,336,5853,4054,4054,336,4419,0,6323,0,336,336,336,6792,6937,7168,48,374,404,404,5232,404,404,404,404,5284,0,5549,289,8801,0,8804,26,485,485,5577,8825,5577,485,5723,485,0,5769,5803,0,485,485,485,485,5,7036,11646,15,15,485,7094,12035,12035,485,7169,485,12057,7234,0,841,12670,841,841,12944,0,7400,12973,841,7,13544,13690,8141,841,841,0,220,841,14789,868,15,868,14895,868,14905,868,14967,868,8684,755,13,14981,15,868]\nconsole.timeEnd('start');\n```\n","source":"_posts/leetCode_coin.md","raw":"## 题目\nhttps://leetcode.cn/problems/coin-bonus\n\n## 测试用例\nhttps://leetcode.cn/submissions/detail/398908470/testcase/\n\n## 解法\n这道题的难点在于，怎么做到高性能，leetCode 给的测试用例最大的能到5w左右，性能不好会执行超时。\n\n```javascript\nvar bonus = function (n, leadership, operations) {\n  // 此时把每个人的上级、下级的关系静态化，而不是只记录直系领导和下属，是处于性能的考虑。\n  // operations 传参中会多次要求输出，如果每一次输出时都临时遍历某员工的上级下级，成本是巨大的\n  let memberMap = {\n    /**\n     * 1: {\n     *  memberList: [], // 存储部门下所有的人\n     *  leaderList: [], // 存储此人的领导们\n     *  coin: 0, // 存储部门所有人获得的 coin 之和\n     * }\n     * */\n  };\n  leadership.forEach(([leader, member]) => {\n    if (!memberMap[leader])\n      memberMap[leader] = {\n        memberList: [], // 可用 Set 也可Array，但执行次数多的情况下 Array 性能比 Set 好\n        leaderList: [],\n        coin: 0,\n      };\n    if (!memberMap[member])\n      memberMap[member] = {\n        memberList: [], \n        leaderList: [],\n        coin: 0,\n      };\n    memberMap[member].leaderList.push(leader);\n    memberMap[leader].memberList.push(member);\n    memberMap[leader].leaderList.forEach((v) => {\n      // 成员的领导人数变更。领导的领导也是领导\n      if (memberMap[member].leaderList.indexOf(v) === -1) { // indexOf 的性能比 some 的性能好\n        memberMap[member].leaderList.push(v);\n      }\n      // 领导们的部门人数变更\n      if (memberMap[v].memberList.indexOf(member) === -1) {\n        memberMap[v].memberList.push(member);\n      }\n    });\n  });\n\n  let result = [];\n  operations.forEach(([type, member, coin]) => {\n    // 给成员发，该成员及领导们的部门 coin += coin\n    if (type === 1) {\n      memberMap[member].coin += coin;\n      memberMap[member].leaderList.forEach((v) => (memberMap[v].coin += +coin));\n      return;\n    }\n    const addCoin = coin * (memberMap[member].memberList.length + 1);\n    // 给成员及其下属发\n    if (type === 2) {\n      // 该成员及领导们的部门 coin += 人数 * coin\n      memberMap[member].coin += addCoin;\n      memberMap[member].leaderList.forEach(\n        (v) =>\n          (memberMap[v].coin += addCoin)\n      );\n      // 下属们的部门 coin += 下属的部门人数 * coin\n      memberMap[member].memberList.forEach(v => {\n        memberMap[v].coin += coin * (memberMap[v].memberList.length + 1)\n      });\n      return;\n    }\n    // 返回部门 coin\n    result.push(memberMap[member].coin % 1000000007);\n  });\n  return result;\n};\n\nconsole.time('start');\nbonus(408,\n[[1, 283], [1, 52], [1, 273], [1, 217], [1, 136], [1, 211], [1, 179], [283, 293], [283, 292], [283, 227], [283, 54], [283, 404], [283, 378], [283, 243], [283, 270], [283, 46], [283, 300], [52, 376], [52, 267], [52, 71], [52, 406], [273, 9], [273, 148], [273, 51], [273, 102], [217, 110], [217, 370], [217, 125], [217, 357], [136, 360], [136, 260], [136, 196], [136, 228], [136, 103], [136, 347], [136, 384], [211, 25], [179, 3], [179, 140], [179, 56], [179, 263], [179, 231], [293, 326], [293, 121], [293, 116], [293, 21], [293, 262], [293, 369], [293, 183], [292, 75], [292, 303], [292, 330], [227, 397], [227, 35], [227, 279], [227, 345], [227, 139], [227, 391], [227, 266], [54, 16], [404, 214], [404, 184], [404, 68], [404, 27], [378, 192], [378, 87], [378, 39], [378, 386], [378, 259], [243, 94], [243, 112], [243, 99], [243, 182], [243, 29], [243, 197], [270, 23], [270, 181], [270, 297], [46, 351], [46, 362], [46, 22], [46, 61], [300, 408], [376, 332], [267, 349], [267, 80], [267, 367], [267, 226], [71, 72], [71, 389], [71, 163], [71, 100], [71, 107], [71, 92], [71, 85], [406, 353], [406, 199], [406, 257], [406, 242], [406, 305], [406, 159], [406, 77], [9, 309], [148, 401], [148, 65], [148, 218], [148, 342], [148, 331], [148, 339], [51, 290], [51, 150], [51, 60], [51, 137], [51, 160], [51, 252], [51, 364], [51, 335], [51, 343], [51, 304], [102, 180], [102, 138], [110, 74], [110, 171], [110, 390], [110, 352], [110, 37], [370, 377], [370, 358], [370, 36], [370, 272], [125, 66], [125, 301], [125, 67], [125, 239], [125, 175], [357, 12], [357, 106], [357, 282], [357, 240], [360, 144], [360, 393], [360, 317], [360, 195], [260, 264], [260, 13], [260, 281], [260, 400], [260, 212], [260, 365], [260, 402], [260, 63], [260, 255], [196, 193], [196, 338], [228, 399], [228, 202], [228, 313], [228, 392], [228, 208], [228, 38], [228, 31], [103, 203], [103, 320], [103, 254], [103, 275], [103, 34], [347, 149], [347, 222], [347, 114], [347, 157], [347, 325], [347, 6], [347, 154], [347, 250], [347, 350], [384, 93], [384, 123], [384, 374], [384, 50], [25, 285], [25, 20], [25, 288], [25, 251], [25, 185], [25, 289], [3, 241], [3, 258], [3, 43], [140, 58], [140, 329], [140, 45], [140, 287], [140, 132], [140, 170], [140, 355], [140, 311], [140, 47], [140, 168], [56, 321], [56, 388], [56, 32], [56, 302], [56, 190], [56, 48], [56, 11], [263, 96], [263, 30], [263, 24], [263, 26], [231, 229], [231, 164], [231, 128], [231, 295], [231, 230], [231, 396], [231, 81], [231, 244], [231, 276], [231, 141], [326, 134], [326, 161], [326, 97], [326, 286], [326, 88], [326, 221], [326, 405], [326, 8], [326, 156], [121, 113], [121, 15], [121, 348], [121, 104], [121, 398], [121, 91], [121, 40], [121, 64], [121, 318], [121, 111], [116, 271], [21, 83], [21, 55], [262, 368], [262, 336], [262, 249], [262, 129], [262, 145], [262, 337], [262, 234], [262, 79], [369, 90], [369, 122], [369, 395], [369, 108], [369, 341], [369, 334], [369, 316], [369, 69], [369, 278], [183, 151], [183, 315], [183, 17], [183, 178], [183, 274], [183, 269], [75, 200], [75, 131], [75, 126], [75, 19], [75, 359], [75, 70], [75, 133], [75, 117], [75, 33], [75, 206], [303, 223], [303, 324], [303, 101], [303, 314], [303, 135], [303, 146], [330, 191], [330, 194], [330, 253], [330, 307], [330, 225], [330, 299], [330, 382], [330, 82], [397, 167], [397, 2], [397, 308], [397, 246], [397, 245], [397, 265], [35, 261], [35, 328], [35, 224], [35, 296], [35, 340], [35, 186], [35, 280], [279, 210], [279, 4], [279, 268], [279, 173], [279, 284], [279, 247], [279, 119], [279, 89], [279, 205], [345, 10], [345, 124], [345, 366], [345, 7], [345, 98], [345, 209], [345, 394], [345, 385], [345, 188], [345, 166], [139, 153], [139, 327], [139, 127], [139, 155], [139, 312], [391, 235], [391, 76], [391, 381], [266, 219], [266, 5], [266, 361], [266, 120], [266, 344], [266, 105], [266, 371], [266, 165], [266, 323], [16, 59], [16, 237], [16, 291], [16, 109], [214, 383], [214, 142], [214, 220], [214, 215], [184, 78], [184, 238], [184, 57], [68, 204], [27, 356], [27, 322], [27, 62], [27, 162], [27, 407], [27, 14], [27, 152], [27, 86], [27, 84], [27, 95], [192, 42], [87, 115], [87, 403], [87, 118], [87, 189], [87, 28], [87, 277], [87, 147], [87, 49], [39, 73], [386, 213], [386, 387], [386, 306], [386, 346], [386, 143], [386, 363], [386, 41], [386, 373], [259, 216], [259, 372], [259, 169], [259, 248], [259, 354], [259, 53], [259, 44], [259, 380], [259, 256], [94, 333], [94, 172], [94, 298], [94, 18], [94, 232], [94, 158], [94, 207], [94, 236], [112, 310], [112, 130], [112, 319], [112, 174], [99, 177], [99, 233], [99, 187], [99, 198], [99, 375], [99, 201], [99, 176], [99, 294], [99, 379]],\n[[1, 201, 26], [1, 114, 22], [2, 366, 42], [2, 116, 22], [1, 239, 5], [1, 11, 38], [1, 50, 19], [2, 159, 45], [1, 242, 12], [1, 338, 44], [1, 221, 33], [2, 268, 21], [3, 186], [1, 171, 46], [2, 41, 15], [2, 84, 1], [1, 210, 30], [2, 109, 28], [2, 164, 16], [2, 40, 8], [1, 129, 30], [3, 268], [2, 163, 16], [2, 345, 44], [1, 91, 13], [2, 16, 46], [2, 304, 15], [2, 387, 8], [2, 296, 13], [1, 293, 1], [2, 362, 15], [2, 177, 37], [1, 11, 50], [1, 372, 34], [3, 1], [3, 268], [1, 339, 43], [2, 353, 45], [2, 121, 19], [3, 1], [1, 125, 8], [1, 160, 44], [1, 66, 43], [1, 98, 2], [3, 52], [2, 108, 41], [3, 245], [1, 66, 45], [3, 52], [1, 132, 49], [2, 135, 32], [3, 402], [3, 1], [2, 234, 23], [2, 80, 50], [3, 52], [3, 283], [2, 233, 26], [2, 269, 27], [1, 388, 45], [2, 139, 40], [2, 118, 17], [2, 329, 37], [2, 200, 27], [3, 1], [1, 9, 23], [2, 367, 32], [3, 52], [2, 314, 23], [1, 50, 2], [3, 283], [1, 320, 25], [3, 154], [1, 270, 48], [1, 213, 30], [2, 297, 12], [2, 404, 20], [3, 283], [2, 291, 31], [3, 52], [1, 278, 43], [1, 244, 45], [1, 96, 3], [3, 1], [1, 339, 49], [1, 131, 26], [2, 75, 9], [1, 80, 39], [3, 264], [1, 69, 7], [1, 394, 37], [2, 17, 16], [1, 290, 44], [1, 95, 35], [3, 52], [2, 361, 8], [1, 195, 18], [1, 63, 15], [3, 52], [1, 309, 8], [2, 368, 28], [3, 1], [3, 1], [1, 311, 48], [3, 125], [1, 382, 23], [2, 225, 23], [2, 309, 24], [3, 253], [1, 66, 18], [2, 137, 26], [3, 269], [3, 283], [3, 283], [1, 346, 10], [1, 340, 19], [1, 105, 13], [1, 303, 25], [1, 376, 30], [3, 52], [1, 275, 36], [1, 9, 3], [1, 190, 36], [1, 312, 10], [3, 366], [1, 248, 24], [1, 360, 41], [3, 1], [3, 1], [2, 367, 27], [1, 209, 19], [2, 255, 3], [2, 135, 42], [1, 57, 16], [2, 121, 8], [3, 221], [1, 112, 47], [2, 42, 23], [2, 87, 12], [1, 293, 27], [1, 309, 28], [1, 33, 7], [1, 196, 39], [3, 314], [1, 164, 12], [2, 2, 31], [3, 52], [1, 80, 40], [3, 52], [3, 283], [3, 1], [2, 212, 16], [3, 1], [3, 52], [2, 50, 43], [3, 1], [1, 14, 42], [3, 283], [2, 404, 32], [3, 283], [2, 44, 11], [2, 70, 18], [2, 147, 32], [2, 260, 28], [1, 144, 9], [3, 52], [3, 1], [3, 283], [3, 283], [1, 329, 20], [1, 45, 13], [3, 52], [1, 340, 33], [2, 14, 11], [1, 288, 31], [1, 262, 46], [1, 145, 42], [2, 303, 24], [1, 392, 3], [1, 295, 24], [2, 213, 5], [1, 368, 13], [1, 228, 14], [1, 375, 47], [3, 283], [3, 161], [3, 1], [1, 64, 46], [2, 102, 5], [1, 251, 21], [3, 298], [1, 223, 24], [2, 297, 13], [1, 293, 19], [2, 99, 26], [2, 395, 21], [3, 52], [3, 52], [3, 52], [2, 221, 50], [3, 1], [2, 116, 41], [2, 246, 24], [1, 233, 39], [3, 1], [2, 318, 5], [2, 63, 43], [1, 142, 46], [2, 367, 38], [2, 193, 47], [1, 34, 27], [1, 302, 25], [3, 1], [1, 238, 13], [2, 372, 19], [3, 311], [1, 3, 14], [2, 200, 34], [3, 52], [2, 160, 40], [2, 242, 30], [1, 273, 27], [1, 375, 9], [3, 52], [1, 66, 15], [1, 103, 8], [3, 52], [1, 400, 48], [2, 327, 46], [1, 379, 25], [2, 164, 4], [2, 358, 4], [2, 356, 1], [2, 175, 7], [2, 261, 37], [3, 283], [1, 155, 7], [2, 214, 9], [1, 154, 42], [1, 12, 22], [3, 52], [1, 273, 8], [3, 52], [3, 52], [3, 52], [1, 364, 38], [2, 199, 30], [3, 283], [1, 70, 18], [2, 275, 41], [2, 373, 3], [2, 260, 2], [2, 31, 11], [2, 326, 1], [2, 244, 34], [3, 323], [2, 209, 27], [1, 163, 5], [1, 131, 45], [1, 3, 44], [2, 311, 34], [1, 8, 35], [1, 78, 49], [2, 342, 32], [2, 231, 46], [2, 124, 23], [1, 85, 30], [2, 274, 16], [1, 28, 39], [3, 283], [1, 156, 28], [3, 54], [1, 100, 1], [1, 43, 9], [3, 1], [2, 85, 3], [3, 149], [3, 1], [3, 187], [2, 107, 12], [1, 374, 9], [3, 52], [3, 52], [3, 283], [3, 1], [3, 283], [2, 365, 10], [1, 89, 27], [3, 52], [2, 145, 44], [1, 220, 33], [2, 116, 8], [1, 94, 26], [3, 283], [3, 52], [3, 371], [2, 185, 29], [1, 93, 37], [2, 203, 36], [2, 181, 46], [1, 313, 14], [3, 283], [2, 191, 34], [3, 283], [1, 206, 6], [3, 235], [1, 56, 31], [2, 361, 11], [1, 244, 27], [2, 241, 12], [1, 214, 41], [2, 358, 20], [1, 340, 37], [2, 126, 18], [2, 101, 44], [1, 23, 46], [2, 323, 24], [3, 52], [1, 301, 12], [2, 224, 43], [1, 24, 26], [2, 326, 50], [3, 52], [3, 52], [3, 52], [2, 177, 37], [1, 240, 41], [1, 320, 12], [3, 239], [2, 369, 31], [1, 372, 19], [2, 179, 23], [2, 180, 23], [1, 170, 10], [1, 252, 1], [2, 42, 39], [2, 124, 13], [1, 263, 19], [1, 244, 1], [1, 84, 37], [1, 187, 8], [3, 283], [2, 175, 43], [1, 203, 38], [3, 1], [2, 19, 29], [1, 301, 19], [3, 41], [3, 46], [2, 26, 21], [1, 325, 7], [1, 343, 47], [2, 81, 49], [2, 395, 29], [3, 52], [3, 283], [2, 114, 47], [2, 6, 38], [1, 219, 37], [2, 154, 23], [1, 188, 6], [1, 116, 25], [2, 385, 7], [1, 289, 3], [2, 295, 2], [3, 1], [3, 1], [3, 52], [3, 283], [3, 52], [2, 140, 2], [3, 1], [1, 248, 40], [1, 379, 18], [1, 224, 7], [2, 63, 24], [3, 283], [2, 207, 13], [1, 333, 6], [2, 332, 20], [3, 222], [2, 52, 14], [1, 158, 4], [3, 52], [1, 271, 35], [1, 75, 10], [2, 322, 11], [2, 315, 3], [2, 26, 7], [1, 10, 11], [2, 401, 50], [1, 9, 18], [3, 1], [1, 28, 39], [1, 185, 3], [3, 52], [1, 162, 20], [1, 247, 5], [3, 52], [1, 308, 9], [2, 103, 33], [3, 1], [3, 344], [3, 283], [2, 124, 29], [3, 1], [2, 121, 23], [1, 122, 23], [1, 381, 37], [2, 185, 35], [2, 285, 5], [2, 190, 25], [2, 122, 25], [1, 293, 38], [1, 75, 41], [2, 138, 15], [1, 202, 9], [1, 121, 42], [3, 52], [2, 83, 23], [3, 325], [3, 1], [2, 350, 41], [2, 337, 50], [2, 198, 19], [1, 221, 32], [1, 309, 4], [3, 1], [1, 310, 44], [2, 22, 34], [1, 247, 29], [2, 187, 22], [3, 283], [1, 366, 16], [3, 52], [3, 52], [1, 8, 36], [2, 83, 18], [1, 134, 36], [2, 291, 27], [2, 352, 16], [2, 281, 27], [1, 397, 15], [2, 215, 40], [2, 190, 4], [2, 98, 17], [3, 331], [2, 21, 32], [1, 56, 10], [1, 388, 42], [1, 225, 3], [1, 225, 42], [1, 185, 18], [3, 347], [1, 184, 23], [3, 52], [1, 137, 30], [1, 187, 39], [1, 249, 46], [1, 137, 16], [1, 160, 7], [2, 148, 11], [1, 384, 13], [2, 389, 27], [2, 308, 16], [2, 384, 39], [2, 235, 1], [2, 117, 6], [2, 222, 11], [3, 1], [3, 52], [1, 249, 5], [2, 321, 28], [2, 365, 14], [2, 2, 34], [3, 362], [3, 52], [2, 93, 25], [3, 1], [2, 359, 10], [3, 52], [3, 1], [2, 408, 4], [1, 193, 45], [3, 52], [1, 97, 11], [1, 75, 2], [3, 1], [3, 52], [3, 283], [3, 273], [3, 105], [1, 95, 14], [3, 1], [3, 100], [2, 176, 33], [2, 121, 26], [3, 52], [1, 331, 21], [2, 83, 14]]);\n// => [0,21,1441,21,1738,118,0,118,0,2002,168,1420,2494,200,1780,0,2330,200,3271,0,239,239,3700,3700,101,0,27,2706,2706,269,86,4109,4109,33,23,296,336,3215,4666,4682,336,4725,3257,3993,336,5853,4054,4054,336,4419,0,6323,0,336,336,336,6792,6937,7168,48,374,404,404,5232,404,404,404,404,5284,0,5549,289,8801,0,8804,26,485,485,5577,8825,5577,485,5723,485,0,5769,5803,0,485,485,485,485,5,7036,11646,15,15,485,7094,12035,12035,485,7169,485,12057,7234,0,841,12670,841,841,12944,0,7400,12973,841,7,13544,13690,8141,841,841,0,220,841,14789,868,15,868,14895,868,14905,868,14967,868,8684,755,13,14981,15,868]\nconsole.timeEnd('start');\n```\n","slug":"leetCode_coin","published":1,"date":"2023-02-23T06:13:40.850Z","updated":"2023-02-23T06:13:40.850Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl22r0006shoaivw6txil","content":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://leetcode.cn/problems/coin-bonus\" target=\"_blank\" rel=\"noopener\">https://leetcode.cn/problems/coin-bonus</a></p>\n<h2 id=\"测试用例\"><a href=\"#测试用例\" class=\"headerlink\" title=\"测试用例\"></a>测试用例</h2><p><a href=\"https://leetcode.cn/submissions/detail/398908470/testcase/\" target=\"_blank\" rel=\"noopener\">https://leetcode.cn/submissions/detail/398908470/testcase/</a></p>\n<h2 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h2><p>这道题的难点在于，怎么做到高性能，leetCode 给的测试用例最大的能到5w左右，性能不好会执行超时。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bonus = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n, leadership, operations</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 此时把每个人的上级、下级的关系静态化，而不是只记录直系领导和下属，是处于性能的考虑。</span></span><br><span class=\"line\">  <span class=\"comment\">// operations 传参中会多次要求输出，如果每一次输出时都临时遍历某员工的上级下级，成本是巨大的</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> memberMap = &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 1: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">     *  memberList: [], // 存储部门下所有的人</span></span><br><span class=\"line\"><span class=\"comment\">     *  leaderList: [], // 存储此人的领导们</span></span><br><span class=\"line\"><span class=\"comment\">     *  coin: 0, // 存储部门所有人获得的 coin 之和</span></span><br><span class=\"line\"><span class=\"comment\">     * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  leadership.forEach(<span class=\"function\">(<span class=\"params\">[leader, member]</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!memberMap[leader])</span><br><span class=\"line\">      memberMap[leader] = &#123;</span><br><span class=\"line\">        memberList: [], <span class=\"comment\">// 可用 Set 也可Array，但执行次数多的情况下 Array 性能比 Set 好</span></span><br><span class=\"line\">        leaderList: [],</span><br><span class=\"line\">        coin: <span class=\"number\">0</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!memberMap[member])</span><br><span class=\"line\">      memberMap[member] = &#123;</span><br><span class=\"line\">        memberList: [], </span><br><span class=\"line\">        leaderList: [],</span><br><span class=\"line\">        coin: <span class=\"number\">0</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    memberMap[member].leaderList.push(leader);</span><br><span class=\"line\">    memberMap[leader].memberList.push(member);</span><br><span class=\"line\">    memberMap[leader].leaderList.forEach(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 成员的领导人数变更。领导的领导也是领导</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (memberMap[member].leaderList.indexOf(v) === <span class=\"number\">-1</span>) &#123; <span class=\"comment\">// indexOf 的性能比 some 的性能好</span></span><br><span class=\"line\">        memberMap[member].leaderList.push(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 领导们的部门人数变更</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (memberMap[v].memberList.indexOf(member) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        memberMap[v].memberList.push(member);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">  operations.forEach(<span class=\"function\">(<span class=\"params\">[type, member, coin]</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 给成员发，该成员及领导们的部门 coin += coin</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memberMap[member].coin += coin;</span><br><span class=\"line\">      memberMap[member].leaderList.forEach(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> (memberMap[v].coin += +coin));</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> addCoin = coin * (memberMap[member].memberList.length + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 给成员及其下属发</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type === <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 该成员及领导们的部门 coin += 人数 * coin</span></span><br><span class=\"line\">      memberMap[member].coin += addCoin;</span><br><span class=\"line\">      memberMap[member].leaderList.forEach(</span><br><span class=\"line\">        (v) =&gt;</span><br><span class=\"line\">          (memberMap[v].coin += addCoin)</span><br><span class=\"line\">      );</span><br><span class=\"line\">      <span class=\"comment\">// 下属们的部门 coin += 下属的部门人数 * coin</span></span><br><span class=\"line\">      memberMap[member].memberList.forEach(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">        memberMap[v].coin += coin * (memberMap[v].memberList.length + <span class=\"number\">1</span>)</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 返回部门 coin</span></span><br><span class=\"line\">    result.push(memberMap[member].coin % <span class=\"number\">1000000007</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.time(<span class=\"string\">'start'</span>);</span><br><span class=\"line\">bonus(<span class=\"number\">408</span>,</span><br><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">273</span>], [<span class=\"number\">1</span>, <span class=\"number\">217</span>], [<span class=\"number\">1</span>, <span class=\"number\">136</span>], [<span class=\"number\">1</span>, <span class=\"number\">211</span>], [<span class=\"number\">1</span>, <span class=\"number\">179</span>], [<span class=\"number\">283</span>, <span class=\"number\">293</span>], [<span class=\"number\">283</span>, <span class=\"number\">292</span>], [<span class=\"number\">283</span>, <span class=\"number\">227</span>], [<span class=\"number\">283</span>, <span class=\"number\">54</span>], [<span class=\"number\">283</span>, <span class=\"number\">404</span>], [<span class=\"number\">283</span>, <span class=\"number\">378</span>], [<span class=\"number\">283</span>, <span class=\"number\">243</span>], [<span class=\"number\">283</span>, <span class=\"number\">270</span>], [<span class=\"number\">283</span>, <span class=\"number\">46</span>], [<span class=\"number\">283</span>, <span class=\"number\">300</span>], [<span class=\"number\">52</span>, <span class=\"number\">376</span>], [<span class=\"number\">52</span>, <span class=\"number\">267</span>], [<span class=\"number\">52</span>, <span class=\"number\">71</span>], [<span class=\"number\">52</span>, <span class=\"number\">406</span>], [<span class=\"number\">273</span>, <span class=\"number\">9</span>], [<span class=\"number\">273</span>, <span class=\"number\">148</span>], [<span class=\"number\">273</span>, <span class=\"number\">51</span>], [<span class=\"number\">273</span>, <span class=\"number\">102</span>], [<span class=\"number\">217</span>, <span class=\"number\">110</span>], [<span class=\"number\">217</span>, <span class=\"number\">370</span>], [<span class=\"number\">217</span>, <span class=\"number\">125</span>], [<span class=\"number\">217</span>, <span class=\"number\">357</span>], [<span class=\"number\">136</span>, <span class=\"number\">360</span>], [<span class=\"number\">136</span>, <span class=\"number\">260</span>], [<span class=\"number\">136</span>, <span class=\"number\">196</span>], [<span class=\"number\">136</span>, <span class=\"number\">228</span>], [<span class=\"number\">136</span>, <span class=\"number\">103</span>], [<span class=\"number\">136</span>, <span class=\"number\">347</span>], [<span class=\"number\">136</span>, <span class=\"number\">384</span>], [<span class=\"number\">211</span>, <span class=\"number\">25</span>], [<span class=\"number\">179</span>, <span class=\"number\">3</span>], [<span class=\"number\">179</span>, <span class=\"number\">140</span>], [<span class=\"number\">179</span>, <span class=\"number\">56</span>], [<span class=\"number\">179</span>, <span class=\"number\">263</span>], [<span class=\"number\">179</span>, <span class=\"number\">231</span>], [<span class=\"number\">293</span>, <span class=\"number\">326</span>], [<span class=\"number\">293</span>, <span class=\"number\">121</span>], [<span class=\"number\">293</span>, <span class=\"number\">116</span>], [<span class=\"number\">293</span>, <span class=\"number\">21</span>], [<span class=\"number\">293</span>, <span class=\"number\">262</span>], [<span class=\"number\">293</span>, <span class=\"number\">369</span>], [<span class=\"number\">293</span>, <span class=\"number\">183</span>], [<span class=\"number\">292</span>, <span class=\"number\">75</span>], [<span class=\"number\">292</span>, <span class=\"number\">303</span>], [<span class=\"number\">292</span>, <span class=\"number\">330</span>], [<span class=\"number\">227</span>, <span class=\"number\">397</span>], [<span class=\"number\">227</span>, <span class=\"number\">35</span>], [<span class=\"number\">227</span>, <span class=\"number\">279</span>], [<span class=\"number\">227</span>, <span class=\"number\">345</span>], [<span class=\"number\">227</span>, <span class=\"number\">139</span>], [<span class=\"number\">227</span>, <span class=\"number\">391</span>], [<span class=\"number\">227</span>, <span class=\"number\">266</span>], [<span class=\"number\">54</span>, <span class=\"number\">16</span>], [<span class=\"number\">404</span>, <span class=\"number\">214</span>], [<span class=\"number\">404</span>, <span class=\"number\">184</span>], [<span class=\"number\">404</span>, <span class=\"number\">68</span>], [<span class=\"number\">404</span>, <span class=\"number\">27</span>], [<span class=\"number\">378</span>, <span class=\"number\">192</span>], [<span class=\"number\">378</span>, <span class=\"number\">87</span>], [<span class=\"number\">378</span>, <span class=\"number\">39</span>], [<span class=\"number\">378</span>, <span class=\"number\">386</span>], [<span class=\"number\">378</span>, <span class=\"number\">259</span>], [<span class=\"number\">243</span>, <span class=\"number\">94</span>], [<span class=\"number\">243</span>, <span class=\"number\">112</span>], [<span class=\"number\">243</span>, <span class=\"number\">99</span>], [<span class=\"number\">243</span>, <span class=\"number\">182</span>], [<span class=\"number\">243</span>, <span class=\"number\">29</span>], [<span class=\"number\">243</span>, <span class=\"number\">197</span>], [<span class=\"number\">270</span>, <span class=\"number\">23</span>], [<span class=\"number\">270</span>, <span class=\"number\">181</span>], [<span class=\"number\">270</span>, <span class=\"number\">297</span>], [<span class=\"number\">46</span>, <span class=\"number\">351</span>], [<span class=\"number\">46</span>, <span class=\"number\">362</span>], [<span class=\"number\">46</span>, <span class=\"number\">22</span>], [<span class=\"number\">46</span>, <span class=\"number\">61</span>], [<span class=\"number\">300</span>, <span class=\"number\">408</span>], [<span class=\"number\">376</span>, <span class=\"number\">332</span>], [<span class=\"number\">267</span>, <span class=\"number\">349</span>], [<span class=\"number\">267</span>, <span class=\"number\">80</span>], [<span class=\"number\">267</span>, <span class=\"number\">367</span>], [<span class=\"number\">267</span>, <span class=\"number\">226</span>], [<span class=\"number\">71</span>, <span class=\"number\">72</span>], [<span class=\"number\">71</span>, <span class=\"number\">389</span>], [<span class=\"number\">71</span>, <span class=\"number\">163</span>], [<span class=\"number\">71</span>, <span class=\"number\">100</span>], [<span class=\"number\">71</span>, <span class=\"number\">107</span>], [<span class=\"number\">71</span>, <span class=\"number\">92</span>], [<span class=\"number\">71</span>, <span class=\"number\">85</span>], [<span class=\"number\">406</span>, <span class=\"number\">353</span>], [<span class=\"number\">406</span>, <span class=\"number\">199</span>], [<span class=\"number\">406</span>, <span class=\"number\">257</span>], [<span class=\"number\">406</span>, <span class=\"number\">242</span>], [<span class=\"number\">406</span>, <span class=\"number\">305</span>], [<span class=\"number\">406</span>, <span class=\"number\">159</span>], [<span class=\"number\">406</span>, <span class=\"number\">77</span>], [<span class=\"number\">9</span>, <span class=\"number\">309</span>], [<span class=\"number\">148</span>, <span class=\"number\">401</span>], [<span class=\"number\">148</span>, <span class=\"number\">65</span>], [<span class=\"number\">148</span>, <span class=\"number\">218</span>], [<span class=\"number\">148</span>, <span class=\"number\">342</span>], [<span class=\"number\">148</span>, <span class=\"number\">331</span>], [<span class=\"number\">148</span>, <span class=\"number\">339</span>], [<span class=\"number\">51</span>, <span class=\"number\">290</span>], [<span class=\"number\">51</span>, <span class=\"number\">150</span>], [<span class=\"number\">51</span>, <span class=\"number\">60</span>], [<span class=\"number\">51</span>, <span class=\"number\">137</span>], [<span class=\"number\">51</span>, <span class=\"number\">160</span>], [<span class=\"number\">51</span>, <span class=\"number\">252</span>], [<span class=\"number\">51</span>, <span class=\"number\">364</span>], [<span class=\"number\">51</span>, <span class=\"number\">335</span>], [<span class=\"number\">51</span>, <span class=\"number\">343</span>], [<span class=\"number\">51</span>, <span class=\"number\">304</span>], [<span class=\"number\">102</span>, <span class=\"number\">180</span>], [<span class=\"number\">102</span>, <span class=\"number\">138</span>], [<span class=\"number\">110</span>, <span class=\"number\">74</span>], [<span class=\"number\">110</span>, <span class=\"number\">171</span>], [<span class=\"number\">110</span>, <span class=\"number\">390</span>], [<span class=\"number\">110</span>, <span class=\"number\">352</span>], [<span class=\"number\">110</span>, <span class=\"number\">37</span>], [<span class=\"number\">370</span>, <span class=\"number\">377</span>], [<span class=\"number\">370</span>, <span class=\"number\">358</span>], [<span class=\"number\">370</span>, <span class=\"number\">36</span>], [<span class=\"number\">370</span>, <span class=\"number\">272</span>], [<span class=\"number\">125</span>, <span class=\"number\">66</span>], [<span class=\"number\">125</span>, <span class=\"number\">301</span>], [<span class=\"number\">125</span>, <span class=\"number\">67</span>], [<span class=\"number\">125</span>, <span class=\"number\">239</span>], [<span class=\"number\">125</span>, <span class=\"number\">175</span>], [<span class=\"number\">357</span>, <span class=\"number\">12</span>], [<span class=\"number\">357</span>, <span class=\"number\">106</span>], [<span class=\"number\">357</span>, <span class=\"number\">282</span>], [<span class=\"number\">357</span>, <span class=\"number\">240</span>], [<span class=\"number\">360</span>, <span class=\"number\">144</span>], [<span class=\"number\">360</span>, <span class=\"number\">393</span>], [<span class=\"number\">360</span>, <span class=\"number\">317</span>], [<span class=\"number\">360</span>, <span class=\"number\">195</span>], [<span class=\"number\">260</span>, <span class=\"number\">264</span>], [<span class=\"number\">260</span>, <span class=\"number\">13</span>], [<span class=\"number\">260</span>, <span class=\"number\">281</span>], [<span class=\"number\">260</span>, <span class=\"number\">400</span>], [<span class=\"number\">260</span>, <span class=\"number\">212</span>], [<span class=\"number\">260</span>, <span class=\"number\">365</span>], [<span class=\"number\">260</span>, <span class=\"number\">402</span>], [<span class=\"number\">260</span>, <span class=\"number\">63</span>], [<span class=\"number\">260</span>, <span class=\"number\">255</span>], [<span class=\"number\">196</span>, <span class=\"number\">193</span>], [<span class=\"number\">196</span>, <span class=\"number\">338</span>], [<span class=\"number\">228</span>, <span class=\"number\">399</span>], [<span class=\"number\">228</span>, <span class=\"number\">202</span>], [<span class=\"number\">228</span>, <span class=\"number\">313</span>], [<span class=\"number\">228</span>, <span class=\"number\">392</span>], [<span class=\"number\">228</span>, <span class=\"number\">208</span>], [<span class=\"number\">228</span>, <span class=\"number\">38</span>], [<span class=\"number\">228</span>, <span class=\"number\">31</span>], [<span class=\"number\">103</span>, <span class=\"number\">203</span>], [<span class=\"number\">103</span>, <span class=\"number\">320</span>], [<span class=\"number\">103</span>, <span class=\"number\">254</span>], [<span class=\"number\">103</span>, <span class=\"number\">275</span>], [<span class=\"number\">103</span>, <span class=\"number\">34</span>], [<span class=\"number\">347</span>, <span class=\"number\">149</span>], [<span class=\"number\">347</span>, <span class=\"number\">222</span>], [<span class=\"number\">347</span>, <span class=\"number\">114</span>], [<span class=\"number\">347</span>, <span class=\"number\">157</span>], [<span class=\"number\">347</span>, <span class=\"number\">325</span>], [<span class=\"number\">347</span>, <span class=\"number\">6</span>], [<span class=\"number\">347</span>, <span class=\"number\">154</span>], [<span class=\"number\">347</span>, <span class=\"number\">250</span>], [<span class=\"number\">347</span>, <span class=\"number\">350</span>], [<span class=\"number\">384</span>, <span class=\"number\">93</span>], [<span class=\"number\">384</span>, <span class=\"number\">123</span>], [<span class=\"number\">384</span>, <span class=\"number\">374</span>], [<span class=\"number\">384</span>, <span class=\"number\">50</span>], [<span class=\"number\">25</span>, <span class=\"number\">285</span>], [<span class=\"number\">25</span>, <span class=\"number\">20</span>], [<span class=\"number\">25</span>, <span class=\"number\">288</span>], [<span class=\"number\">25</span>, <span class=\"number\">251</span>], [<span class=\"number\">25</span>, <span class=\"number\">185</span>], [<span class=\"number\">25</span>, <span class=\"number\">289</span>], [<span class=\"number\">3</span>, <span class=\"number\">241</span>], [<span class=\"number\">3</span>, <span class=\"number\">258</span>], [<span class=\"number\">3</span>, <span class=\"number\">43</span>], [<span class=\"number\">140</span>, <span class=\"number\">58</span>], [<span class=\"number\">140</span>, <span class=\"number\">329</span>], [<span class=\"number\">140</span>, <span class=\"number\">45</span>], [<span class=\"number\">140</span>, <span class=\"number\">287</span>], [<span class=\"number\">140</span>, <span class=\"number\">132</span>], [<span class=\"number\">140</span>, <span class=\"number\">170</span>], [<span class=\"number\">140</span>, <span class=\"number\">355</span>], [<span class=\"number\">140</span>, <span class=\"number\">311</span>], [<span class=\"number\">140</span>, <span class=\"number\">47</span>], [<span class=\"number\">140</span>, <span class=\"number\">168</span>], [<span class=\"number\">56</span>, <span class=\"number\">321</span>], [<span class=\"number\">56</span>, <span class=\"number\">388</span>], [<span class=\"number\">56</span>, <span class=\"number\">32</span>], [<span class=\"number\">56</span>, <span class=\"number\">302</span>], [<span class=\"number\">56</span>, <span class=\"number\">190</span>], [<span class=\"number\">56</span>, <span class=\"number\">48</span>], [<span class=\"number\">56</span>, <span class=\"number\">11</span>], [<span class=\"number\">263</span>, <span class=\"number\">96</span>], [<span class=\"number\">263</span>, <span class=\"number\">30</span>], [<span class=\"number\">263</span>, <span class=\"number\">24</span>], [<span class=\"number\">263</span>, <span class=\"number\">26</span>], [<span class=\"number\">231</span>, <span class=\"number\">229</span>], [<span class=\"number\">231</span>, <span class=\"number\">164</span>], [<span class=\"number\">231</span>, <span class=\"number\">128</span>], [<span class=\"number\">231</span>, <span class=\"number\">295</span>], [<span class=\"number\">231</span>, <span class=\"number\">230</span>], [<span class=\"number\">231</span>, <span class=\"number\">396</span>], [<span class=\"number\">231</span>, <span class=\"number\">81</span>], [<span class=\"number\">231</span>, <span class=\"number\">244</span>], [<span class=\"number\">231</span>, <span class=\"number\">276</span>], [<span class=\"number\">231</span>, <span class=\"number\">141</span>], [<span class=\"number\">326</span>, <span class=\"number\">134</span>], [<span class=\"number\">326</span>, <span class=\"number\">161</span>], [<span class=\"number\">326</span>, <span class=\"number\">97</span>], [<span class=\"number\">326</span>, <span class=\"number\">286</span>], [<span class=\"number\">326</span>, <span class=\"number\">88</span>], [<span class=\"number\">326</span>, <span class=\"number\">221</span>], [<span class=\"number\">326</span>, <span class=\"number\">405</span>], [<span class=\"number\">326</span>, <span class=\"number\">8</span>], [<span class=\"number\">326</span>, <span class=\"number\">156</span>], [<span class=\"number\">121</span>, <span class=\"number\">113</span>], [<span class=\"number\">121</span>, <span class=\"number\">15</span>], [<span class=\"number\">121</span>, <span class=\"number\">348</span>], [<span class=\"number\">121</span>, <span class=\"number\">104</span>], [<span class=\"number\">121</span>, <span class=\"number\">398</span>], [<span class=\"number\">121</span>, <span class=\"number\">91</span>], [<span class=\"number\">121</span>, <span class=\"number\">40</span>], [<span class=\"number\">121</span>, <span class=\"number\">64</span>], [<span class=\"number\">121</span>, <span class=\"number\">318</span>], [<span class=\"number\">121</span>, <span class=\"number\">111</span>], [<span class=\"number\">116</span>, <span class=\"number\">271</span>], [<span class=\"number\">21</span>, <span class=\"number\">83</span>], [<span class=\"number\">21</span>, <span class=\"number\">55</span>], [<span class=\"number\">262</span>, <span class=\"number\">368</span>], [<span class=\"number\">262</span>, <span class=\"number\">336</span>], [<span class=\"number\">262</span>, <span class=\"number\">249</span>], [<span class=\"number\">262</span>, <span class=\"number\">129</span>], [<span class=\"number\">262</span>, <span class=\"number\">145</span>], [<span class=\"number\">262</span>, <span class=\"number\">337</span>], [<span class=\"number\">262</span>, <span class=\"number\">234</span>], [<span class=\"number\">262</span>, <span class=\"number\">79</span>], [<span class=\"number\">369</span>, <span class=\"number\">90</span>], [<span class=\"number\">369</span>, <span class=\"number\">122</span>], [<span class=\"number\">369</span>, <span class=\"number\">395</span>], [<span class=\"number\">369</span>, <span class=\"number\">108</span>], [<span class=\"number\">369</span>, <span class=\"number\">341</span>], [<span class=\"number\">369</span>, <span class=\"number\">334</span>], [<span class=\"number\">369</span>, <span class=\"number\">316</span>], [<span class=\"number\">369</span>, <span class=\"number\">69</span>], [<span class=\"number\">369</span>, <span class=\"number\">278</span>], [<span class=\"number\">183</span>, <span class=\"number\">151</span>], [<span class=\"number\">183</span>, <span class=\"number\">315</span>], [<span class=\"number\">183</span>, <span class=\"number\">17</span>], [<span class=\"number\">183</span>, <span class=\"number\">178</span>], [<span class=\"number\">183</span>, <span class=\"number\">274</span>], [<span class=\"number\">183</span>, <span class=\"number\">269</span>], [<span class=\"number\">75</span>, <span class=\"number\">200</span>], [<span class=\"number\">75</span>, <span class=\"number\">131</span>], [<span class=\"number\">75</span>, <span class=\"number\">126</span>], [<span class=\"number\">75</span>, <span class=\"number\">19</span>], [<span class=\"number\">75</span>, <span class=\"number\">359</span>], [<span class=\"number\">75</span>, <span class=\"number\">70</span>], [<span class=\"number\">75</span>, <span class=\"number\">133</span>], [<span class=\"number\">75</span>, <span class=\"number\">117</span>], [<span class=\"number\">75</span>, <span class=\"number\">33</span>], [<span class=\"number\">75</span>, <span class=\"number\">206</span>], [<span class=\"number\">303</span>, <span class=\"number\">223</span>], [<span class=\"number\">303</span>, <span class=\"number\">324</span>], [<span class=\"number\">303</span>, <span class=\"number\">101</span>], [<span class=\"number\">303</span>, <span class=\"number\">314</span>], [<span class=\"number\">303</span>, <span class=\"number\">135</span>], [<span class=\"number\">303</span>, <span class=\"number\">146</span>], [<span class=\"number\">330</span>, <span class=\"number\">191</span>], [<span class=\"number\">330</span>, <span class=\"number\">194</span>], [<span class=\"number\">330</span>, <span class=\"number\">253</span>], [<span class=\"number\">330</span>, <span class=\"number\">307</span>], [<span class=\"number\">330</span>, <span class=\"number\">225</span>], [<span class=\"number\">330</span>, <span class=\"number\">299</span>], [<span class=\"number\">330</span>, <span class=\"number\">382</span>], [<span class=\"number\">330</span>, <span class=\"number\">82</span>], [<span class=\"number\">397</span>, <span class=\"number\">167</span>], [<span class=\"number\">397</span>, <span class=\"number\">2</span>], [<span class=\"number\">397</span>, <span class=\"number\">308</span>], [<span class=\"number\">397</span>, <span class=\"number\">246</span>], [<span class=\"number\">397</span>, <span class=\"number\">245</span>], [<span class=\"number\">397</span>, <span class=\"number\">265</span>], [<span class=\"number\">35</span>, <span class=\"number\">261</span>], [<span class=\"number\">35</span>, <span class=\"number\">328</span>], [<span class=\"number\">35</span>, <span class=\"number\">224</span>], [<span class=\"number\">35</span>, <span class=\"number\">296</span>], [<span class=\"number\">35</span>, <span class=\"number\">340</span>], [<span class=\"number\">35</span>, <span class=\"number\">186</span>], [<span class=\"number\">35</span>, <span class=\"number\">280</span>], [<span class=\"number\">279</span>, <span class=\"number\">210</span>], [<span class=\"number\">279</span>, <span class=\"number\">4</span>], [<span class=\"number\">279</span>, <span class=\"number\">268</span>], [<span class=\"number\">279</span>, <span class=\"number\">173</span>], [<span class=\"number\">279</span>, <span class=\"number\">284</span>], [<span class=\"number\">279</span>, <span class=\"number\">247</span>], [<span class=\"number\">279</span>, <span class=\"number\">119</span>], [<span class=\"number\">279</span>, <span class=\"number\">89</span>], [<span class=\"number\">279</span>, <span class=\"number\">205</span>], [<span class=\"number\">345</span>, <span class=\"number\">10</span>], [<span class=\"number\">345</span>, <span class=\"number\">124</span>], [<span class=\"number\">345</span>, <span class=\"number\">366</span>], [<span class=\"number\">345</span>, <span class=\"number\">7</span>], [<span class=\"number\">345</span>, <span class=\"number\">98</span>], [<span class=\"number\">345</span>, <span class=\"number\">209</span>], [<span class=\"number\">345</span>, <span class=\"number\">394</span>], [<span class=\"number\">345</span>, <span class=\"number\">385</span>], [<span class=\"number\">345</span>, <span class=\"number\">188</span>], [<span class=\"number\">345</span>, <span class=\"number\">166</span>], [<span class=\"number\">139</span>, <span class=\"number\">153</span>], [<span class=\"number\">139</span>, <span class=\"number\">327</span>], [<span class=\"number\">139</span>, <span class=\"number\">127</span>], [<span class=\"number\">139</span>, <span class=\"number\">155</span>], [<span class=\"number\">139</span>, <span class=\"number\">312</span>], [<span class=\"number\">391</span>, <span class=\"number\">235</span>], [<span class=\"number\">391</span>, <span class=\"number\">76</span>], [<span class=\"number\">391</span>, <span class=\"number\">381</span>], [<span class=\"number\">266</span>, <span class=\"number\">219</span>], [<span class=\"number\">266</span>, <span class=\"number\">5</span>], [<span class=\"number\">266</span>, <span class=\"number\">361</span>], [<span class=\"number\">266</span>, <span class=\"number\">120</span>], [<span class=\"number\">266</span>, <span class=\"number\">344</span>], [<span class=\"number\">266</span>, <span class=\"number\">105</span>], [<span class=\"number\">266</span>, <span class=\"number\">371</span>], [<span class=\"number\">266</span>, <span class=\"number\">165</span>], [<span class=\"number\">266</span>, <span class=\"number\">323</span>], [<span class=\"number\">16</span>, <span class=\"number\">59</span>], [<span class=\"number\">16</span>, <span class=\"number\">237</span>], [<span class=\"number\">16</span>, <span class=\"number\">291</span>], [<span class=\"number\">16</span>, <span class=\"number\">109</span>], [<span class=\"number\">214</span>, <span class=\"number\">383</span>], [<span class=\"number\">214</span>, <span class=\"number\">142</span>], [<span class=\"number\">214</span>, <span class=\"number\">220</span>], [<span class=\"number\">214</span>, <span class=\"number\">215</span>], [<span class=\"number\">184</span>, <span class=\"number\">78</span>], [<span class=\"number\">184</span>, <span class=\"number\">238</span>], [<span class=\"number\">184</span>, <span class=\"number\">57</span>], [<span class=\"number\">68</span>, <span class=\"number\">204</span>], [<span class=\"number\">27</span>, <span class=\"number\">356</span>], [<span class=\"number\">27</span>, <span class=\"number\">322</span>], [<span class=\"number\">27</span>, <span class=\"number\">62</span>], [<span class=\"number\">27</span>, <span class=\"number\">162</span>], [<span class=\"number\">27</span>, <span class=\"number\">407</span>], [<span class=\"number\">27</span>, <span class=\"number\">14</span>], [<span class=\"number\">27</span>, <span class=\"number\">152</span>], [<span class=\"number\">27</span>, <span class=\"number\">86</span>], [<span class=\"number\">27</span>, <span class=\"number\">84</span>], [<span class=\"number\">27</span>, <span class=\"number\">95</span>], [<span class=\"number\">192</span>, <span class=\"number\">42</span>], [<span class=\"number\">87</span>, <span class=\"number\">115</span>], [<span class=\"number\">87</span>, <span class=\"number\">403</span>], [<span class=\"number\">87</span>, <span class=\"number\">118</span>], [<span class=\"number\">87</span>, <span class=\"number\">189</span>], [<span class=\"number\">87</span>, <span class=\"number\">28</span>], [<span class=\"number\">87</span>, <span class=\"number\">277</span>], [<span class=\"number\">87</span>, <span class=\"number\">147</span>], [<span class=\"number\">87</span>, <span class=\"number\">49</span>], [<span class=\"number\">39</span>, <span class=\"number\">73</span>], [<span class=\"number\">386</span>, <span class=\"number\">213</span>], [<span class=\"number\">386</span>, <span class=\"number\">387</span>], [<span class=\"number\">386</span>, <span class=\"number\">306</span>], [<span class=\"number\">386</span>, <span class=\"number\">346</span>], [<span class=\"number\">386</span>, <span class=\"number\">143</span>], [<span class=\"number\">386</span>, <span class=\"number\">363</span>], [<span class=\"number\">386</span>, <span class=\"number\">41</span>], [<span class=\"number\">386</span>, <span class=\"number\">373</span>], [<span class=\"number\">259</span>, <span class=\"number\">216</span>], [<span class=\"number\">259</span>, <span class=\"number\">372</span>], [<span class=\"number\">259</span>, <span class=\"number\">169</span>], [<span class=\"number\">259</span>, <span class=\"number\">248</span>], [<span class=\"number\">259</span>, <span class=\"number\">354</span>], [<span class=\"number\">259</span>, <span class=\"number\">53</span>], [<span class=\"number\">259</span>, <span class=\"number\">44</span>], [<span class=\"number\">259</span>, <span class=\"number\">380</span>], [<span class=\"number\">259</span>, <span class=\"number\">256</span>], [<span class=\"number\">94</span>, <span class=\"number\">333</span>], [<span class=\"number\">94</span>, <span class=\"number\">172</span>], [<span class=\"number\">94</span>, <span class=\"number\">298</span>], [<span class=\"number\">94</span>, <span class=\"number\">18</span>], [<span class=\"number\">94</span>, <span class=\"number\">232</span>], [<span class=\"number\">94</span>, <span class=\"number\">158</span>], [<span class=\"number\">94</span>, <span class=\"number\">207</span>], [<span class=\"number\">94</span>, <span class=\"number\">236</span>], [<span class=\"number\">112</span>, <span class=\"number\">310</span>], [<span class=\"number\">112</span>, <span class=\"number\">130</span>], [<span class=\"number\">112</span>, <span class=\"number\">319</span>], [<span class=\"number\">112</span>, <span class=\"number\">174</span>], [<span class=\"number\">99</span>, <span class=\"number\">177</span>], [<span class=\"number\">99</span>, <span class=\"number\">233</span>], [<span class=\"number\">99</span>, <span class=\"number\">187</span>], [<span class=\"number\">99</span>, <span class=\"number\">198</span>], [<span class=\"number\">99</span>, <span class=\"number\">375</span>], [<span class=\"number\">99</span>, <span class=\"number\">201</span>], [<span class=\"number\">99</span>, <span class=\"number\">176</span>], [<span class=\"number\">99</span>, <span class=\"number\">294</span>], [<span class=\"number\">99</span>, <span class=\"number\">379</span>]],</span><br><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">201</span>, <span class=\"number\">26</span>], [<span class=\"number\">1</span>, <span class=\"number\">114</span>, <span class=\"number\">22</span>], [<span class=\"number\">2</span>, <span class=\"number\">366</span>, <span class=\"number\">42</span>], [<span class=\"number\">2</span>, <span class=\"number\">116</span>, <span class=\"number\">22</span>], [<span class=\"number\">1</span>, <span class=\"number\">239</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">38</span>], [<span class=\"number\">1</span>, <span class=\"number\">50</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">159</span>, <span class=\"number\">45</span>], [<span class=\"number\">1</span>, <span class=\"number\">242</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">338</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">221</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">268</span>, <span class=\"number\">21</span>], [<span class=\"number\">3</span>, <span class=\"number\">186</span>], [<span class=\"number\">1</span>, <span class=\"number\">171</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">41</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">84</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">210</span>, <span class=\"number\">30</span>], [<span class=\"number\">2</span>, <span class=\"number\">109</span>, <span class=\"number\">28</span>], [<span class=\"number\">2</span>, <span class=\"number\">164</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">40</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">129</span>, <span class=\"number\">30</span>], [<span class=\"number\">3</span>, <span class=\"number\">268</span>], [<span class=\"number\">2</span>, <span class=\"number\">163</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">345</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">91</span>, <span class=\"number\">13</span>], [<span class=\"number\">2</span>, <span class=\"number\">16</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">304</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">387</span>, <span class=\"number\">8</span>], [<span class=\"number\">2</span>, <span class=\"number\">296</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">362</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">177</span>, <span class=\"number\">37</span>], [<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">50</span>], [<span class=\"number\">1</span>, <span class=\"number\">372</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">268</span>], [<span class=\"number\">1</span>, <span class=\"number\">339</span>, <span class=\"number\">43</span>], [<span class=\"number\">2</span>, <span class=\"number\">353</span>, <span class=\"number\">45</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">19</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">125</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">160</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">98</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">108</span>, <span class=\"number\">41</span>], [<span class=\"number\">3</span>, <span class=\"number\">245</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">45</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">132</span>, <span class=\"number\">49</span>], [<span class=\"number\">2</span>, <span class=\"number\">135</span>, <span class=\"number\">32</span>], [<span class=\"number\">3</span>, <span class=\"number\">402</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">234</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">80</span>, <span class=\"number\">50</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">233</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">269</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">388</span>, <span class=\"number\">45</span>], [<span class=\"number\">2</span>, <span class=\"number\">139</span>, <span class=\"number\">40</span>], [<span class=\"number\">2</span>, <span class=\"number\">118</span>, <span class=\"number\">17</span>], [<span class=\"number\">2</span>, <span class=\"number\">329</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">200</span>, <span class=\"number\">27</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">367</span>, <span class=\"number\">32</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">314</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">50</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">320</span>, <span class=\"number\">25</span>], [<span class=\"number\">3</span>, <span class=\"number\">154</span>], [<span class=\"number\">1</span>, <span class=\"number\">270</span>, <span class=\"number\">48</span>], [<span class=\"number\">1</span>, <span class=\"number\">213</span>, <span class=\"number\">30</span>], [<span class=\"number\">2</span>, <span class=\"number\">297</span>, <span class=\"number\">12</span>], [<span class=\"number\">2</span>, <span class=\"number\">404</span>, <span class=\"number\">20</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">291</span>, <span class=\"number\">31</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">278</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">244</span>, <span class=\"number\">45</span>], [<span class=\"number\">1</span>, <span class=\"number\">96</span>, <span class=\"number\">3</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">339</span>, <span class=\"number\">49</span>], [<span class=\"number\">1</span>, <span class=\"number\">131</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">75</span>, <span class=\"number\">9</span>], [<span class=\"number\">1</span>, <span class=\"number\">80</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">264</span>], [<span class=\"number\">1</span>, <span class=\"number\">69</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">394</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">17</span>, <span class=\"number\">16</span>], [<span class=\"number\">1</span>, <span class=\"number\">290</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">95</span>, <span class=\"number\">35</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">361</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">195</span>, <span class=\"number\">18</span>], [<span class=\"number\">1</span>, <span class=\"number\">63</span>, <span class=\"number\">15</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">309</span>, <span class=\"number\">8</span>], [<span class=\"number\">2</span>, <span class=\"number\">368</span>, <span class=\"number\">28</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">311</span>, <span class=\"number\">48</span>], [<span class=\"number\">3</span>, <span class=\"number\">125</span>], [<span class=\"number\">1</span>, <span class=\"number\">382</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">225</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">309</span>, <span class=\"number\">24</span>], [<span class=\"number\">3</span>, <span class=\"number\">253</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">137</span>, <span class=\"number\">26</span>], [<span class=\"number\">3</span>, <span class=\"number\">269</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">346</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">340</span>, <span class=\"number\">19</span>], [<span class=\"number\">1</span>, <span class=\"number\">105</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">303</span>, <span class=\"number\">25</span>], [<span class=\"number\">1</span>, <span class=\"number\">376</span>, <span class=\"number\">30</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">275</span>, <span class=\"number\">36</span>], [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">190</span>, <span class=\"number\">36</span>], [<span class=\"number\">1</span>, <span class=\"number\">312</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">366</span>], [<span class=\"number\">1</span>, <span class=\"number\">248</span>, <span class=\"number\">24</span>], [<span class=\"number\">1</span>, <span class=\"number\">360</span>, <span class=\"number\">41</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">367</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">209</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">255</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">135</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">57</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">221</span>], [<span class=\"number\">1</span>, <span class=\"number\">112</span>, <span class=\"number\">47</span>], [<span class=\"number\">2</span>, <span class=\"number\">42</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">87</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">309</span>, <span class=\"number\">28</span>], [<span class=\"number\">1</span>, <span class=\"number\">33</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">196</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">314</span>], [<span class=\"number\">1</span>, <span class=\"number\">164</span>, <span class=\"number\">12</span>], [<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">31</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">80</span>, <span class=\"number\">40</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">212</span>, <span class=\"number\">16</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">50</span>, <span class=\"number\">43</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">14</span>, <span class=\"number\">42</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">404</span>, <span class=\"number\">32</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">44</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">70</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">147</span>, <span class=\"number\">32</span>], [<span class=\"number\">2</span>, <span class=\"number\">260</span>, <span class=\"number\">28</span>], [<span class=\"number\">1</span>, <span class=\"number\">144</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">329</span>, <span class=\"number\">20</span>], [<span class=\"number\">1</span>, <span class=\"number\">45</span>, <span class=\"number\">13</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">340</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">14</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">288</span>, <span class=\"number\">31</span>], [<span class=\"number\">1</span>, <span class=\"number\">262</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">145</span>, <span class=\"number\">42</span>], [<span class=\"number\">2</span>, <span class=\"number\">303</span>, <span class=\"number\">24</span>], [<span class=\"number\">1</span>, <span class=\"number\">392</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">295</span>, <span class=\"number\">24</span>], [<span class=\"number\">2</span>, <span class=\"number\">213</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">368</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">228</span>, <span class=\"number\">14</span>], [<span class=\"number\">1</span>, <span class=\"number\">375</span>, <span class=\"number\">47</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">161</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">64</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">102</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">251</span>, <span class=\"number\">21</span>], [<span class=\"number\">3</span>, <span class=\"number\">298</span>], [<span class=\"number\">1</span>, <span class=\"number\">223</span>, <span class=\"number\">24</span>], [<span class=\"number\">2</span>, <span class=\"number\">297</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">99</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">395</span>, <span class=\"number\">21</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">221</span>, <span class=\"number\">50</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">116</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">246</span>, <span class=\"number\">24</span>], [<span class=\"number\">1</span>, <span class=\"number\">233</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">318</span>, <span class=\"number\">5</span>], [<span class=\"number\">2</span>, <span class=\"number\">63</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">142</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">367</span>, <span class=\"number\">38</span>], [<span class=\"number\">2</span>, <span class=\"number\">193</span>, <span class=\"number\">47</span>], [<span class=\"number\">1</span>, <span class=\"number\">34</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">302</span>, <span class=\"number\">25</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">238</span>, <span class=\"number\">13</span>], [<span class=\"number\">2</span>, <span class=\"number\">372</span>, <span class=\"number\">19</span>], [<span class=\"number\">3</span>, <span class=\"number\">311</span>], [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">14</span>], [<span class=\"number\">2</span>, <span class=\"number\">200</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">160</span>, <span class=\"number\">40</span>], [<span class=\"number\">2</span>, <span class=\"number\">242</span>, <span class=\"number\">30</span>], [<span class=\"number\">1</span>, <span class=\"number\">273</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">375</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">15</span>], [<span class=\"number\">1</span>, <span class=\"number\">103</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">400</span>, <span class=\"number\">48</span>], [<span class=\"number\">2</span>, <span class=\"number\">327</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">379</span>, <span class=\"number\">25</span>], [<span class=\"number\">2</span>, <span class=\"number\">164</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">358</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">356</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">175</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">261</span>, <span class=\"number\">37</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">155</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">214</span>, <span class=\"number\">9</span>], [<span class=\"number\">1</span>, <span class=\"number\">154</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">12</span>, <span class=\"number\">22</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">273</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">364</span>, <span class=\"number\">38</span>], [<span class=\"number\">2</span>, <span class=\"number\">199</span>, <span class=\"number\">30</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">70</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">275</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">373</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">260</span>, <span class=\"number\">2</span>], [<span class=\"number\">2</span>, <span class=\"number\">31</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">326</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">244</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">323</span>], [<span class=\"number\">2</span>, <span class=\"number\">209</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">163</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">131</span>, <span class=\"number\">45</span>], [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>], [<span class=\"number\">2</span>, <span class=\"number\">311</span>, <span class=\"number\">34</span>], [<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">35</span>], [<span class=\"number\">1</span>, <span class=\"number\">78</span>, <span class=\"number\">49</span>], [<span class=\"number\">2</span>, <span class=\"number\">342</span>, <span class=\"number\">32</span>], [<span class=\"number\">2</span>, <span class=\"number\">231</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">124</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">85</span>, <span class=\"number\">30</span>], [<span class=\"number\">2</span>, <span class=\"number\">274</span>, <span class=\"number\">16</span>], [<span class=\"number\">1</span>, <span class=\"number\">28</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">156</span>, <span class=\"number\">28</span>], [<span class=\"number\">3</span>, <span class=\"number\">54</span>], [<span class=\"number\">1</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">43</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">85</span>, <span class=\"number\">3</span>], [<span class=\"number\">3</span>, <span class=\"number\">149</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">187</span>], [<span class=\"number\">2</span>, <span class=\"number\">107</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">374</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">365</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">89</span>, <span class=\"number\">27</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">145</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">220</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">116</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">94</span>, <span class=\"number\">26</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">371</span>], [<span class=\"number\">2</span>, <span class=\"number\">185</span>, <span class=\"number\">29</span>], [<span class=\"number\">1</span>, <span class=\"number\">93</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">203</span>, <span class=\"number\">36</span>], [<span class=\"number\">2</span>, <span class=\"number\">181</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">313</span>, <span class=\"number\">14</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">191</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">206</span>, <span class=\"number\">6</span>], [<span class=\"number\">3</span>, <span class=\"number\">235</span>], [<span class=\"number\">1</span>, <span class=\"number\">56</span>, <span class=\"number\">31</span>], [<span class=\"number\">2</span>, <span class=\"number\">361</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">244</span>, <span class=\"number\">27</span>], [<span class=\"number\">2</span>, <span class=\"number\">241</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">214</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">358</span>, <span class=\"number\">20</span>], [<span class=\"number\">1</span>, <span class=\"number\">340</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">126</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">101</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">23</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">323</span>, <span class=\"number\">24</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">301</span>, <span class=\"number\">12</span>], [<span class=\"number\">2</span>, <span class=\"number\">224</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">24</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">326</span>, <span class=\"number\">50</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">177</span>, <span class=\"number\">37</span>], [<span class=\"number\">1</span>, <span class=\"number\">240</span>, <span class=\"number\">41</span>], [<span class=\"number\">1</span>, <span class=\"number\">320</span>, <span class=\"number\">12</span>], [<span class=\"number\">3</span>, <span class=\"number\">239</span>], [<span class=\"number\">2</span>, <span class=\"number\">369</span>, <span class=\"number\">31</span>], [<span class=\"number\">1</span>, <span class=\"number\">372</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">179</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">180</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">170</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">252</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">42</span>, <span class=\"number\">39</span>], [<span class=\"number\">2</span>, <span class=\"number\">124</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">263</span>, <span class=\"number\">19</span>], [<span class=\"number\">1</span>, <span class=\"number\">244</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">84</span>, <span class=\"number\">37</span>], [<span class=\"number\">1</span>, <span class=\"number\">187</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">175</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">203</span>, <span class=\"number\">38</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">19</span>, <span class=\"number\">29</span>], [<span class=\"number\">1</span>, <span class=\"number\">301</span>, <span class=\"number\">19</span>], [<span class=\"number\">3</span>, <span class=\"number\">41</span>], [<span class=\"number\">3</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">26</span>, <span class=\"number\">21</span>], [<span class=\"number\">1</span>, <span class=\"number\">325</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">343</span>, <span class=\"number\">47</span>], [<span class=\"number\">2</span>, <span class=\"number\">81</span>, <span class=\"number\">49</span>], [<span class=\"number\">2</span>, <span class=\"number\">395</span>, <span class=\"number\">29</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">114</span>, <span class=\"number\">47</span>], [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">38</span>], [<span class=\"number\">1</span>, <span class=\"number\">219</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">154</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">188</span>, <span class=\"number\">6</span>], [<span class=\"number\">1</span>, <span class=\"number\">116</span>, <span class=\"number\">25</span>], [<span class=\"number\">2</span>, <span class=\"number\">385</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">289</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">295</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">140</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">248</span>, <span class=\"number\">40</span>], [<span class=\"number\">1</span>, <span class=\"number\">379</span>, <span class=\"number\">18</span>], [<span class=\"number\">1</span>, <span class=\"number\">224</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">63</span>, <span class=\"number\">24</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">207</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">333</span>, <span class=\"number\">6</span>], [<span class=\"number\">2</span>, <span class=\"number\">332</span>, <span class=\"number\">20</span>], [<span class=\"number\">3</span>, <span class=\"number\">222</span>], [<span class=\"number\">2</span>, <span class=\"number\">52</span>, <span class=\"number\">14</span>], [<span class=\"number\">1</span>, <span class=\"number\">158</span>, <span class=\"number\">4</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">271</span>, <span class=\"number\">35</span>], [<span class=\"number\">1</span>, <span class=\"number\">75</span>, <span class=\"number\">10</span>], [<span class=\"number\">2</span>, <span class=\"number\">322</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">315</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">26</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">401</span>, <span class=\"number\">50</span>], [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">18</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">28</span>, <span class=\"number\">39</span>], [<span class=\"number\">1</span>, <span class=\"number\">185</span>, <span class=\"number\">3</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">162</span>, <span class=\"number\">20</span>], [<span class=\"number\">1</span>, <span class=\"number\">247</span>, <span class=\"number\">5</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">308</span>, <span class=\"number\">9</span>], [<span class=\"number\">2</span>, <span class=\"number\">103</span>, <span class=\"number\">33</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">344</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">124</span>, <span class=\"number\">29</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">122</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">381</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">185</span>, <span class=\"number\">35</span>], [<span class=\"number\">2</span>, <span class=\"number\">285</span>, <span class=\"number\">5</span>], [<span class=\"number\">2</span>, <span class=\"number\">190</span>, <span class=\"number\">25</span>], [<span class=\"number\">2</span>, <span class=\"number\">122</span>, <span class=\"number\">25</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">38</span>], [<span class=\"number\">1</span>, <span class=\"number\">75</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">138</span>, <span class=\"number\">15</span>], [<span class=\"number\">1</span>, <span class=\"number\">202</span>, <span class=\"number\">9</span>], [<span class=\"number\">1</span>, <span class=\"number\">121</span>, <span class=\"number\">42</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">83</span>, <span class=\"number\">23</span>], [<span class=\"number\">3</span>, <span class=\"number\">325</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">350</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">337</span>, <span class=\"number\">50</span>], [<span class=\"number\">2</span>, <span class=\"number\">198</span>, <span class=\"number\">19</span>], [<span class=\"number\">1</span>, <span class=\"number\">221</span>, <span class=\"number\">32</span>], [<span class=\"number\">1</span>, <span class=\"number\">309</span>, <span class=\"number\">4</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">310</span>, <span class=\"number\">44</span>], [<span class=\"number\">2</span>, <span class=\"number\">22</span>, <span class=\"number\">34</span>], [<span class=\"number\">1</span>, <span class=\"number\">247</span>, <span class=\"number\">29</span>], [<span class=\"number\">2</span>, <span class=\"number\">187</span>, <span class=\"number\">22</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">366</span>, <span class=\"number\">16</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">36</span>], [<span class=\"number\">2</span>, <span class=\"number\">83</span>, <span class=\"number\">18</span>], [<span class=\"number\">1</span>, <span class=\"number\">134</span>, <span class=\"number\">36</span>], [<span class=\"number\">2</span>, <span class=\"number\">291</span>, <span class=\"number\">27</span>], [<span class=\"number\">2</span>, <span class=\"number\">352</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">281</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">397</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">215</span>, <span class=\"number\">40</span>], [<span class=\"number\">2</span>, <span class=\"number\">190</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">98</span>, <span class=\"number\">17</span>], [<span class=\"number\">3</span>, <span class=\"number\">331</span>], [<span class=\"number\">2</span>, <span class=\"number\">21</span>, <span class=\"number\">32</span>], [<span class=\"number\">1</span>, <span class=\"number\">56</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">388</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">225</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">225</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">185</span>, <span class=\"number\">18</span>], [<span class=\"number\">3</span>, <span class=\"number\">347</span>], [<span class=\"number\">1</span>, <span class=\"number\">184</span>, <span class=\"number\">23</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">137</span>, <span class=\"number\">30</span>], [<span class=\"number\">1</span>, <span class=\"number\">187</span>, <span class=\"number\">39</span>], [<span class=\"number\">1</span>, <span class=\"number\">249</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">137</span>, <span class=\"number\">16</span>], [<span class=\"number\">1</span>, <span class=\"number\">160</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">148</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">384</span>, <span class=\"number\">13</span>], [<span class=\"number\">2</span>, <span class=\"number\">389</span>, <span class=\"number\">27</span>], [<span class=\"number\">2</span>, <span class=\"number\">308</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">384</span>, <span class=\"number\">39</span>], [<span class=\"number\">2</span>, <span class=\"number\">235</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">117</span>, <span class=\"number\">6</span>], [<span class=\"number\">2</span>, <span class=\"number\">222</span>, <span class=\"number\">11</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">249</span>, <span class=\"number\">5</span>], [<span class=\"number\">2</span>, <span class=\"number\">321</span>, <span class=\"number\">28</span>], [<span class=\"number\">2</span>, <span class=\"number\">365</span>, <span class=\"number\">14</span>], [<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">362</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">93</span>, <span class=\"number\">25</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">359</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">408</span>, <span class=\"number\">4</span>], [<span class=\"number\">1</span>, <span class=\"number\">193</span>, <span class=\"number\">45</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">97</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">75</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">273</span>], [<span class=\"number\">3</span>, <span class=\"number\">105</span>], [<span class=\"number\">1</span>, <span class=\"number\">95</span>, <span class=\"number\">14</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">100</span>], [<span class=\"number\">2</span>, <span class=\"number\">176</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">26</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">331</span>, <span class=\"number\">21</span>], [<span class=\"number\">2</span>, <span class=\"number\">83</span>, <span class=\"number\">14</span>]]);</span><br><span class=\"line\"><span class=\"comment\">// =&gt; [0,21,1441,21,1738,118,0,118,0,2002,168,1420,2494,200,1780,0,2330,200,3271,0,239,239,3700,3700,101,0,27,2706,2706,269,86,4109,4109,33,23,296,336,3215,4666,4682,336,4725,3257,3993,336,5853,4054,4054,336,4419,0,6323,0,336,336,336,6792,6937,7168,48,374,404,404,5232,404,404,404,404,5284,0,5549,289,8801,0,8804,26,485,485,5577,8825,5577,485,5723,485,0,5769,5803,0,485,485,485,485,5,7036,11646,15,15,485,7094,12035,12035,485,7169,485,12057,7234,0,841,12670,841,841,12944,0,7400,12973,841,7,13544,13690,8141,841,841,0,220,841,14789,868,15,868,14895,868,14905,868,14967,868,8684,755,13,14981,15,868]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.timeEnd(<span class=\"string\">'start'</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://leetcode.cn/problems/coin-bonus\" target=\"_blank\" rel=\"noopener\">https://leetcode.cn/problems/coin-bonus</a></p>\n<h2 id=\"测试用例\"><a href=\"#测试用例\" class=\"headerlink\" title=\"测试用例\"></a>测试用例</h2><p><a href=\"https://leetcode.cn/submissions/detail/398908470/testcase/\" target=\"_blank\" rel=\"noopener\">https://leetcode.cn/submissions/detail/398908470/testcase/</a></p>\n<h2 id=\"解法\"><a href=\"#解法\" class=\"headerlink\" title=\"解法\"></a>解法</h2><p>这道题的难点在于，怎么做到高性能，leetCode 给的测试用例最大的能到5w左右，性能不好会执行超时。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bonus = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n, leadership, operations</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 此时把每个人的上级、下级的关系静态化，而不是只记录直系领导和下属，是处于性能的考虑。</span></span><br><span class=\"line\">  <span class=\"comment\">// operations 传参中会多次要求输出，如果每一次输出时都临时遍历某员工的上级下级，成本是巨大的</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> memberMap = &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 1: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">     *  memberList: [], // 存储部门下所有的人</span></span><br><span class=\"line\"><span class=\"comment\">     *  leaderList: [], // 存储此人的领导们</span></span><br><span class=\"line\"><span class=\"comment\">     *  coin: 0, // 存储部门所有人获得的 coin 之和</span></span><br><span class=\"line\"><span class=\"comment\">     * &#125;</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  leadership.forEach(<span class=\"function\">(<span class=\"params\">[leader, member]</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!memberMap[leader])</span><br><span class=\"line\">      memberMap[leader] = &#123;</span><br><span class=\"line\">        memberList: [], <span class=\"comment\">// 可用 Set 也可Array，但执行次数多的情况下 Array 性能比 Set 好</span></span><br><span class=\"line\">        leaderList: [],</span><br><span class=\"line\">        coin: <span class=\"number\">0</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!memberMap[member])</span><br><span class=\"line\">      memberMap[member] = &#123;</span><br><span class=\"line\">        memberList: [], </span><br><span class=\"line\">        leaderList: [],</span><br><span class=\"line\">        coin: <span class=\"number\">0</span>,</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    memberMap[member].leaderList.push(leader);</span><br><span class=\"line\">    memberMap[leader].memberList.push(member);</span><br><span class=\"line\">    memberMap[leader].leaderList.forEach(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 成员的领导人数变更。领导的领导也是领导</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (memberMap[member].leaderList.indexOf(v) === <span class=\"number\">-1</span>) &#123; <span class=\"comment\">// indexOf 的性能比 some 的性能好</span></span><br><span class=\"line\">        memberMap[member].leaderList.push(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 领导们的部门人数变更</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (memberMap[v].memberList.indexOf(member) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        memberMap[v].memberList.push(member);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = [];</span><br><span class=\"line\">  operations.forEach(<span class=\"function\">(<span class=\"params\">[type, member, coin]</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 给成员发，该成员及领导们的部门 coin += coin</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memberMap[member].coin += coin;</span><br><span class=\"line\">      memberMap[member].leaderList.forEach(<span class=\"function\">(<span class=\"params\">v</span>) =&gt;</span> (memberMap[v].coin += +coin));</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> addCoin = coin * (memberMap[member].memberList.length + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 给成员及其下属发</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (type === <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 该成员及领导们的部门 coin += 人数 * coin</span></span><br><span class=\"line\">      memberMap[member].coin += addCoin;</span><br><span class=\"line\">      memberMap[member].leaderList.forEach(</span><br><span class=\"line\">        (v) =&gt;</span><br><span class=\"line\">          (memberMap[v].coin += addCoin)</span><br><span class=\"line\">      );</span><br><span class=\"line\">      <span class=\"comment\">// 下属们的部门 coin += 下属的部门人数 * coin</span></span><br><span class=\"line\">      memberMap[member].memberList.forEach(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">        memberMap[v].coin += coin * (memberMap[v].memberList.length + <span class=\"number\">1</span>)</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 返回部门 coin</span></span><br><span class=\"line\">    result.push(memberMap[member].coin % <span class=\"number\">1000000007</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.time(<span class=\"string\">'start'</span>);</span><br><span class=\"line\">bonus(<span class=\"number\">408</span>,</span><br><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">273</span>], [<span class=\"number\">1</span>, <span class=\"number\">217</span>], [<span class=\"number\">1</span>, <span class=\"number\">136</span>], [<span class=\"number\">1</span>, <span class=\"number\">211</span>], [<span class=\"number\">1</span>, <span class=\"number\">179</span>], [<span class=\"number\">283</span>, <span class=\"number\">293</span>], [<span class=\"number\">283</span>, <span class=\"number\">292</span>], [<span class=\"number\">283</span>, <span class=\"number\">227</span>], [<span class=\"number\">283</span>, <span class=\"number\">54</span>], [<span class=\"number\">283</span>, <span class=\"number\">404</span>], [<span class=\"number\">283</span>, <span class=\"number\">378</span>], [<span class=\"number\">283</span>, <span class=\"number\">243</span>], [<span class=\"number\">283</span>, <span class=\"number\">270</span>], [<span class=\"number\">283</span>, <span class=\"number\">46</span>], [<span class=\"number\">283</span>, <span class=\"number\">300</span>], [<span class=\"number\">52</span>, <span class=\"number\">376</span>], [<span class=\"number\">52</span>, <span class=\"number\">267</span>], [<span class=\"number\">52</span>, <span class=\"number\">71</span>], [<span class=\"number\">52</span>, <span class=\"number\">406</span>], [<span class=\"number\">273</span>, <span class=\"number\">9</span>], [<span class=\"number\">273</span>, <span class=\"number\">148</span>], [<span class=\"number\">273</span>, <span class=\"number\">51</span>], [<span class=\"number\">273</span>, <span class=\"number\">102</span>], [<span class=\"number\">217</span>, <span class=\"number\">110</span>], [<span class=\"number\">217</span>, <span class=\"number\">370</span>], [<span class=\"number\">217</span>, <span class=\"number\">125</span>], [<span class=\"number\">217</span>, <span class=\"number\">357</span>], [<span class=\"number\">136</span>, <span class=\"number\">360</span>], [<span class=\"number\">136</span>, <span class=\"number\">260</span>], [<span class=\"number\">136</span>, <span class=\"number\">196</span>], [<span class=\"number\">136</span>, <span class=\"number\">228</span>], [<span class=\"number\">136</span>, <span class=\"number\">103</span>], [<span class=\"number\">136</span>, <span class=\"number\">347</span>], [<span class=\"number\">136</span>, <span class=\"number\">384</span>], [<span class=\"number\">211</span>, <span class=\"number\">25</span>], [<span class=\"number\">179</span>, <span class=\"number\">3</span>], [<span class=\"number\">179</span>, <span class=\"number\">140</span>], [<span class=\"number\">179</span>, <span class=\"number\">56</span>], [<span class=\"number\">179</span>, <span class=\"number\">263</span>], [<span class=\"number\">179</span>, <span class=\"number\">231</span>], [<span class=\"number\">293</span>, <span class=\"number\">326</span>], [<span class=\"number\">293</span>, <span class=\"number\">121</span>], [<span class=\"number\">293</span>, <span class=\"number\">116</span>], [<span class=\"number\">293</span>, <span class=\"number\">21</span>], [<span class=\"number\">293</span>, <span class=\"number\">262</span>], [<span class=\"number\">293</span>, <span class=\"number\">369</span>], [<span class=\"number\">293</span>, <span class=\"number\">183</span>], [<span class=\"number\">292</span>, <span class=\"number\">75</span>], [<span class=\"number\">292</span>, <span class=\"number\">303</span>], [<span class=\"number\">292</span>, <span class=\"number\">330</span>], [<span class=\"number\">227</span>, <span class=\"number\">397</span>], [<span class=\"number\">227</span>, <span class=\"number\">35</span>], [<span class=\"number\">227</span>, <span class=\"number\">279</span>], [<span class=\"number\">227</span>, <span class=\"number\">345</span>], [<span class=\"number\">227</span>, <span class=\"number\">139</span>], [<span class=\"number\">227</span>, <span class=\"number\">391</span>], [<span class=\"number\">227</span>, <span class=\"number\">266</span>], [<span class=\"number\">54</span>, <span class=\"number\">16</span>], [<span class=\"number\">404</span>, <span class=\"number\">214</span>], [<span class=\"number\">404</span>, <span class=\"number\">184</span>], [<span class=\"number\">404</span>, <span class=\"number\">68</span>], [<span class=\"number\">404</span>, <span class=\"number\">27</span>], [<span class=\"number\">378</span>, <span class=\"number\">192</span>], [<span class=\"number\">378</span>, <span class=\"number\">87</span>], [<span class=\"number\">378</span>, <span class=\"number\">39</span>], [<span class=\"number\">378</span>, <span class=\"number\">386</span>], [<span class=\"number\">378</span>, <span class=\"number\">259</span>], [<span class=\"number\">243</span>, <span class=\"number\">94</span>], [<span class=\"number\">243</span>, <span class=\"number\">112</span>], [<span class=\"number\">243</span>, <span class=\"number\">99</span>], [<span class=\"number\">243</span>, <span class=\"number\">182</span>], [<span class=\"number\">243</span>, <span class=\"number\">29</span>], [<span class=\"number\">243</span>, <span class=\"number\">197</span>], [<span class=\"number\">270</span>, <span class=\"number\">23</span>], [<span class=\"number\">270</span>, <span class=\"number\">181</span>], [<span class=\"number\">270</span>, <span class=\"number\">297</span>], [<span class=\"number\">46</span>, <span class=\"number\">351</span>], [<span class=\"number\">46</span>, <span class=\"number\">362</span>], [<span class=\"number\">46</span>, <span class=\"number\">22</span>], [<span class=\"number\">46</span>, <span class=\"number\">61</span>], [<span class=\"number\">300</span>, <span class=\"number\">408</span>], [<span class=\"number\">376</span>, <span class=\"number\">332</span>], [<span class=\"number\">267</span>, <span class=\"number\">349</span>], [<span class=\"number\">267</span>, <span class=\"number\">80</span>], [<span class=\"number\">267</span>, <span class=\"number\">367</span>], [<span class=\"number\">267</span>, <span class=\"number\">226</span>], [<span class=\"number\">71</span>, <span class=\"number\">72</span>], [<span class=\"number\">71</span>, <span class=\"number\">389</span>], [<span class=\"number\">71</span>, <span class=\"number\">163</span>], [<span class=\"number\">71</span>, <span class=\"number\">100</span>], [<span class=\"number\">71</span>, <span class=\"number\">107</span>], [<span class=\"number\">71</span>, <span class=\"number\">92</span>], [<span class=\"number\">71</span>, <span class=\"number\">85</span>], [<span class=\"number\">406</span>, <span class=\"number\">353</span>], [<span class=\"number\">406</span>, <span class=\"number\">199</span>], [<span class=\"number\">406</span>, <span class=\"number\">257</span>], [<span class=\"number\">406</span>, <span class=\"number\">242</span>], [<span class=\"number\">406</span>, <span class=\"number\">305</span>], [<span class=\"number\">406</span>, <span class=\"number\">159</span>], [<span class=\"number\">406</span>, <span class=\"number\">77</span>], [<span class=\"number\">9</span>, <span class=\"number\">309</span>], [<span class=\"number\">148</span>, <span class=\"number\">401</span>], [<span class=\"number\">148</span>, <span class=\"number\">65</span>], [<span class=\"number\">148</span>, <span class=\"number\">218</span>], [<span class=\"number\">148</span>, <span class=\"number\">342</span>], [<span class=\"number\">148</span>, <span class=\"number\">331</span>], [<span class=\"number\">148</span>, <span class=\"number\">339</span>], [<span class=\"number\">51</span>, <span class=\"number\">290</span>], [<span class=\"number\">51</span>, <span class=\"number\">150</span>], [<span class=\"number\">51</span>, <span class=\"number\">60</span>], [<span class=\"number\">51</span>, <span class=\"number\">137</span>], [<span class=\"number\">51</span>, <span class=\"number\">160</span>], [<span class=\"number\">51</span>, <span class=\"number\">252</span>], [<span class=\"number\">51</span>, <span class=\"number\">364</span>], [<span class=\"number\">51</span>, <span class=\"number\">335</span>], [<span class=\"number\">51</span>, <span class=\"number\">343</span>], [<span class=\"number\">51</span>, <span class=\"number\">304</span>], [<span class=\"number\">102</span>, <span class=\"number\">180</span>], [<span class=\"number\">102</span>, <span class=\"number\">138</span>], [<span class=\"number\">110</span>, <span class=\"number\">74</span>], [<span class=\"number\">110</span>, <span class=\"number\">171</span>], [<span class=\"number\">110</span>, <span class=\"number\">390</span>], [<span class=\"number\">110</span>, <span class=\"number\">352</span>], [<span class=\"number\">110</span>, <span class=\"number\">37</span>], [<span class=\"number\">370</span>, <span class=\"number\">377</span>], [<span class=\"number\">370</span>, <span class=\"number\">358</span>], [<span class=\"number\">370</span>, <span class=\"number\">36</span>], [<span class=\"number\">370</span>, <span class=\"number\">272</span>], [<span class=\"number\">125</span>, <span class=\"number\">66</span>], [<span class=\"number\">125</span>, <span class=\"number\">301</span>], [<span class=\"number\">125</span>, <span class=\"number\">67</span>], [<span class=\"number\">125</span>, <span class=\"number\">239</span>], [<span class=\"number\">125</span>, <span class=\"number\">175</span>], [<span class=\"number\">357</span>, <span class=\"number\">12</span>], [<span class=\"number\">357</span>, <span class=\"number\">106</span>], [<span class=\"number\">357</span>, <span class=\"number\">282</span>], [<span class=\"number\">357</span>, <span class=\"number\">240</span>], [<span class=\"number\">360</span>, <span class=\"number\">144</span>], [<span class=\"number\">360</span>, <span class=\"number\">393</span>], [<span class=\"number\">360</span>, <span class=\"number\">317</span>], [<span class=\"number\">360</span>, <span class=\"number\">195</span>], [<span class=\"number\">260</span>, <span class=\"number\">264</span>], [<span class=\"number\">260</span>, <span class=\"number\">13</span>], [<span class=\"number\">260</span>, <span class=\"number\">281</span>], [<span class=\"number\">260</span>, <span class=\"number\">400</span>], [<span class=\"number\">260</span>, <span class=\"number\">212</span>], [<span class=\"number\">260</span>, <span class=\"number\">365</span>], [<span class=\"number\">260</span>, <span class=\"number\">402</span>], [<span class=\"number\">260</span>, <span class=\"number\">63</span>], [<span class=\"number\">260</span>, <span class=\"number\">255</span>], [<span class=\"number\">196</span>, <span class=\"number\">193</span>], [<span class=\"number\">196</span>, <span class=\"number\">338</span>], [<span class=\"number\">228</span>, <span class=\"number\">399</span>], [<span class=\"number\">228</span>, <span class=\"number\">202</span>], [<span class=\"number\">228</span>, <span class=\"number\">313</span>], [<span class=\"number\">228</span>, <span class=\"number\">392</span>], [<span class=\"number\">228</span>, <span class=\"number\">208</span>], [<span class=\"number\">228</span>, <span class=\"number\">38</span>], [<span class=\"number\">228</span>, <span class=\"number\">31</span>], [<span class=\"number\">103</span>, <span class=\"number\">203</span>], [<span class=\"number\">103</span>, <span class=\"number\">320</span>], [<span class=\"number\">103</span>, <span class=\"number\">254</span>], [<span class=\"number\">103</span>, <span class=\"number\">275</span>], [<span class=\"number\">103</span>, <span class=\"number\">34</span>], [<span class=\"number\">347</span>, <span class=\"number\">149</span>], [<span class=\"number\">347</span>, <span class=\"number\">222</span>], [<span class=\"number\">347</span>, <span class=\"number\">114</span>], [<span class=\"number\">347</span>, <span class=\"number\">157</span>], [<span class=\"number\">347</span>, <span class=\"number\">325</span>], [<span class=\"number\">347</span>, <span class=\"number\">6</span>], [<span class=\"number\">347</span>, <span class=\"number\">154</span>], [<span class=\"number\">347</span>, <span class=\"number\">250</span>], [<span class=\"number\">347</span>, <span class=\"number\">350</span>], [<span class=\"number\">384</span>, <span class=\"number\">93</span>], [<span class=\"number\">384</span>, <span class=\"number\">123</span>], [<span class=\"number\">384</span>, <span class=\"number\">374</span>], [<span class=\"number\">384</span>, <span class=\"number\">50</span>], [<span class=\"number\">25</span>, <span class=\"number\">285</span>], [<span class=\"number\">25</span>, <span class=\"number\">20</span>], [<span class=\"number\">25</span>, <span class=\"number\">288</span>], [<span class=\"number\">25</span>, <span class=\"number\">251</span>], [<span class=\"number\">25</span>, <span class=\"number\">185</span>], [<span class=\"number\">25</span>, <span class=\"number\">289</span>], [<span class=\"number\">3</span>, <span class=\"number\">241</span>], [<span class=\"number\">3</span>, <span class=\"number\">258</span>], [<span class=\"number\">3</span>, <span class=\"number\">43</span>], [<span class=\"number\">140</span>, <span class=\"number\">58</span>], [<span class=\"number\">140</span>, <span class=\"number\">329</span>], [<span class=\"number\">140</span>, <span class=\"number\">45</span>], [<span class=\"number\">140</span>, <span class=\"number\">287</span>], [<span class=\"number\">140</span>, <span class=\"number\">132</span>], [<span class=\"number\">140</span>, <span class=\"number\">170</span>], [<span class=\"number\">140</span>, <span class=\"number\">355</span>], [<span class=\"number\">140</span>, <span class=\"number\">311</span>], [<span class=\"number\">140</span>, <span class=\"number\">47</span>], [<span class=\"number\">140</span>, <span class=\"number\">168</span>], [<span class=\"number\">56</span>, <span class=\"number\">321</span>], [<span class=\"number\">56</span>, <span class=\"number\">388</span>], [<span class=\"number\">56</span>, <span class=\"number\">32</span>], [<span class=\"number\">56</span>, <span class=\"number\">302</span>], [<span class=\"number\">56</span>, <span class=\"number\">190</span>], [<span class=\"number\">56</span>, <span class=\"number\">48</span>], [<span class=\"number\">56</span>, <span class=\"number\">11</span>], [<span class=\"number\">263</span>, <span class=\"number\">96</span>], [<span class=\"number\">263</span>, <span class=\"number\">30</span>], [<span class=\"number\">263</span>, <span class=\"number\">24</span>], [<span class=\"number\">263</span>, <span class=\"number\">26</span>], [<span class=\"number\">231</span>, <span class=\"number\">229</span>], [<span class=\"number\">231</span>, <span class=\"number\">164</span>], [<span class=\"number\">231</span>, <span class=\"number\">128</span>], [<span class=\"number\">231</span>, <span class=\"number\">295</span>], [<span class=\"number\">231</span>, <span class=\"number\">230</span>], [<span class=\"number\">231</span>, <span class=\"number\">396</span>], [<span class=\"number\">231</span>, <span class=\"number\">81</span>], [<span class=\"number\">231</span>, <span class=\"number\">244</span>], [<span class=\"number\">231</span>, <span class=\"number\">276</span>], [<span class=\"number\">231</span>, <span class=\"number\">141</span>], [<span class=\"number\">326</span>, <span class=\"number\">134</span>], [<span class=\"number\">326</span>, <span class=\"number\">161</span>], [<span class=\"number\">326</span>, <span class=\"number\">97</span>], [<span class=\"number\">326</span>, <span class=\"number\">286</span>], [<span class=\"number\">326</span>, <span class=\"number\">88</span>], [<span class=\"number\">326</span>, <span class=\"number\">221</span>], [<span class=\"number\">326</span>, <span class=\"number\">405</span>], [<span class=\"number\">326</span>, <span class=\"number\">8</span>], [<span class=\"number\">326</span>, <span class=\"number\">156</span>], [<span class=\"number\">121</span>, <span class=\"number\">113</span>], [<span class=\"number\">121</span>, <span class=\"number\">15</span>], [<span class=\"number\">121</span>, <span class=\"number\">348</span>], [<span class=\"number\">121</span>, <span class=\"number\">104</span>], [<span class=\"number\">121</span>, <span class=\"number\">398</span>], [<span class=\"number\">121</span>, <span class=\"number\">91</span>], [<span class=\"number\">121</span>, <span class=\"number\">40</span>], [<span class=\"number\">121</span>, <span class=\"number\">64</span>], [<span class=\"number\">121</span>, <span class=\"number\">318</span>], [<span class=\"number\">121</span>, <span class=\"number\">111</span>], [<span class=\"number\">116</span>, <span class=\"number\">271</span>], [<span class=\"number\">21</span>, <span class=\"number\">83</span>], [<span class=\"number\">21</span>, <span class=\"number\">55</span>], [<span class=\"number\">262</span>, <span class=\"number\">368</span>], [<span class=\"number\">262</span>, <span class=\"number\">336</span>], [<span class=\"number\">262</span>, <span class=\"number\">249</span>], [<span class=\"number\">262</span>, <span class=\"number\">129</span>], [<span class=\"number\">262</span>, <span class=\"number\">145</span>], [<span class=\"number\">262</span>, <span class=\"number\">337</span>], [<span class=\"number\">262</span>, <span class=\"number\">234</span>], [<span class=\"number\">262</span>, <span class=\"number\">79</span>], [<span class=\"number\">369</span>, <span class=\"number\">90</span>], [<span class=\"number\">369</span>, <span class=\"number\">122</span>], [<span class=\"number\">369</span>, <span class=\"number\">395</span>], [<span class=\"number\">369</span>, <span class=\"number\">108</span>], [<span class=\"number\">369</span>, <span class=\"number\">341</span>], [<span class=\"number\">369</span>, <span class=\"number\">334</span>], [<span class=\"number\">369</span>, <span class=\"number\">316</span>], [<span class=\"number\">369</span>, <span class=\"number\">69</span>], [<span class=\"number\">369</span>, <span class=\"number\">278</span>], [<span class=\"number\">183</span>, <span class=\"number\">151</span>], [<span class=\"number\">183</span>, <span class=\"number\">315</span>], [<span class=\"number\">183</span>, <span class=\"number\">17</span>], [<span class=\"number\">183</span>, <span class=\"number\">178</span>], [<span class=\"number\">183</span>, <span class=\"number\">274</span>], [<span class=\"number\">183</span>, <span class=\"number\">269</span>], [<span class=\"number\">75</span>, <span class=\"number\">200</span>], [<span class=\"number\">75</span>, <span class=\"number\">131</span>], [<span class=\"number\">75</span>, <span class=\"number\">126</span>], [<span class=\"number\">75</span>, <span class=\"number\">19</span>], [<span class=\"number\">75</span>, <span class=\"number\">359</span>], [<span class=\"number\">75</span>, <span class=\"number\">70</span>], [<span class=\"number\">75</span>, <span class=\"number\">133</span>], [<span class=\"number\">75</span>, <span class=\"number\">117</span>], [<span class=\"number\">75</span>, <span class=\"number\">33</span>], [<span class=\"number\">75</span>, <span class=\"number\">206</span>], [<span class=\"number\">303</span>, <span class=\"number\">223</span>], [<span class=\"number\">303</span>, <span class=\"number\">324</span>], [<span class=\"number\">303</span>, <span class=\"number\">101</span>], [<span class=\"number\">303</span>, <span class=\"number\">314</span>], [<span class=\"number\">303</span>, <span class=\"number\">135</span>], [<span class=\"number\">303</span>, <span class=\"number\">146</span>], [<span class=\"number\">330</span>, <span class=\"number\">191</span>], [<span class=\"number\">330</span>, <span class=\"number\">194</span>], [<span class=\"number\">330</span>, <span class=\"number\">253</span>], [<span class=\"number\">330</span>, <span class=\"number\">307</span>], [<span class=\"number\">330</span>, <span class=\"number\">225</span>], [<span class=\"number\">330</span>, <span class=\"number\">299</span>], [<span class=\"number\">330</span>, <span class=\"number\">382</span>], [<span class=\"number\">330</span>, <span class=\"number\">82</span>], [<span class=\"number\">397</span>, <span class=\"number\">167</span>], [<span class=\"number\">397</span>, <span class=\"number\">2</span>], [<span class=\"number\">397</span>, <span class=\"number\">308</span>], [<span class=\"number\">397</span>, <span class=\"number\">246</span>], [<span class=\"number\">397</span>, <span class=\"number\">245</span>], [<span class=\"number\">397</span>, <span class=\"number\">265</span>], [<span class=\"number\">35</span>, <span class=\"number\">261</span>], [<span class=\"number\">35</span>, <span class=\"number\">328</span>], [<span class=\"number\">35</span>, <span class=\"number\">224</span>], [<span class=\"number\">35</span>, <span class=\"number\">296</span>], [<span class=\"number\">35</span>, <span class=\"number\">340</span>], [<span class=\"number\">35</span>, <span class=\"number\">186</span>], [<span class=\"number\">35</span>, <span class=\"number\">280</span>], [<span class=\"number\">279</span>, <span class=\"number\">210</span>], [<span class=\"number\">279</span>, <span class=\"number\">4</span>], [<span class=\"number\">279</span>, <span class=\"number\">268</span>], [<span class=\"number\">279</span>, <span class=\"number\">173</span>], [<span class=\"number\">279</span>, <span class=\"number\">284</span>], [<span class=\"number\">279</span>, <span class=\"number\">247</span>], [<span class=\"number\">279</span>, <span class=\"number\">119</span>], [<span class=\"number\">279</span>, <span class=\"number\">89</span>], [<span class=\"number\">279</span>, <span class=\"number\">205</span>], [<span class=\"number\">345</span>, <span class=\"number\">10</span>], [<span class=\"number\">345</span>, <span class=\"number\">124</span>], [<span class=\"number\">345</span>, <span class=\"number\">366</span>], [<span class=\"number\">345</span>, <span class=\"number\">7</span>], [<span class=\"number\">345</span>, <span class=\"number\">98</span>], [<span class=\"number\">345</span>, <span class=\"number\">209</span>], [<span class=\"number\">345</span>, <span class=\"number\">394</span>], [<span class=\"number\">345</span>, <span class=\"number\">385</span>], [<span class=\"number\">345</span>, <span class=\"number\">188</span>], [<span class=\"number\">345</span>, <span class=\"number\">166</span>], [<span class=\"number\">139</span>, <span class=\"number\">153</span>], [<span class=\"number\">139</span>, <span class=\"number\">327</span>], [<span class=\"number\">139</span>, <span class=\"number\">127</span>], [<span class=\"number\">139</span>, <span class=\"number\">155</span>], [<span class=\"number\">139</span>, <span class=\"number\">312</span>], [<span class=\"number\">391</span>, <span class=\"number\">235</span>], [<span class=\"number\">391</span>, <span class=\"number\">76</span>], [<span class=\"number\">391</span>, <span class=\"number\">381</span>], [<span class=\"number\">266</span>, <span class=\"number\">219</span>], [<span class=\"number\">266</span>, <span class=\"number\">5</span>], [<span class=\"number\">266</span>, <span class=\"number\">361</span>], [<span class=\"number\">266</span>, <span class=\"number\">120</span>], [<span class=\"number\">266</span>, <span class=\"number\">344</span>], [<span class=\"number\">266</span>, <span class=\"number\">105</span>], [<span class=\"number\">266</span>, <span class=\"number\">371</span>], [<span class=\"number\">266</span>, <span class=\"number\">165</span>], [<span class=\"number\">266</span>, <span class=\"number\">323</span>], [<span class=\"number\">16</span>, <span class=\"number\">59</span>], [<span class=\"number\">16</span>, <span class=\"number\">237</span>], [<span class=\"number\">16</span>, <span class=\"number\">291</span>], [<span class=\"number\">16</span>, <span class=\"number\">109</span>], [<span class=\"number\">214</span>, <span class=\"number\">383</span>], [<span class=\"number\">214</span>, <span class=\"number\">142</span>], [<span class=\"number\">214</span>, <span class=\"number\">220</span>], [<span class=\"number\">214</span>, <span class=\"number\">215</span>], [<span class=\"number\">184</span>, <span class=\"number\">78</span>], [<span class=\"number\">184</span>, <span class=\"number\">238</span>], [<span class=\"number\">184</span>, <span class=\"number\">57</span>], [<span class=\"number\">68</span>, <span class=\"number\">204</span>], [<span class=\"number\">27</span>, <span class=\"number\">356</span>], [<span class=\"number\">27</span>, <span class=\"number\">322</span>], [<span class=\"number\">27</span>, <span class=\"number\">62</span>], [<span class=\"number\">27</span>, <span class=\"number\">162</span>], [<span class=\"number\">27</span>, <span class=\"number\">407</span>], [<span class=\"number\">27</span>, <span class=\"number\">14</span>], [<span class=\"number\">27</span>, <span class=\"number\">152</span>], [<span class=\"number\">27</span>, <span class=\"number\">86</span>], [<span class=\"number\">27</span>, <span class=\"number\">84</span>], [<span class=\"number\">27</span>, <span class=\"number\">95</span>], [<span class=\"number\">192</span>, <span class=\"number\">42</span>], [<span class=\"number\">87</span>, <span class=\"number\">115</span>], [<span class=\"number\">87</span>, <span class=\"number\">403</span>], [<span class=\"number\">87</span>, <span class=\"number\">118</span>], [<span class=\"number\">87</span>, <span class=\"number\">189</span>], [<span class=\"number\">87</span>, <span class=\"number\">28</span>], [<span class=\"number\">87</span>, <span class=\"number\">277</span>], [<span class=\"number\">87</span>, <span class=\"number\">147</span>], [<span class=\"number\">87</span>, <span class=\"number\">49</span>], [<span class=\"number\">39</span>, <span class=\"number\">73</span>], [<span class=\"number\">386</span>, <span class=\"number\">213</span>], [<span class=\"number\">386</span>, <span class=\"number\">387</span>], [<span class=\"number\">386</span>, <span class=\"number\">306</span>], [<span class=\"number\">386</span>, <span class=\"number\">346</span>], [<span class=\"number\">386</span>, <span class=\"number\">143</span>], [<span class=\"number\">386</span>, <span class=\"number\">363</span>], [<span class=\"number\">386</span>, <span class=\"number\">41</span>], [<span class=\"number\">386</span>, <span class=\"number\">373</span>], [<span class=\"number\">259</span>, <span class=\"number\">216</span>], [<span class=\"number\">259</span>, <span class=\"number\">372</span>], [<span class=\"number\">259</span>, <span class=\"number\">169</span>], [<span class=\"number\">259</span>, <span class=\"number\">248</span>], [<span class=\"number\">259</span>, <span class=\"number\">354</span>], [<span class=\"number\">259</span>, <span class=\"number\">53</span>], [<span class=\"number\">259</span>, <span class=\"number\">44</span>], [<span class=\"number\">259</span>, <span class=\"number\">380</span>], [<span class=\"number\">259</span>, <span class=\"number\">256</span>], [<span class=\"number\">94</span>, <span class=\"number\">333</span>], [<span class=\"number\">94</span>, <span class=\"number\">172</span>], [<span class=\"number\">94</span>, <span class=\"number\">298</span>], [<span class=\"number\">94</span>, <span class=\"number\">18</span>], [<span class=\"number\">94</span>, <span class=\"number\">232</span>], [<span class=\"number\">94</span>, <span class=\"number\">158</span>], [<span class=\"number\">94</span>, <span class=\"number\">207</span>], [<span class=\"number\">94</span>, <span class=\"number\">236</span>], [<span class=\"number\">112</span>, <span class=\"number\">310</span>], [<span class=\"number\">112</span>, <span class=\"number\">130</span>], [<span class=\"number\">112</span>, <span class=\"number\">319</span>], [<span class=\"number\">112</span>, <span class=\"number\">174</span>], [<span class=\"number\">99</span>, <span class=\"number\">177</span>], [<span class=\"number\">99</span>, <span class=\"number\">233</span>], [<span class=\"number\">99</span>, <span class=\"number\">187</span>], [<span class=\"number\">99</span>, <span class=\"number\">198</span>], [<span class=\"number\">99</span>, <span class=\"number\">375</span>], [<span class=\"number\">99</span>, <span class=\"number\">201</span>], [<span class=\"number\">99</span>, <span class=\"number\">176</span>], [<span class=\"number\">99</span>, <span class=\"number\">294</span>], [<span class=\"number\">99</span>, <span class=\"number\">379</span>]],</span><br><span class=\"line\">[[<span class=\"number\">1</span>, <span class=\"number\">201</span>, <span class=\"number\">26</span>], [<span class=\"number\">1</span>, <span class=\"number\">114</span>, <span class=\"number\">22</span>], [<span class=\"number\">2</span>, <span class=\"number\">366</span>, <span class=\"number\">42</span>], [<span class=\"number\">2</span>, <span class=\"number\">116</span>, <span class=\"number\">22</span>], [<span class=\"number\">1</span>, <span class=\"number\">239</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">38</span>], [<span class=\"number\">1</span>, <span class=\"number\">50</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">159</span>, <span class=\"number\">45</span>], [<span class=\"number\">1</span>, <span class=\"number\">242</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">338</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">221</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">268</span>, <span class=\"number\">21</span>], [<span class=\"number\">3</span>, <span class=\"number\">186</span>], [<span class=\"number\">1</span>, <span class=\"number\">171</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">41</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">84</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">210</span>, <span class=\"number\">30</span>], [<span class=\"number\">2</span>, <span class=\"number\">109</span>, <span class=\"number\">28</span>], [<span class=\"number\">2</span>, <span class=\"number\">164</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">40</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">129</span>, <span class=\"number\">30</span>], [<span class=\"number\">3</span>, <span class=\"number\">268</span>], [<span class=\"number\">2</span>, <span class=\"number\">163</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">345</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">91</span>, <span class=\"number\">13</span>], [<span class=\"number\">2</span>, <span class=\"number\">16</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">304</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">387</span>, <span class=\"number\">8</span>], [<span class=\"number\">2</span>, <span class=\"number\">296</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">362</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">177</span>, <span class=\"number\">37</span>], [<span class=\"number\">1</span>, <span class=\"number\">11</span>, <span class=\"number\">50</span>], [<span class=\"number\">1</span>, <span class=\"number\">372</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">268</span>], [<span class=\"number\">1</span>, <span class=\"number\">339</span>, <span class=\"number\">43</span>], [<span class=\"number\">2</span>, <span class=\"number\">353</span>, <span class=\"number\">45</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">19</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">125</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">160</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">98</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">108</span>, <span class=\"number\">41</span>], [<span class=\"number\">3</span>, <span class=\"number\">245</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">45</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">132</span>, <span class=\"number\">49</span>], [<span class=\"number\">2</span>, <span class=\"number\">135</span>, <span class=\"number\">32</span>], [<span class=\"number\">3</span>, <span class=\"number\">402</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">234</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">80</span>, <span class=\"number\">50</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">233</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">269</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">388</span>, <span class=\"number\">45</span>], [<span class=\"number\">2</span>, <span class=\"number\">139</span>, <span class=\"number\">40</span>], [<span class=\"number\">2</span>, <span class=\"number\">118</span>, <span class=\"number\">17</span>], [<span class=\"number\">2</span>, <span class=\"number\">329</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">200</span>, <span class=\"number\">27</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">367</span>, <span class=\"number\">32</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">314</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">50</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">320</span>, <span class=\"number\">25</span>], [<span class=\"number\">3</span>, <span class=\"number\">154</span>], [<span class=\"number\">1</span>, <span class=\"number\">270</span>, <span class=\"number\">48</span>], [<span class=\"number\">1</span>, <span class=\"number\">213</span>, <span class=\"number\">30</span>], [<span class=\"number\">2</span>, <span class=\"number\">297</span>, <span class=\"number\">12</span>], [<span class=\"number\">2</span>, <span class=\"number\">404</span>, <span class=\"number\">20</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">291</span>, <span class=\"number\">31</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">278</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">244</span>, <span class=\"number\">45</span>], [<span class=\"number\">1</span>, <span class=\"number\">96</span>, <span class=\"number\">3</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">339</span>, <span class=\"number\">49</span>], [<span class=\"number\">1</span>, <span class=\"number\">131</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">75</span>, <span class=\"number\">9</span>], [<span class=\"number\">1</span>, <span class=\"number\">80</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">264</span>], [<span class=\"number\">1</span>, <span class=\"number\">69</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">394</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">17</span>, <span class=\"number\">16</span>], [<span class=\"number\">1</span>, <span class=\"number\">290</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">95</span>, <span class=\"number\">35</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">361</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">195</span>, <span class=\"number\">18</span>], [<span class=\"number\">1</span>, <span class=\"number\">63</span>, <span class=\"number\">15</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">309</span>, <span class=\"number\">8</span>], [<span class=\"number\">2</span>, <span class=\"number\">368</span>, <span class=\"number\">28</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">311</span>, <span class=\"number\">48</span>], [<span class=\"number\">3</span>, <span class=\"number\">125</span>], [<span class=\"number\">1</span>, <span class=\"number\">382</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">225</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">309</span>, <span class=\"number\">24</span>], [<span class=\"number\">3</span>, <span class=\"number\">253</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">137</span>, <span class=\"number\">26</span>], [<span class=\"number\">3</span>, <span class=\"number\">269</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">346</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">340</span>, <span class=\"number\">19</span>], [<span class=\"number\">1</span>, <span class=\"number\">105</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">303</span>, <span class=\"number\">25</span>], [<span class=\"number\">1</span>, <span class=\"number\">376</span>, <span class=\"number\">30</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">275</span>, <span class=\"number\">36</span>], [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">190</span>, <span class=\"number\">36</span>], [<span class=\"number\">1</span>, <span class=\"number\">312</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">366</span>], [<span class=\"number\">1</span>, <span class=\"number\">248</span>, <span class=\"number\">24</span>], [<span class=\"number\">1</span>, <span class=\"number\">360</span>, <span class=\"number\">41</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">367</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">209</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">255</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">135</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">57</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">221</span>], [<span class=\"number\">1</span>, <span class=\"number\">112</span>, <span class=\"number\">47</span>], [<span class=\"number\">2</span>, <span class=\"number\">42</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">87</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">309</span>, <span class=\"number\">28</span>], [<span class=\"number\">1</span>, <span class=\"number\">33</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">196</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">314</span>], [<span class=\"number\">1</span>, <span class=\"number\">164</span>, <span class=\"number\">12</span>], [<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">31</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">80</span>, <span class=\"number\">40</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">212</span>, <span class=\"number\">16</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">50</span>, <span class=\"number\">43</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">14</span>, <span class=\"number\">42</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">404</span>, <span class=\"number\">32</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">44</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">70</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">147</span>, <span class=\"number\">32</span>], [<span class=\"number\">2</span>, <span class=\"number\">260</span>, <span class=\"number\">28</span>], [<span class=\"number\">1</span>, <span class=\"number\">144</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">329</span>, <span class=\"number\">20</span>], [<span class=\"number\">1</span>, <span class=\"number\">45</span>, <span class=\"number\">13</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">340</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">14</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">288</span>, <span class=\"number\">31</span>], [<span class=\"number\">1</span>, <span class=\"number\">262</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">145</span>, <span class=\"number\">42</span>], [<span class=\"number\">2</span>, <span class=\"number\">303</span>, <span class=\"number\">24</span>], [<span class=\"number\">1</span>, <span class=\"number\">392</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">295</span>, <span class=\"number\">24</span>], [<span class=\"number\">2</span>, <span class=\"number\">213</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">368</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">228</span>, <span class=\"number\">14</span>], [<span class=\"number\">1</span>, <span class=\"number\">375</span>, <span class=\"number\">47</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">161</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">64</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">102</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">251</span>, <span class=\"number\">21</span>], [<span class=\"number\">3</span>, <span class=\"number\">298</span>], [<span class=\"number\">1</span>, <span class=\"number\">223</span>, <span class=\"number\">24</span>], [<span class=\"number\">2</span>, <span class=\"number\">297</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">99</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">395</span>, <span class=\"number\">21</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">221</span>, <span class=\"number\">50</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">116</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">246</span>, <span class=\"number\">24</span>], [<span class=\"number\">1</span>, <span class=\"number\">233</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">318</span>, <span class=\"number\">5</span>], [<span class=\"number\">2</span>, <span class=\"number\">63</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">142</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">367</span>, <span class=\"number\">38</span>], [<span class=\"number\">2</span>, <span class=\"number\">193</span>, <span class=\"number\">47</span>], [<span class=\"number\">1</span>, <span class=\"number\">34</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">302</span>, <span class=\"number\">25</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">238</span>, <span class=\"number\">13</span>], [<span class=\"number\">2</span>, <span class=\"number\">372</span>, <span class=\"number\">19</span>], [<span class=\"number\">3</span>, <span class=\"number\">311</span>], [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">14</span>], [<span class=\"number\">2</span>, <span class=\"number\">200</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">160</span>, <span class=\"number\">40</span>], [<span class=\"number\">2</span>, <span class=\"number\">242</span>, <span class=\"number\">30</span>], [<span class=\"number\">1</span>, <span class=\"number\">273</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">375</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">66</span>, <span class=\"number\">15</span>], [<span class=\"number\">1</span>, <span class=\"number\">103</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">400</span>, <span class=\"number\">48</span>], [<span class=\"number\">2</span>, <span class=\"number\">327</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">379</span>, <span class=\"number\">25</span>], [<span class=\"number\">2</span>, <span class=\"number\">164</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">358</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">356</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">175</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">261</span>, <span class=\"number\">37</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">155</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">214</span>, <span class=\"number\">9</span>], [<span class=\"number\">1</span>, <span class=\"number\">154</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">12</span>, <span class=\"number\">22</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">273</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">364</span>, <span class=\"number\">38</span>], [<span class=\"number\">2</span>, <span class=\"number\">199</span>, <span class=\"number\">30</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">70</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">275</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">373</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">260</span>, <span class=\"number\">2</span>], [<span class=\"number\">2</span>, <span class=\"number\">31</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">326</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">244</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">323</span>], [<span class=\"number\">2</span>, <span class=\"number\">209</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">163</span>, <span class=\"number\">5</span>], [<span class=\"number\">1</span>, <span class=\"number\">131</span>, <span class=\"number\">45</span>], [<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>], [<span class=\"number\">2</span>, <span class=\"number\">311</span>, <span class=\"number\">34</span>], [<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">35</span>], [<span class=\"number\">1</span>, <span class=\"number\">78</span>, <span class=\"number\">49</span>], [<span class=\"number\">2</span>, <span class=\"number\">342</span>, <span class=\"number\">32</span>], [<span class=\"number\">2</span>, <span class=\"number\">231</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">124</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">85</span>, <span class=\"number\">30</span>], [<span class=\"number\">2</span>, <span class=\"number\">274</span>, <span class=\"number\">16</span>], [<span class=\"number\">1</span>, <span class=\"number\">28</span>, <span class=\"number\">39</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">156</span>, <span class=\"number\">28</span>], [<span class=\"number\">3</span>, <span class=\"number\">54</span>], [<span class=\"number\">1</span>, <span class=\"number\">100</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">43</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">85</span>, <span class=\"number\">3</span>], [<span class=\"number\">3</span>, <span class=\"number\">149</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">187</span>], [<span class=\"number\">2</span>, <span class=\"number\">107</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">374</span>, <span class=\"number\">9</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">365</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">89</span>, <span class=\"number\">27</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">145</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">220</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">116</span>, <span class=\"number\">8</span>], [<span class=\"number\">1</span>, <span class=\"number\">94</span>, <span class=\"number\">26</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">371</span>], [<span class=\"number\">2</span>, <span class=\"number\">185</span>, <span class=\"number\">29</span>], [<span class=\"number\">1</span>, <span class=\"number\">93</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">203</span>, <span class=\"number\">36</span>], [<span class=\"number\">2</span>, <span class=\"number\">181</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">313</span>, <span class=\"number\">14</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">191</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">206</span>, <span class=\"number\">6</span>], [<span class=\"number\">3</span>, <span class=\"number\">235</span>], [<span class=\"number\">1</span>, <span class=\"number\">56</span>, <span class=\"number\">31</span>], [<span class=\"number\">2</span>, <span class=\"number\">361</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">244</span>, <span class=\"number\">27</span>], [<span class=\"number\">2</span>, <span class=\"number\">241</span>, <span class=\"number\">12</span>], [<span class=\"number\">1</span>, <span class=\"number\">214</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">358</span>, <span class=\"number\">20</span>], [<span class=\"number\">1</span>, <span class=\"number\">340</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">126</span>, <span class=\"number\">18</span>], [<span class=\"number\">2</span>, <span class=\"number\">101</span>, <span class=\"number\">44</span>], [<span class=\"number\">1</span>, <span class=\"number\">23</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">323</span>, <span class=\"number\">24</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">301</span>, <span class=\"number\">12</span>], [<span class=\"number\">2</span>, <span class=\"number\">224</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">24</span>, <span class=\"number\">26</span>], [<span class=\"number\">2</span>, <span class=\"number\">326</span>, <span class=\"number\">50</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">177</span>, <span class=\"number\">37</span>], [<span class=\"number\">1</span>, <span class=\"number\">240</span>, <span class=\"number\">41</span>], [<span class=\"number\">1</span>, <span class=\"number\">320</span>, <span class=\"number\">12</span>], [<span class=\"number\">3</span>, <span class=\"number\">239</span>], [<span class=\"number\">2</span>, <span class=\"number\">369</span>, <span class=\"number\">31</span>], [<span class=\"number\">1</span>, <span class=\"number\">372</span>, <span class=\"number\">19</span>], [<span class=\"number\">2</span>, <span class=\"number\">179</span>, <span class=\"number\">23</span>], [<span class=\"number\">2</span>, <span class=\"number\">180</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">170</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">252</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">42</span>, <span class=\"number\">39</span>], [<span class=\"number\">2</span>, <span class=\"number\">124</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">263</span>, <span class=\"number\">19</span>], [<span class=\"number\">1</span>, <span class=\"number\">244</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">84</span>, <span class=\"number\">37</span>], [<span class=\"number\">1</span>, <span class=\"number\">187</span>, <span class=\"number\">8</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">175</span>, <span class=\"number\">43</span>], [<span class=\"number\">1</span>, <span class=\"number\">203</span>, <span class=\"number\">38</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">19</span>, <span class=\"number\">29</span>], [<span class=\"number\">1</span>, <span class=\"number\">301</span>, <span class=\"number\">19</span>], [<span class=\"number\">3</span>, <span class=\"number\">41</span>], [<span class=\"number\">3</span>, <span class=\"number\">46</span>], [<span class=\"number\">2</span>, <span class=\"number\">26</span>, <span class=\"number\">21</span>], [<span class=\"number\">1</span>, <span class=\"number\">325</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">343</span>, <span class=\"number\">47</span>], [<span class=\"number\">2</span>, <span class=\"number\">81</span>, <span class=\"number\">49</span>], [<span class=\"number\">2</span>, <span class=\"number\">395</span>, <span class=\"number\">29</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">114</span>, <span class=\"number\">47</span>], [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">38</span>], [<span class=\"number\">1</span>, <span class=\"number\">219</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">154</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">188</span>, <span class=\"number\">6</span>], [<span class=\"number\">1</span>, <span class=\"number\">116</span>, <span class=\"number\">25</span>], [<span class=\"number\">2</span>, <span class=\"number\">385</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">289</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">295</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">140</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">248</span>, <span class=\"number\">40</span>], [<span class=\"number\">1</span>, <span class=\"number\">379</span>, <span class=\"number\">18</span>], [<span class=\"number\">1</span>, <span class=\"number\">224</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">63</span>, <span class=\"number\">24</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">207</span>, <span class=\"number\">13</span>], [<span class=\"number\">1</span>, <span class=\"number\">333</span>, <span class=\"number\">6</span>], [<span class=\"number\">2</span>, <span class=\"number\">332</span>, <span class=\"number\">20</span>], [<span class=\"number\">3</span>, <span class=\"number\">222</span>], [<span class=\"number\">2</span>, <span class=\"number\">52</span>, <span class=\"number\">14</span>], [<span class=\"number\">1</span>, <span class=\"number\">158</span>, <span class=\"number\">4</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">271</span>, <span class=\"number\">35</span>], [<span class=\"number\">1</span>, <span class=\"number\">75</span>, <span class=\"number\">10</span>], [<span class=\"number\">2</span>, <span class=\"number\">322</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">315</span>, <span class=\"number\">3</span>], [<span class=\"number\">2</span>, <span class=\"number\">26</span>, <span class=\"number\">7</span>], [<span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>], [<span class=\"number\">2</span>, <span class=\"number\">401</span>, <span class=\"number\">50</span>], [<span class=\"number\">1</span>, <span class=\"number\">9</span>, <span class=\"number\">18</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">28</span>, <span class=\"number\">39</span>], [<span class=\"number\">1</span>, <span class=\"number\">185</span>, <span class=\"number\">3</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">162</span>, <span class=\"number\">20</span>], [<span class=\"number\">1</span>, <span class=\"number\">247</span>, <span class=\"number\">5</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">308</span>, <span class=\"number\">9</span>], [<span class=\"number\">2</span>, <span class=\"number\">103</span>, <span class=\"number\">33</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">344</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">2</span>, <span class=\"number\">124</span>, <span class=\"number\">29</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">122</span>, <span class=\"number\">23</span>], [<span class=\"number\">1</span>, <span class=\"number\">381</span>, <span class=\"number\">37</span>], [<span class=\"number\">2</span>, <span class=\"number\">185</span>, <span class=\"number\">35</span>], [<span class=\"number\">2</span>, <span class=\"number\">285</span>, <span class=\"number\">5</span>], [<span class=\"number\">2</span>, <span class=\"number\">190</span>, <span class=\"number\">25</span>], [<span class=\"number\">2</span>, <span class=\"number\">122</span>, <span class=\"number\">25</span>], [<span class=\"number\">1</span>, <span class=\"number\">293</span>, <span class=\"number\">38</span>], [<span class=\"number\">1</span>, <span class=\"number\">75</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">138</span>, <span class=\"number\">15</span>], [<span class=\"number\">1</span>, <span class=\"number\">202</span>, <span class=\"number\">9</span>], [<span class=\"number\">1</span>, <span class=\"number\">121</span>, <span class=\"number\">42</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">83</span>, <span class=\"number\">23</span>], [<span class=\"number\">3</span>, <span class=\"number\">325</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">350</span>, <span class=\"number\">41</span>], [<span class=\"number\">2</span>, <span class=\"number\">337</span>, <span class=\"number\">50</span>], [<span class=\"number\">2</span>, <span class=\"number\">198</span>, <span class=\"number\">19</span>], [<span class=\"number\">1</span>, <span class=\"number\">221</span>, <span class=\"number\">32</span>], [<span class=\"number\">1</span>, <span class=\"number\">309</span>, <span class=\"number\">4</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">1</span>, <span class=\"number\">310</span>, <span class=\"number\">44</span>], [<span class=\"number\">2</span>, <span class=\"number\">22</span>, <span class=\"number\">34</span>], [<span class=\"number\">1</span>, <span class=\"number\">247</span>, <span class=\"number\">29</span>], [<span class=\"number\">2</span>, <span class=\"number\">187</span>, <span class=\"number\">22</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">1</span>, <span class=\"number\">366</span>, <span class=\"number\">16</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">8</span>, <span class=\"number\">36</span>], [<span class=\"number\">2</span>, <span class=\"number\">83</span>, <span class=\"number\">18</span>], [<span class=\"number\">1</span>, <span class=\"number\">134</span>, <span class=\"number\">36</span>], [<span class=\"number\">2</span>, <span class=\"number\">291</span>, <span class=\"number\">27</span>], [<span class=\"number\">2</span>, <span class=\"number\">352</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">281</span>, <span class=\"number\">27</span>], [<span class=\"number\">1</span>, <span class=\"number\">397</span>, <span class=\"number\">15</span>], [<span class=\"number\">2</span>, <span class=\"number\">215</span>, <span class=\"number\">40</span>], [<span class=\"number\">2</span>, <span class=\"number\">190</span>, <span class=\"number\">4</span>], [<span class=\"number\">2</span>, <span class=\"number\">98</span>, <span class=\"number\">17</span>], [<span class=\"number\">3</span>, <span class=\"number\">331</span>], [<span class=\"number\">2</span>, <span class=\"number\">21</span>, <span class=\"number\">32</span>], [<span class=\"number\">1</span>, <span class=\"number\">56</span>, <span class=\"number\">10</span>], [<span class=\"number\">1</span>, <span class=\"number\">388</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">225</span>, <span class=\"number\">3</span>], [<span class=\"number\">1</span>, <span class=\"number\">225</span>, <span class=\"number\">42</span>], [<span class=\"number\">1</span>, <span class=\"number\">185</span>, <span class=\"number\">18</span>], [<span class=\"number\">3</span>, <span class=\"number\">347</span>], [<span class=\"number\">1</span>, <span class=\"number\">184</span>, <span class=\"number\">23</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">137</span>, <span class=\"number\">30</span>], [<span class=\"number\">1</span>, <span class=\"number\">187</span>, <span class=\"number\">39</span>], [<span class=\"number\">1</span>, <span class=\"number\">249</span>, <span class=\"number\">46</span>], [<span class=\"number\">1</span>, <span class=\"number\">137</span>, <span class=\"number\">16</span>], [<span class=\"number\">1</span>, <span class=\"number\">160</span>, <span class=\"number\">7</span>], [<span class=\"number\">2</span>, <span class=\"number\">148</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">384</span>, <span class=\"number\">13</span>], [<span class=\"number\">2</span>, <span class=\"number\">389</span>, <span class=\"number\">27</span>], [<span class=\"number\">2</span>, <span class=\"number\">308</span>, <span class=\"number\">16</span>], [<span class=\"number\">2</span>, <span class=\"number\">384</span>, <span class=\"number\">39</span>], [<span class=\"number\">2</span>, <span class=\"number\">235</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">117</span>, <span class=\"number\">6</span>], [<span class=\"number\">2</span>, <span class=\"number\">222</span>, <span class=\"number\">11</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">249</span>, <span class=\"number\">5</span>], [<span class=\"number\">2</span>, <span class=\"number\">321</span>, <span class=\"number\">28</span>], [<span class=\"number\">2</span>, <span class=\"number\">365</span>, <span class=\"number\">14</span>], [<span class=\"number\">2</span>, <span class=\"number\">2</span>, <span class=\"number\">34</span>], [<span class=\"number\">3</span>, <span class=\"number\">362</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">2</span>, <span class=\"number\">93</span>, <span class=\"number\">25</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">359</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">2</span>, <span class=\"number\">408</span>, <span class=\"number\">4</span>], [<span class=\"number\">1</span>, <span class=\"number\">193</span>, <span class=\"number\">45</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">97</span>, <span class=\"number\">11</span>], [<span class=\"number\">1</span>, <span class=\"number\">75</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">3</span>, <span class=\"number\">283</span>], [<span class=\"number\">3</span>, <span class=\"number\">273</span>], [<span class=\"number\">3</span>, <span class=\"number\">105</span>], [<span class=\"number\">1</span>, <span class=\"number\">95</span>, <span class=\"number\">14</span>], [<span class=\"number\">3</span>, <span class=\"number\">1</span>], [<span class=\"number\">3</span>, <span class=\"number\">100</span>], [<span class=\"number\">2</span>, <span class=\"number\">176</span>, <span class=\"number\">33</span>], [<span class=\"number\">2</span>, <span class=\"number\">121</span>, <span class=\"number\">26</span>], [<span class=\"number\">3</span>, <span class=\"number\">52</span>], [<span class=\"number\">1</span>, <span class=\"number\">331</span>, <span class=\"number\">21</span>], [<span class=\"number\">2</span>, <span class=\"number\">83</span>, <span class=\"number\">14</span>]]);</span><br><span class=\"line\"><span class=\"comment\">// =&gt; [0,21,1441,21,1738,118,0,118,0,2002,168,1420,2494,200,1780,0,2330,200,3271,0,239,239,3700,3700,101,0,27,2706,2706,269,86,4109,4109,33,23,296,336,3215,4666,4682,336,4725,3257,3993,336,5853,4054,4054,336,4419,0,6323,0,336,336,336,6792,6937,7168,48,374,404,404,5232,404,404,404,404,5284,0,5549,289,8801,0,8804,26,485,485,5577,8825,5577,485,5723,485,0,5769,5803,0,485,485,485,485,5,7036,11646,15,15,485,7094,12035,12035,485,7169,485,12057,7234,0,841,12670,841,841,12944,0,7400,12973,841,7,13544,13690,8141,841,841,0,220,841,14789,868,15,868,14895,868,14905,868,14967,868,8684,755,13,14981,15,868]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.timeEnd(<span class=\"string\">'start'</span>);</span><br></pre></td></tr></table></figure>\n"},{"_content":"## mongodb 安装与使用\n\n### 安装\n\n> cd /usr/local\n>\n> sudo curl -O https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz\n> \n> sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgz\n> \n> sudo mv mongodb-osx-x86_64-4.0.9/ mongodb\n\n### 配置环境变量\n\n> export PATH=/usr/local/mongodb/bin:$PATH\n\n### 配置数据的存放位置\n\n```\nsudo mkdir -p /usr/local/var/mongodb\nsudo mkdir -p /usr/local/var/log/mongodb\nsudo chown runoob /usr/local/var/mongodb\nsudo chown runoob /usr/local/var/log/mongodb\n```\n\n### 运行\n\n```\n// 在后台运行\nmongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork\n\n// 在前台运行\nmongod --config /usr/local/etc/mongod.conf\n```\n\n### 查看是否已启动\n\n```\nps aux | grep -v grep | grep mongod\n```\n此时，可以使用 npm install mongodb 来操作 mongo 数据库了。\n\n### 结束运行\n\n```\nmongo\ndb.adminCommand({ \"shutdown\" : 1 })\n```\n\n### 查数据库数据\n\n[下载 robo](https://robomongo.org/download)\n\n### 查看 API\n\nhttps://docs.mongodb.com/manual/reference/method/db.collection.find/\n\n","source":"_posts/mongodb.md","raw":"## mongodb 安装与使用\n\n### 安装\n\n> cd /usr/local\n>\n> sudo curl -O https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz\n> \n> sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgz\n> \n> sudo mv mongodb-osx-x86_64-4.0.9/ mongodb\n\n### 配置环境变量\n\n> export PATH=/usr/local/mongodb/bin:$PATH\n\n### 配置数据的存放位置\n\n```\nsudo mkdir -p /usr/local/var/mongodb\nsudo mkdir -p /usr/local/var/log/mongodb\nsudo chown runoob /usr/local/var/mongodb\nsudo chown runoob /usr/local/var/log/mongodb\n```\n\n### 运行\n\n```\n// 在后台运行\nmongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork\n\n// 在前台运行\nmongod --config /usr/local/etc/mongod.conf\n```\n\n### 查看是否已启动\n\n```\nps aux | grep -v grep | grep mongod\n```\n此时，可以使用 npm install mongodb 来操作 mongo 数据库了。\n\n### 结束运行\n\n```\nmongo\ndb.adminCommand({ \"shutdown\" : 1 })\n```\n\n### 查数据库数据\n\n[下载 robo](https://robomongo.org/download)\n\n### 查看 API\n\nhttps://docs.mongodb.com/manual/reference/method/db.collection.find/\n\n","slug":"mongodb","published":1,"date":"2023-02-23T06:13:40.867Z","updated":"2023-02-23T06:13:40.867Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"clegpl2330007shoak0huokwl","content":"<h2 id=\"mongodb-安装与使用\"><a href=\"#mongodb-安装与使用\" class=\"headerlink\" title=\"mongodb 安装与使用\"></a>mongodb 安装与使用</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><blockquote>\n<p>cd /usr/local</p>\n<p>sudo curl -O <a href=\"https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz\" target=\"_blank\" rel=\"noopener\">https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz</a></p>\n<p>sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgz</p>\n<p>sudo mv mongodb-osx-x86_64-4.0.9/ mongodb</p>\n</blockquote>\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><blockquote>\n<p>export PATH=/usr/local/mongodb/bin:$PATH</p>\n</blockquote>\n<h3 id=\"配置数据的存放位置\"><a href=\"#配置数据的存放位置\" class=\"headerlink\" title=\"配置数据的存放位置\"></a>配置数据的存放位置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /usr/local/var/mongodb</span><br><span class=\"line\">sudo mkdir -p /usr/local/var/log/mongodb</span><br><span class=\"line\">sudo chown runoob /usr/local/var/mongodb</span><br><span class=\"line\">sudo chown runoob /usr/local/var/log/mongodb</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在后台运行</span><br><span class=\"line\">mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork</span><br><span class=\"line\"></span><br><span class=\"line\">// 在前台运行</span><br><span class=\"line\">mongod --config /usr/local/etc/mongod.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看是否已启动\"><a href=\"#查看是否已启动\" class=\"headerlink\" title=\"查看是否已启动\"></a>查看是否已启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep -v grep | grep mongod</span><br></pre></td></tr></table></figure>\n<p>此时，可以使用 npm install mongodb 来操作 mongo 数据库了。</p>\n<h3 id=\"结束运行\"><a href=\"#结束运行\" class=\"headerlink\" title=\"结束运行\"></a>结束运行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br><span class=\"line\">db.adminCommand(&#123; &quot;shutdown&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"查数据库数据\"><a href=\"#查数据库数据\" class=\"headerlink\" title=\"查数据库数据\"></a>查数据库数据</h3><p><a href=\"https://robomongo.org/download\" target=\"_blank\" rel=\"noopener\">下载 robo</a></p>\n<h3 id=\"查看-API\"><a href=\"#查看-API\" class=\"headerlink\" title=\"查看 API\"></a>查看 API</h3><p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.find/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/manual/reference/method/db.collection.find/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"mongodb-安装与使用\"><a href=\"#mongodb-安装与使用\" class=\"headerlink\" title=\"mongodb 安装与使用\"></a>mongodb 安装与使用</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><blockquote>\n<p>cd /usr/local</p>\n<p>sudo curl -O <a href=\"https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz\" target=\"_blank\" rel=\"noopener\">https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.9.tgz</a></p>\n<p>sudo tar -zxvf mongodb-osx-ssl-x86_64-4.0.9.tgz</p>\n<p>sudo mv mongodb-osx-x86_64-4.0.9/ mongodb</p>\n</blockquote>\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><blockquote>\n<p>export PATH=/usr/local/mongodb/bin:$PATH</p>\n</blockquote>\n<h3 id=\"配置数据的存放位置\"><a href=\"#配置数据的存放位置\" class=\"headerlink\" title=\"配置数据的存放位置\"></a>配置数据的存放位置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /usr/local/var/mongodb</span><br><span class=\"line\">sudo mkdir -p /usr/local/var/log/mongodb</span><br><span class=\"line\">sudo chown runoob /usr/local/var/mongodb</span><br><span class=\"line\">sudo chown runoob /usr/local/var/log/mongodb</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在后台运行</span><br><span class=\"line\">mongod --dbpath /usr/local/var/mongodb --logpath /usr/local/var/log/mongodb/mongo.log --fork</span><br><span class=\"line\"></span><br><span class=\"line\">// 在前台运行</span><br><span class=\"line\">mongod --config /usr/local/etc/mongod.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看是否已启动\"><a href=\"#查看是否已启动\" class=\"headerlink\" title=\"查看是否已启动\"></a>查看是否已启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep -v grep | grep mongod</span><br></pre></td></tr></table></figure>\n<p>此时，可以使用 npm install mongodb 来操作 mongo 数据库了。</p>\n<h3 id=\"结束运行\"><a href=\"#结束运行\" class=\"headerlink\" title=\"结束运行\"></a>结束运行</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br><span class=\"line\">db.adminCommand(&#123; &quot;shutdown&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"查数据库数据\"><a href=\"#查数据库数据\" class=\"headerlink\" title=\"查数据库数据\"></a>查数据库数据</h3><p><a href=\"https://robomongo.org/download\" target=\"_blank\" rel=\"noopener\">下载 robo</a></p>\n<h3 id=\"查看-API\"><a href=\"#查看-API\" class=\"headerlink\" title=\"查看 API\"></a>查看 API</h3><p><a href=\"https://docs.mongodb.com/manual/reference/method/db.collection.find/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/manual/reference/method/db.collection.find/</a></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}